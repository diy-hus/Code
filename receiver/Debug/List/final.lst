
AVRASM ver. 2.1.30  D:\Dropbox\2019\Project\Singapore\Code\Robot\Debug\List\final.asm Mon Aug 26 13:59:05 2019

D:\Dropbox\2019\Project\Singapore\Code\Robot\Debug\List\final.asm(1086): warning: Register r5 already defined by the .DEF directive
D:\Dropbox\2019\Project\Singapore\Code\Robot\Debug\List\final.asm(1087): warning: Register r4 already defined by the .DEF directive
D:\Dropbox\2019\Project\Singapore\Code\Robot\Debug\List\final.asm(1088): warning: Register r7 already defined by the .DEF directive
D:\Dropbox\2019\Project\Singapore\Code\Robot\Debug\List\final.asm(1089): warning: Register r6 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega8
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega8
                 	#pragma AVRPART MEMORY PROG_FLASH 8192
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	RCALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	RCALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _Code_tay_cam=R5
                 	.DEF _xx=R4
                 	.DEF _dem=R7
                 	.DEF _RC=R6
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 c13d      	RJMP __RESET
000001 cffe      	RJMP 0x00
000002 cffd      	RJMP 0x00
000003 cffc      	RJMP 0x00
000004 cffb      	RJMP 0x00
000005 cffa      	RJMP 0x00
000006 cff9      	RJMP 0x00
000007 cff8      	RJMP 0x00
000008 cff7      	RJMP 0x00
000009 c160      	RJMP _timer0_ovf_isr
00000a cff5      	RJMP 0x00
00000b cff4      	RJMP 0x00
00000c cff3      	RJMP 0x00
00000d cff2      	RJMP 0x00
00000e cff1      	RJMP 0x00
00000f cff0      	RJMP 0x00
000010 cfef      	RJMP 0x00
000011 cfee      	RJMP 0x00
000012 cfed      	RJMP 0x00
                 
                 _font5x7:
000013 0705
000014 6020
000015 0000
000016 0000      	.DB  0x5,0x7,0x20,0x60,0x0,0x0,0x0,0x0
000017 0000
000018 0400
000019 040a
00001a 0700      	.DB  0x0,0x0,0x0,0x4,0xA,0x4,0x0,0x7
00001b 0700
00001c 1400
00001d 147f
00001e 147f      	.DB  0x0,0x7,0x0,0x14,0x7F,0x14,0x7F,0x14
00001f 2a24
000020 2a7f
000021 2312
000022 0813      	.DB  0x24,0x2A,0x7F,0x2A,0x12,0x23,0x13,0x8
000023 6264
000024 4936
000025 2255
000026 0050      	.DB  0x64,0x62,0x36,0x49,0x55,0x22,0x50,0x0
000027 0305
000028 0000
000029 1c00
00002a 4122      	.DB  0x5,0x3,0x0,0x0,0x0,0x1C,0x22,0x41
00002b 0000
00002c 2241
00002d 001c
00002e 2a08      	.DB  0x0,0x0,0x41,0x22,0x1C,0x0,0x8,0x2A
00002f 2a1c
000030 0808
000031 3e08
000032 0808      	.DB  0x1C,0x2A,0x8,0x8,0x8,0x3E,0x8,0x8
000033 5000
000034 0030
000035 0800
000036 0808      	.DB  0x0,0x50,0x30,0x0,0x0,0x8,0x8,0x8
000037 0808
000038 3000
000039 0030
00003a 2000      	.DB  0x8,0x8,0x0,0x30,0x30,0x0,0x0,0x20
00003b 0810
00003c 0204
00003d 513e
00003e 4549      	.DB  0x10,0x8,0x4,0x2,0x3E,0x51,0x49,0x45
00003f 003e
000040 7f42
000041 0040
000042 6142      	.DB  0x3E,0x0,0x42,0x7F,0x40,0x0,0x42,0x61
000043 4951
000044 2146
000045 4541
000046 314b      	.DB  0x51,0x49,0x46,0x21,0x41,0x45,0x4B,0x31
000047 1418
000048 7f12
000049 2710
00004a 4545      	.DB  0x18,0x14,0x12,0x7F,0x10,0x27,0x45,0x45
00004b 3945
00004c 4a3c
00004d 4949
00004e 0130      	.DB  0x45,0x39,0x3C,0x4A,0x49,0x49,0x30,0x1
00004f 0971
000050 0305
000051 4936
000052 4949      	.DB  0x71,0x9,0x5,0x3,0x36,0x49,0x49,0x49
000053 0636
000054 4949
000055 1e29
000056 3600      	.DB  0x36,0x6,0x49,0x49,0x29,0x1E,0x0,0x36
000057 0036
000058 0000
000059 3656
00005a 0000      	.DB  0x36,0x0,0x0,0x0,0x56,0x36,0x0,0x0
00005b 0800
00005c 2214
00005d 1441
00005e 1414      	.DB  0x0,0x8,0x14,0x22,0x41,0x14,0x14,0x14
00005f 1414
000060 2241
000061 0814
000062 0200      	.DB  0x14,0x14,0x41,0x22,0x14,0x8,0x0,0x2
000063 5101
000064 0609
000065 4932
000066 4179      	.DB  0x1,0x51,0x9,0x6,0x32,0x49,0x79,0x41
000067 7e3e
000068 1111
000069 7e11
00006a 497f      	.DB  0x3E,0x7E,0x11,0x11,0x11,0x7E,0x7F,0x49
00006b 4949
00006c 3e36
00006d 4141
00006e 2241      	.DB  0x49,0x49,0x36,0x3E,0x41,0x41,0x41,0x22
00006f 417f
000070 2241
000071 7f1c
000072 4949      	.DB  0x7F,0x41,0x41,0x22,0x1C,0x7F,0x49,0x49
000073 4149
000074 097f
000075 0109
000076 3e01      	.DB  0x49,0x41,0x7F,0x9,0x9,0x1,0x1,0x3E
000077 4141
000078 3251
000079 087f
00007a 0808      	.DB  0x41,0x41,0x51,0x32,0x7F,0x8,0x8,0x8
00007b 007f
00007c 7f41
00007d 0041
00007e 4020      	.DB  0x7F,0x0,0x41,0x7F,0x41,0x0,0x20,0x40
00007f 3f41
000080 7f01
000081 1408
000082 4122      	.DB  0x41,0x3F,0x1,0x7F,0x8,0x14,0x22,0x41
000083 407f
000084 4040
000085 7f40
000086 0402      	.DB  0x7F,0x40,0x40,0x40,0x40,0x7F,0x2,0x4
000087 7f02
000088 047f
000089 1008
00008a 3e7f      	.DB  0x2,0x7F,0x7F,0x4,0x8,0x10,0x7F,0x3E
00008b 4141
00008c 3e41
00008d 097f
00008e 0909      	.DB  0x41,0x41,0x41,0x3E,0x7F,0x9,0x9,0x9
00008f 3e06
000090 5141
000091 5e21
000092 097f      	.DB  0x6,0x3E,0x41,0x51,0x21,0x5E,0x7F,0x9
000093 2919
000094 4646
000095 4949
000096 3149      	.DB  0x19,0x29,0x46,0x46,0x49,0x49,0x49,0x31
000097 0101
000098 017f
000099 3f01
00009a 4040      	.DB  0x1,0x1,0x7F,0x1,0x1,0x3F,0x40,0x40
00009b 3f40
00009c 201f
00009d 2040
00009e 7f1f      	.DB  0x40,0x3F,0x1F,0x20,0x40,0x20,0x1F,0x7F
00009f 1820
0000a0 7f20
0000a1 1463
0000a2 1408      	.DB  0x20,0x18,0x20,0x7F,0x63,0x14,0x8,0x14
0000a3 0363
0000a4 7804
0000a5 0304
0000a6 5161      	.DB  0x63,0x3,0x4,0x78,0x4,0x3,0x61,0x51
0000a7 4549
0000a8 0043
0000a9 7f00
0000aa 4141      	.DB  0x49,0x45,0x43,0x0,0x0,0x7F,0x41,0x41
0000ab 0402
0000ac 1008
0000ad 4120
0000ae 7f41      	.DB  0x2,0x4,0x8,0x10,0x20,0x41,0x41,0x7F
0000af 0000
0000b0 0204
0000b1 0201
0000b2 4004      	.DB  0x0,0x0,0x4,0x2,0x1,0x2,0x4,0x40
0000b3 4040
0000b4 4040
0000b5 0100
0000b6 0402      	.DB  0x40,0x40,0x40,0x40,0x0,0x1,0x2,0x4
0000b7 2000
0000b8 5454
0000b9 7854
0000ba 487f      	.DB  0x0,0x20,0x54,0x54,0x54,0x78,0x7F,0x48
0000bb 4444
0000bc 3838
0000bd 4444
0000be 2044      	.DB  0x44,0x44,0x38,0x38,0x44,0x44,0x44,0x20
0000bf 4438
0000c0 4844
0000c1 387f
0000c2 5454      	.DB  0x38,0x44,0x44,0x48,0x7F,0x38,0x54,0x54
0000c3 1854
0000c4 7e08
0000c5 0109
0000c6 0802      	.DB  0x54,0x18,0x8,0x7E,0x9,0x1,0x2,0x8
0000c7 5414
0000c8 3c54
0000c9 087f
0000ca 0404      	.DB  0x14,0x54,0x54,0x3C,0x7F,0x8,0x4,0x4
0000cb 0078
0000cc 7d44
0000cd 0040
0000ce 4020      	.DB  0x78,0x0,0x44,0x7D,0x40,0x0,0x20,0x40
0000cf 3d44
0000d0 0000
0000d1 107f
0000d2 4428      	.DB  0x44,0x3D,0x0,0x0,0x7F,0x10,0x28,0x44
0000d3 4100
0000d4 407f
0000d5 7c00
0000d6 1804      	.DB  0x0,0x41,0x7F,0x40,0x0,0x7C,0x4,0x18
0000d7 7804
0000d8 087c
0000d9 0404
0000da 3878      	.DB  0x4,0x78,0x7C,0x8,0x4,0x4,0x78,0x38
0000db 4444
0000dc 3844
0000dd 147c
0000de 1414      	.DB  0x44,0x44,0x44,0x38,0x7C,0x14,0x14,0x14
0000df 0808
0000e0 1414
0000e1 7c18
0000e2 087c      	.DB  0x8,0x8,0x14,0x14,0x18,0x7C,0x7C,0x8
0000e3 0404
0000e4 4808
0000e5 5454
0000e6 2054      	.DB  0x4,0x4,0x8,0x48,0x54,0x54,0x54,0x20
0000e7 3f04
0000e8 4044
0000e9 3c20
0000ea 4040      	.DB  0x4,0x3F,0x44,0x40,0x20,0x3C,0x40,0x40
0000eb 7c20
0000ec 201c
0000ed 2040
0000ee 3c1c      	.DB  0x20,0x7C,0x1C,0x20,0x40,0x20,0x1C,0x3C
0000ef 3040
0000f0 3c40
0000f1 2844
0000f2 2810      	.DB  0x40,0x30,0x40,0x3C,0x44,0x28,0x10,0x28
0000f3 0c44
0000f4 5050
0000f5 3c50
0000f6 6444      	.DB  0x44,0xC,0x50,0x50,0x50,0x3C,0x44,0x64
0000f7 4c54
0000f8 0044
0000f9 3608
0000fa 0041      	.DB  0x54,0x4C,0x44,0x0,0x8,0x36,0x41,0x0
0000fb 0000
0000fc 007f
0000fd 0000
0000fe 3641      	.DB  0x0,0x0,0x7F,0x0,0x0,0x0,0x41,0x36
0000ff 0008
000100 0102
000101 0402
000102 7f02      	.DB  0x8,0x0,0x2,0x1,0x2,0x4,0x2,0x7F
000103 4141
000104 7f41      	.DB  0x41,0x41,0x41,0x7F
                 _tbl10_G100:
000105 2710
000106 03e8
000107 0064
000108 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000109 0001      	.DB  0x1,0x0
                 _tbl16_G100:
00010a 1000
00010b 0100
00010c 0010
00010d 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 __glcd_mask:
00010e 0100
00010f 0703
000110 1f0f
000111 7f3f      	.DB  0x0,0x1,0x3,0x7,0xF,0x1F,0x3F,0x7F
D:\Dropbox\2019\Project\Singapore\Code\Robot\Debug\List\final.asm(1187): warning: .cseg .db misalignment - padding zero byte
000112 00ff      	.DB  0xFF
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000113 537b
000114 0000      	.DB  0x7B,0x53,0x0,0x0
                 
                 _0x0:
000115 6f52
000116 6f62
000117 6974
000118 0063      	.DB  0x52,0x6F,0x62,0x6F,0x74,0x69,0x63,0x0
000119 4f46
00011a 0052
00011b 7473
00011c 7261      	.DB  0x46,0x4F,0x52,0x0,0x73,0x74,0x61,0x72
00011d 6574
00011e 7372
00011f 4400
000120 5949      	.DB  0x74,0x65,0x72,0x73,0x0,0x44,0x49,0x59
000121 482d
000122 5355
000123 2500
000124 0075      	.DB  0x2D,0x48,0x55,0x53,0x0,0x25,0x75,0x0
                 _0x2100060:
D:\Dropbox\2019\Project\Singapore\Code\Robot\Debug\List\final.asm(1199): warning: .cseg .db misalignment - padding zero byte
000125 0001      	.DB  0x1
                 _0x2100000:
000126 4e2d
000127 4e41
000128 4900
000129 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
D:\Dropbox\2019\Project\Singapore\Code\Robot\Debug\List\final.asm(1202): warning: .cseg .db misalignment - padding zero byte
00012a 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
00012b 0004      	.DW  0x04
00012c 0004      	.DW  0x04
00012d 0226      	.DW  __REG_VARS*2
                 
00012e 0008      	.DW  0x08
00012f 0160      	.DW  _0xA
000130 022a      	.DW  _0x0*2
                 
000131 0004      	.DW  0x04
000132 0168      	.DW  _0xA+8
000133 0232      	.DW  _0x0*2+8
                 
000134 0009      	.DW  0x09
000135 016c      	.DW  _0xA+12
000136 0236      	.DW  _0x0*2+12
                 
000137 0008      	.DW  0x08
000138 0175      	.DW  _0xA+21
000139 023f      	.DW  _0x0*2+21
                 
00013a 0001      	.DW  0x01
00013b 042a      	.DW  __seed_G108
00013c 024a      	.DW  _0x2100060*2
                 
                 _0xFFFFFFFF:
00013d 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00013e 94f8      	CLI
00013f 27ee      	CLR  R30
000140 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000141 e0f1      	LDI  R31,1
000142 bffb      	OUT  GICR,R31
000143 bfeb      	OUT  GICR,R30
000144 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000145 e08d      	LDI  R24,(14-2)+1
000146 e0a2      	LDI  R26,2
000147 27bb      	CLR  R27
                 __CLEAR_REG:
000148 93ed      	ST   X+,R30
000149 958a      	DEC  R24
00014a f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00014b e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00014c e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00014d e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00014e 93ed      	ST   X+,R30
00014f 9701      	SBIW R24,1
000150 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000151 e5e6      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000152 e0f2      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000153 9185      	LPM  R24,Z+
000154 9195      	LPM  R25,Z+
000155 9700      	SBIW R24,0
000156 f061      	BREQ __GLOBAL_INI_END
000157 91a5      	LPM  R26,Z+
000158 91b5      	LPM  R27,Z+
000159 9005      	LPM  R0,Z+
00015a 9015      	LPM  R1,Z+
00015b 01bf      	MOVW R22,R30
00015c 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00015d 9005      	LPM  R0,Z+
00015e 920d      	ST   X+,R0
00015f 9701      	SBIW R24,1
000160 f7e1      	BRNE __GLOBAL_INI_LOOP
000161 01fb      	MOVW R30,R22
000162 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000163 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000164 bfed      	OUT  SPL,R30
000165 e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000166 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000167 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000168 e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000169 c0ff      	RJMP _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;unsigned char Code_tay_cam = 0x53; //
                 ;#include <mega8.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include "init.c"
                 ;#define servo PORTD.0
                 ;#define BUTTON PIND.1
                 ;#define LED PORTB.7
                 ;//=======================DC motor=====
                 ;#define BL_Nokia   PORTC.5
                 ;//--------
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;#include <glcd.h>
                 ;#include <glcd_types.h>
                 ;#include <font5x7.h>
                 ;unsigned char xx = 123;
                 ;unsigned char glcd_buff[150];
                 ;unsigned char dem=0;
                 ;unsigned char RC;
                 ;//-----dieu khien servo-----
                 ;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
                 ; 0000 0003 {
                 
                 	.CSEG
                 _timer0_ovf_isr:
                 ; .FSTART _timer0_ovf_isr
00016a 93ea      	ST   -Y,R30
00016b b7ef      	IN   R30,SREG
00016c 93ea      	ST   -Y,R30
                 ;
                 ;TCNT0=0x9C;
00016d e9ec      	LDI  R30,LOW(156)
00016e bfe2      	OUT  0x32,R30
                 ;dem++;
00016f 9473      	INC  R7
                 ;if(dem==200){dem=0;}
000170 ece8      	LDI  R30,LOW(200)
000171 15e7      	CP   R30,R7
000172 f409      	BRNE _0x3
000173 2477      	CLR  R7
                 ;if(dem<RC){servo=1;}else{servo=0;}
                 _0x3:
000174 1476      	CP   R7,R6
000175 f410      	BRSH _0x4
000176 9a90      	SBI  0x12,0
000177 c001      	RJMP _0x7
                 _0x4:
000178 9890      	CBI  0x12,0
                 _0x7:
                 ;}
000179 91e9      	LD   R30,Y+
00017a bfef      	OUT  SREG,R30
00017b 91e9      	LD   R30,Y+
00017c 9518      	RETI
                 ; .FEND
                 ;void Init_System()
                 ;{
                 _Init_System:
                 ; .FSTART _Init_System
                 ;GLCDINIT_t glcd_init_data;
                 ;//===================================================
                 ;DDRB=(1<<DDB7) | (1<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (1<<DDB2) | (1<<DDB1) | (1<<DDB0);
00017d 9728      	SBIW R28,8
                 ;	glcd_init_data -> Y+0
00017e ece7      	LDI  R30,LOW(199)
00017f bbe7      	OUT  0x17,R30
                 ;PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
000180 e0e0      	LDI  R30,LOW(0)
000181 bbe8      	OUT  0x18,R30
                 ;//===================================================
                 ;DDRC=(0<<DDC6) | (1<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
000182 e2e0      	LDI  R30,LOW(32)
000183 bbe4      	OUT  0x14,R30
                 ;PORTC=(0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
000184 e0e0      	LDI  R30,LOW(0)
000185 bbe5      	OUT  0x15,R30
                 ;//===================================================
                 ;DDRD=(0<<DDD7) | (1<<DDD6) | (1<<DDD5) | (1<<DDD4) | (1<<DDD3) | (0<<DDD2) | (0<<DDD1) | (1<<DDD0);
000186 e7e9      	LDI  R30,LOW(121)
000187 bbe1      	OUT  0x11,R30
                 ;PORTD=(1<<PORTD7) | (1<<PORTD6) | (1<<PORTD5) | (1<<PORTD4) | (1<<PORTD3) | (1<<PORTD2) | (1<<PORTD1) | (0<<PORTD0);
000188 efee      	LDI  R30,LOW(254)
000189 bbe2      	OUT  0x12,R30
                 ;//===================================================
                 ;
                 ;TCCR0=0x02;
00018a e0e2      	LDI  R30,LOW(2)
00018b bfe3      	OUT  0x33,R30
                 ;TCNT0=0x9C;
00018c e9ec      	LDI  R30,LOW(156)
00018d bfe2      	OUT  0x32,R30
                 ;
                 ;TCCR1A=(1<<COM1A1) | (0<<COM1A0) | (1<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (1<<WGM10);
00018e eae1      	LDI  R30,LOW(161)
00018f bdef      	OUT  0x2F,R30
                 ;TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (1<<WGM12) | (0<<CS12) | (1<<CS11) | (1<<CS10);
000190 e0eb      	LDI  R30,LOW(11)
000191 bdee      	OUT  0x2E,R30
                 ;TCNT1H=0x00;
000192 e0e0      	LDI  R30,LOW(0)
000193 bded      	OUT  0x2D,R30
                 ;TCNT1L=0x00;
000194 bdec      	OUT  0x2C,R30
                 ;ICR1H=0x00;
000195 bde7      	OUT  0x27,R30
                 ;ICR1L=0x00;
000196 bde6      	OUT  0x26,R30
                 ;OCR1AH=0x00;
000197 bdeb      	OUT  0x2B,R30
                 ;OCR1AL=0x00;
000198 bdea      	OUT  0x2A,R30
                 ;OCR1BH=0x00;
000199 bde9      	OUT  0x29,R30
                 ;OCR1BL=0x00;
00019a bde8      	OUT  0x28,R30
                 ;
                 ;ASSR=0<<AS2;
00019b bde2      	OUT  0x22,R30
                 ;TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (0<<CS22) | (0<<CS21) | (0<<CS20);
00019c bde5      	OUT  0x25,R30
                 ;TCNT2=0x00;
00019d bde4      	OUT  0x24,R30
                 ;OCR2=0x00;
00019e bde3      	OUT  0x23,R30
                 ;TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (1<<TOIE0);
00019f e0e1      	LDI  R30,LOW(1)
0001a0 bfe9      	OUT  0x39,R30
                 ;
                 ;MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
0001a1 e0e0      	LDI  R30,LOW(0)
0001a2 bfe5      	OUT  0x35,R30
                 ;
                 ;UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
0001a3 b9ea      	OUT  0xA,R30
                 ;
                 ;ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
0001a4 e8e0      	LDI  R30,LOW(128)
0001a5 b9e8      	OUT  0x8,R30
                 ;SFIOR=(0<<ACME);
0001a6 e0e0      	LDI  R30,LOW(0)
0001a7 bfe0      	OUT  0x30,R30
                 ;
                 ;ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADFR) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
0001a8 b9e6      	OUT  0x6,R30
                 ;
                 ;SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
0001a9 b9ed      	OUT  0xD,R30
                 ;
                 ;TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
0001aa bfe6      	OUT  0x36,R30
                 ;
                 ;glcd_init_data.font=font5x7;
0001ab e2e6      	LDI  R30,LOW(_font5x7*2)
0001ac e0f0      	LDI  R31,HIGH(_font5x7*2)
0001ad 83e8      	ST   Y,R30
0001ae 83f9      	STD  Y+1,R31
                 ;glcd_init_data.readxmem=NULL;
0001af e0e0      	LDI  R30,LOW(0)
0001b0 83ea      	STD  Y+2,R30
0001b1 83eb      	STD  Y+2+1,R30
                 ;glcd_init_data.writexmem=NULL;
0001b2 83ec      	STD  Y+4,R30
0001b3 83ed      	STD  Y+4+1,R30
                 ;glcd_init_data.temp_coef=160;
0001b4 81ee      	LDD  R30,Y+6
0001b5 7fec      	ANDI R30,LOW(0xFC)
0001b6 83ee      	STD  Y+6,R30
                 ;glcd_init_data.bias=3;
0001b7 7ee3      	ANDI R30,LOW(0xE3)
0001b8 60ec      	ORI  R30,LOW(0xC)
0001b9 83ee      	STD  Y+6,R30
                 ;glcd_init_data.vlcd=60;
0001ba 81ef      	LDD  R30,Y+7
0001bb 78e0      	ANDI R30,LOW(0x80)
0001bc 63ec      	ORI  R30,LOW(0x3C)
0001bd 83ef      	STD  Y+7,R30
                 ;glcd_init(&glcd_init_data);
0001be 01de      	MOVW R26,R28
0001bf d289      	RCALL _glcd_init
                 ;
                 ;#asm("sei")
0001c0 9478      	sei
                 ;RC=10;
0001c1 e0ea      	LDI  R30,LOW(10)
0001c2 2e6e      	MOV  R6,R30
                 ;glcd_moveto(0,0);
0001c3 d666      	RCALL SUBOPT_0x0
0001c4 e0a0      	LDI  R26,LOW(0)
0001c5 d5ca      	RCALL _glcd_moveto
                 ;glcd_outtext("Robotic");
                +
0001c6 e6a0     +LDI R26 , LOW ( _0xA + ( 0 ) )
0001c7 e0b1     +LDI R27 , HIGH ( _0xA + ( 0 ) )
                 	__POINTW2MN _0xA,0
0001c8 d5b8      	RCALL _glcd_outtext
                 ;glcd_moveto(28,13);
0001c9 e1ec      	LDI  R30,LOW(28)
0001ca 93ea      	ST   -Y,R30
0001cb e0ad      	LDI  R26,LOW(13)
0001cc d5c3      	RCALL _glcd_moveto
                 ;glcd_outtext("FOR");
                +
0001cd e6a8     +LDI R26 , LOW ( _0xA + ( 8 ) )
0001ce e0b1     +LDI R27 , HIGH ( _0xA + ( 8 ) )
                 	__POINTW2MN _0xA,8
0001cf d5b1      	RCALL _glcd_outtext
                 ;glcd_moveto(35,24);
0001d0 e2e3      	LDI  R30,LOW(35)
0001d1 93ea      	ST   -Y,R30
0001d2 e1a8      	LDI  R26,LOW(24)
0001d3 d5bc      	RCALL _glcd_moveto
                 ;glcd_outtext("starters");
                +
0001d4 e6ac     +LDI R26 , LOW ( _0xA + ( 12 ) )
0001d5 e0b1     +LDI R27 , HIGH ( _0xA + ( 12 ) )
                 	__POINTW2MN _0xA,12
0001d6 d5aa      	RCALL _glcd_outtext
                 ;glcd_moveto(25,40);
0001d7 e1e9      	LDI  R30,LOW(25)
0001d8 93ea      	ST   -Y,R30
0001d9 e2a8      	LDI  R26,LOW(40)
0001da d5b5      	RCALL _glcd_moveto
                 ;glcd_outtext("DIY-HUS");
                +
0001db e7a5     +LDI R26 , LOW ( _0xA + ( 21 ) )
0001dc e0b1     +LDI R27 , HIGH ( _0xA + ( 21 ) )
                 	__POINTW2MN _0xA,21
0001dd d5a3      	RCALL _glcd_outtext
                 ;delay_ms(1000);
0001de eea8      	LDI  R26,LOW(1000)
0001df e0b3      	LDI  R27,HIGH(1000)
0001e0 d73e      	RCALL _delay_ms
                 ;}
0001e1 c59d      	RJMP _0x2120006
                 ; .FEND
                 
                 	.DSEG
                 _0xA:
000160           	.BYTE 0x1D
                 ;#include "rf.c"
                 ;
                 ;#define CE PORTD.4     //out 1
                 ;#define CSN PORTD.5      //out 1
                 ;#define SCK PORTD.3       //out 1
                 ;#define MOSI PORTD.6      //out 1
                 ;#define MISO PIND.2       //in p
                 ;#define IRQ PIND.7       //in p
                 ;
                 ;/*
                 ;#define CE PORTD.2
                 ;#define CSN PORTD.7
                 ;#define SCK PORTD.3
                 ;#define MOSI PORTD.6
                 ;#define MISO PIND.4
                 ;#define IRQ PIND.5
                 ;*/
                 ;
                 ;//--------------*---------------
                 ;unsigned char SPI_RW(unsigned char Buff);                                       //Function used for text moving
                 ;unsigned char SPI_Read(void);
                 ;void RF_Init();                                                                 //Function allow to Initialize RF device
                 ;void RF_Write(unsigned char Reg_Add, unsigned char Value);                      //Function to write a value to a registe ...
                 ;void RF_Command(unsigned char command);                                         //Function to write a command
                 ;void RF_Write_Address(unsigned char Address);                                   //Function to write TX and RX address
                 ;void RX_Mode();                                                          //Function to put nRF in RX mode
                 ;void RF_Config();                                                               //Function to config the nRF
                 ;unsigned char RF_RX_Read();                                                     //Function to read the data from RX FIFO
                 ;
                 ;unsigned char SPI_RW(unsigned char Buff)
                 ; 0000 0004 {
                 
                 	.CSEG
                 _SPI_RW:
                 ; .FSTART _SPI_RW
                 ;    unsigned char bit_ctr;
                 ;       for(bit_ctr=0;bit_ctr<8;bit_ctr++) // output 8-bit
0001e2 d64a      	RCALL SUBOPT_0x1
                 ;	Buff -> Y+1
                 ;	bit_ctr -> R17
0001e3 e010      	LDI  R17,LOW(0)
                 _0xC:
0001e4 3018      	CPI  R17,8
0001e5 f488      	BRSH _0xD
                 ;       {
                 ;        MOSI = (Buff & 0x80);         // output 'uchar', MSB to MOSI
0001e6 81e9      	LDD  R30,Y+1
0001e7 78e0      	ANDI R30,LOW(0x80)
0001e8 f411      	BRNE _0xE
0001e9 9896      	CBI  0x12,6
0001ea c001      	RJMP _0xF
                 _0xE:
0001eb 9a96      	SBI  0x12,6
                 _0xF:
                 ;        delay_us(5);
0001ec d643      	RCALL SUBOPT_0x2
                 ;        Buff = (Buff << 1);           // shift next bit into MSB..
0001ed 81e9      	LDD  R30,Y+1
0001ee 0fee      	LSL  R30
0001ef 83e9      	STD  Y+1,R30
                 ;        SCK = 1;                      // Set SCK high..
0001f0 d643      	RCALL SUBOPT_0x3
                 ;        delay_us(5);
                 ;        Buff |= MISO;                 // capture current MISO bit
0001f1 81a9      	LDD  R26,Y+1
0001f2 2bea      	OR   R30,R26
0001f3 83e9      	STD  Y+1,R30
                 ;        SCK = 0;                      // ..then set SCK low again
0001f4 9893      	CBI  0x12,3
                 ;       }
0001f5 5f1f      	SUBI R17,-1
0001f6 cfed      	RJMP _0xC
                 _0xD:
                 ;    return(Buff);                     // return read uchar
0001f7 81e9      	LDD  R30,Y+1
0001f8 8118      	LDD  R17,Y+0
0001f9 c5d0      	RJMP _0x2120003
                 ;}
                 ; .FEND
                 ;unsigned char SPI_Read(void)
                 ;{   unsigned char Buff=0;
                 _SPI_Read:
                 ; .FSTART _SPI_Read
                 ;    unsigned char bit_ctr;
                 ;       for(bit_ctr=0;bit_ctr<8;bit_ctr++) // output 8-bit
0001fa d780      	RCALL __SAVELOCR2
                 ;	Buff -> R17
                 ;	bit_ctr -> R16
0001fb e010      	LDI  R17,0
0001fc e000      	LDI  R16,LOW(0)
                 _0x15:
0001fd 3008      	CPI  R16,8
0001fe f438      	BRSH _0x16
                 ;       {
                 ;        delay_us(5);
0001ff d630      	RCALL SUBOPT_0x2
                 ;        Buff = (Buff << 1);           // shift next bit into MSB..
000200 0f11      	LSL  R17
                 ;        SCK = 1;                      // Set SCK high..
000201 d632      	RCALL SUBOPT_0x3
                 ;        delay_us(5);
                 ;        Buff |= MISO;                 // capture current MISO bit
000202 2b1e      	OR   R17,R30
                 ;        SCK = 0;                      // ..then set SCK low again
000203 9893      	CBI  0x12,3
                 ;       }
000204 5f0f      	SUBI R16,-1
000205 cff7      	RJMP _0x15
                 _0x16:
                 ;    return(Buff);                     // return read uchar
000206 2fe1      	MOV  R30,R17
000207 9109      	LD   R16,Y+
000208 9119      	LD   R17,Y+
000209 9508      	RET
                 ;}
                 ; .FEND
                 ;void RF_Init()                                                    //Function allow to Initialize RF device
                 ;{
                 _RF_Init:
                 ; .FSTART _RF_Init
                 ;    CE=1;
00020a 9a94      	SBI  0x12,4
                 ;    delay_us(700);
                +
00020b e788     +LDI R24 , LOW ( 1400 )
00020c e095     +LDI R25 , HIGH ( 1400 )
                +__DELAY_USW_LOOP :
00020d 9701     +SBIW R24 , 1
00020e f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 1400
                 ;    CE=0;
00020f 9894      	CBI  0x12,4
                 ;    CSN=1;
000210 9a95      	SBI  0x12,5
                 ;}
000211 9508      	RET
                 ; .FEND
                 ;void RF_Write(unsigned char Reg_Add, unsigned char Value)         //Function to write a value to a register address
                 ;{
                 _RF_Write:
                 ; .FSTART _RF_Write
                 ;    CSN=0;
000212 93aa      	ST   -Y,R26
                 ;	Reg_Add -> Y+1
                 ;	Value -> Y+0
000213 9895      	CBI  0x12,5
                 ;    SPI_RW(0b00100000|Reg_Add);
000214 81e9      	LDD  R30,Y+1
000215 62e0      	ORI  R30,0x20
000216 2fae      	MOV  R26,R30
000217 d622      	RCALL SUBOPT_0x4
                 ;    SPI_RW(Value);
                 ;    CSN=1;
000218 d624      	RCALL SUBOPT_0x5
                 ;    delay_us(10);
                 ;}
000219 c5b0      	RJMP _0x2120003
                 ; .FEND
                 ;void RF_Command(unsigned char command)                            //Function to write a command
                 ;{
                 _RF_Command:
                 ; .FSTART _RF_Command
                 ;    CSN=0;
00021a 93aa      	ST   -Y,R26
                 ;	command -> Y+0
00021b 9895      	CBI  0x12,5
                 ;    SPI_RW(command);
00021c 81a8      	LD   R26,Y
00021d dfc4      	RCALL _SPI_RW
                 ;    CSN=1;
00021e d61e      	RCALL SUBOPT_0x5
                 ;    delay_us(10);
                 ;}
00021f c297      	RJMP _0x212000A
                 ; .FEND
                 ;void RF_Write_Address(unsigned char Address)                      //Function to write TX and RX address
                 ;{
                 _RF_Write_Address:
                 ; .FSTART _RF_Write_Address
                 ;    CSN=0;
000220 93aa      	ST   -Y,R26
                 ;	Address -> Y+0
000221 9895      	CBI  0x12,5
                 ;    RF_Write(0x03,0b00000011);
000222 e0e3      	LDI  R30,LOW(3)
000223 93ea      	ST   -Y,R30
000224 e0a3      	LDI  R26,LOW(3)
000225 dfec      	RCALL _RF_Write
                 ;    CSN=1;
000226 d616      	RCALL SUBOPT_0x5
                 ;    delay_us(10);
                 ;    CSN=0;
000227 9895      	CBI  0x12,5
                 ;    SPI_RW(0b00100000|0x0A);
000228 e2aa      	LDI  R26,LOW(42)
000229 d610      	RCALL SUBOPT_0x4
                 ;    SPI_RW(Address);
                 ;    SPI_RW(Address);
00022a d617      	RCALL SUBOPT_0x6
                 ;    SPI_RW(Address);
                 ;    SPI_RW(Address);
00022b d616      	RCALL SUBOPT_0x6
                 ;    SPI_RW(Address);
                 ;    CSN=1;
00022c d610      	RCALL SUBOPT_0x5
                 ;    delay_us(10);
                 ;    CSN=0;
00022d 9895      	CBI  0x12,5
                 ;    SPI_RW(0b00100000|0x10);
00022e e3a0      	LDI  R26,LOW(48)
00022f d60a      	RCALL SUBOPT_0x4
                 ;    SPI_RW(Address);
                 ;    SPI_RW(Address);
000230 d611      	RCALL SUBOPT_0x6
                 ;    SPI_RW(Address);
                 ;    SPI_RW(Address);
000231 d610      	RCALL SUBOPT_0x6
                 ;    SPI_RW(Address);
                 ;    CSN=1;
000232 d60a      	RCALL SUBOPT_0x5
                 ;    delay_us(10);
                 ;}
000233 c283      	RJMP _0x212000A
                 ; .FEND
                 ;
                 ;void RX_Mode()                                             //Function to put nRF in RX mode
                 ;{
                 _RX_Mode:
                 ; .FSTART _RX_Mode
                 ;    RF_Write(0x00,0b00011111);     //CONFIG 0x00
000234 d5f5      	RCALL SUBOPT_0x0
000235 e1af      	LDI  R26,LOW(31)
000236 dfdb      	RCALL _RF_Write
                 ;    CE=1;
000237 9a94      	SBI  0x12,4
                 ;}
000238 9508      	RET
                 ; .FEND
                 ;
                 ;void RF_Config()                                                  //Function to config the nRF
                 ;{
                 _RF_Config:
                 ; .FSTART _RF_Config
                 ;RF_Command(0b11100010);     //Flush RX
000239 eea2      	LDI  R26,LOW(226)
00023a dfdf      	RCALL _RF_Command
                 ;delay_us(10);
                +
00023b e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
00023c 958a     +DEC R24
00023d f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
                 ;RF_Write(0x00,0b00011111);     //CONFIG 0x00
00023e d5eb      	RCALL SUBOPT_0x0
00023f e1af      	LDI  R26,LOW(31)
000240 dfd1      	RCALL _RF_Write
                 ;delay_ms(2);
000241 e0a2      	LDI  R26,LOW(2)
000242 e0b0      	LDI  R27,0
000243 d6db      	RCALL _delay_ms
                 ;RF_Write(0x07,0b01111110);
000244 d5ff      	RCALL SUBOPT_0x7
                 ;RF_Write(0x11,0b00000001);     //RX_PW_P0 0x11     Payload size
000245 e1e1      	LDI  R30,LOW(17)
000246 d601      	RCALL SUBOPT_0x8
                 ;RF_Write(0x05,0b00000010);     //RF_CH 0x05        Choose frequency channel
000247 e0e5      	LDI  R30,LOW(5)
000248 93ea      	ST   -Y,R30
000249 e0a2      	LDI  R26,LOW(2)
00024a dfc7      	RCALL _RF_Write
                 ;RF_Write_Address(Code_tay_cam);
00024b 2da5      	MOV  R26,R5
00024c dfd3      	RCALL _RF_Write_Address
                 ;RF_Write(0x02,0b00000001);     //EX_RXADDR 0x02    enable data pipe 0;
00024d e0e2      	LDI  R30,LOW(2)
00024e d5f9      	RCALL SUBOPT_0x8
                 ;RF_Write(0x01,0b00000001);     //EN_AA 0x01        enable auto-acknowledgment
00024f e0e1      	LDI  R30,LOW(1)
000250 d5f7      	RCALL SUBOPT_0x8
                 ;RF_Write(0x04,0b00000000);     //SETUP_RETR 0x04   Setup retry time
000251 e0e4      	LDI  R30,LOW(4)
000252 93ea      	ST   -Y,R30
000253 e0a0      	LDI  R26,LOW(0)
000254 dfbd      	RCALL _RF_Write
                 ;}
000255 9508      	RET
                 ; .FEND
                 ;unsigned char RF_RX_Read()                                         //Function to read the data from RX FIFO
                 ;{
                 _RF_RX_Read:
                 ; .FSTART _RF_RX_Read
                 ;   unsigned char dem_RX;
                 ;   CE=0;
000256 931a      	ST   -Y,R17
                 ;	dem_RX -> R17
000257 9894      	CBI  0x12,4
                 ;   CSN=1;
000258 d5e4      	RCALL SUBOPT_0x5
                 ;   delay_us(10);
                 ;   CSN=0;
000259 9895      	CBI  0x12,5
                 ;   SPI_RW(0b01100001);
00025a e6a1      	LDI  R26,LOW(97)
00025b df86      	RCALL _SPI_RW
                 ;   delay_us(10);
                +
00025c e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
00025d 958a     +DEC R24
00025e f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
                 ;   dem_RX = SPI_Read();
00025f df9a      	RCALL _SPI_Read
000260 2f1e      	MOV  R17,R30
                 ;   CSN=1;
000261 9a95      	SBI  0x12,5
                 ;   CE=1;
000262 9a94      	SBI  0x12,4
                 ;   RF_Write(0x07,0b01111110);  // Clear flag
000263 d5e0      	RCALL SUBOPT_0x7
                 ;   RF_Command(0b11100010);     //Flush RX
000264 eea2      	LDI  R26,LOW(226)
000265 dfb4      	RCALL _RF_Command
                 ;   return dem_RX;
000266 2fe1      	MOV  R30,R17
000267 9119      	LD   R17,Y+
000268 9508      	RET
                 ;}
                 ; .FEND
                 ;
                 ;void main(void){
                 ; 0000 0006 void main(void){
                 _main:
                 ; .FSTART _main
                 ; 0000 0007 Init_System();
000269 df13      	RCALL _Init_System
                 ; 0000 0008 RF_Config();
00026a dfce      	RCALL _RF_Config
                 ; 0000 0009 RF_Init();
00026b df9e      	RCALL _RF_Init
                 ; 0000 000A glcd_clear();
00026c d24c      	RCALL _glcd_clear
                 ; 0000 000B while (1)
                 _0x41:
                 ; 0000 000C     {
                 ; 0000 000D       RX_Mode();
00026d dfc6      	RCALL _RX_Mode
                 ; 0000 000E             if(IRQ==0)
00026e 9987      	SBIC 0x10,7
00026f c01c      	RJMP _0x44
                 ; 0000 000F             {
                 ; 0000 0010                 LED=!LED;
000270 9bc7      	SBIS 0x18,7
000271 c002      	RJMP _0x45
000272 98c7      	CBI  0x18,7
000273 c001      	RJMP _0x46
                 _0x45:
000274 9ac7      	SBI  0x18,7
                 _0x46:
                 ; 0000 0011                 glcd_moveto(20,0);
000275 e1e4      	LDI  R30,LOW(20)
000276 93ea      	ST   -Y,R30
000277 e0a0      	LDI  R26,LOW(0)
000278 d517      	RCALL _glcd_moveto
                 ; 0000 0012                 xx=RF_RX_Read();
000279 dfdc      	RCALL _RF_RX_Read
00027a 2e4e      	MOV  R4,R30
                 ; 0000 0013                 sprintf(glcd_buff,"%u",xx);
00027b e9ea      	LDI  R30,LOW(_glcd_buff)
00027c e0f1      	LDI  R31,HIGH(_glcd_buff)
00027d d5cd      	RCALL SUBOPT_0x9
                +
00027e e4e7     +LDI R30 , LOW ( 2 * _0x0 + ( 29 ) )
00027f e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 29 ) )
                 	__POINTW1FN _0x0,29
000280 d5ca      	RCALL SUBOPT_0x9
000281 2de4      	MOV  R30,R4
000282 27ff      	CLR  R31
000283 2766      	CLR  R22
000284 2777      	CLR  R23
000285 d6cb      	RCALL __PUTPARD1
000286 e084      	LDI  R24,4
000287 d147      	RCALL _sprintf
000288 9628      	ADIW R28,8
                 ; 0000 0014                 glcd_outtext(glcd_buff);
000289 e9aa      	LDI  R26,LOW(_glcd_buff)
00028a e0b1      	LDI  R27,HIGH(_glcd_buff)
00028b d4f5      	RCALL _glcd_outtext
                 ; 0000 0015             }
                 ; 0000 0016     }
                 _0x44:
00028c cfe0      	RJMP _0x41
                 ; 0000 0017 }
                 _0x47:
00028d cfff      	RJMP _0x47
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
                 ; .FSTART _put_buff_G100
00028e d5bf      	RCALL SUBOPT_0xA
00028f d6eb      	RCALL __SAVELOCR2
000290 d5c0      	RCALL SUBOPT_0xB
000291 9612      	ADIW R26,2
000292 d6b6      	RCALL __GETW1P
000293 9730      	SBIW R30,0
000294 f0f1      	BREQ _0x2000010
000295 d5bb      	RCALL SUBOPT_0xB
000296 d5bd      	RCALL SUBOPT_0xC
000297 018f      	MOVW R16,R30
000298 9730      	SBIW R30,0
000299 f061      	BREQ _0x2000012
                +
00029a 3002     +CPI R16 , LOW ( 2 )
00029b e0e0     +LDI R30 , HIGH ( 2 )
00029c 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
00029d f070      	BRLO _0x2000013
00029e 01f8      	MOVW R30,R16
00029f 9731      	SBIW R30,1
0002a0 018f      	MOVW R16,R30
                +
0002a1 81aa     +LDD R26 , Y + 2
0002a2 81bb     +LDD R27 , Y + 2 + 1
0002a3 9614     +ADIW R26 , 4
0002a4 93ed     +ST X + , R30
0002a5 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
0002a6 d5aa      	RCALL SUBOPT_0xB
0002a7 9612      	ADIW R26,2
0002a8 d5ae      	RCALL SUBOPT_0xD
0002a9 9731      	SBIW R30,1
0002aa 81ac      	LDD  R26,Y+4
0002ab 83a0      	STD  Z+0,R26
                 _0x2000013:
0002ac d5a4      	RCALL SUBOPT_0xB
0002ad d69b      	RCALL __GETW1P
0002ae 23ff      	TST  R31
0002af f012      	BRMI _0x2000014
0002b0 d5a0      	RCALL SUBOPT_0xB
0002b1 d5a5      	RCALL SUBOPT_0xD
                 _0x2000014:
0002b2 c005      	RJMP _0x2000015
                 _0x2000010:
0002b3 d59d      	RCALL SUBOPT_0xB
0002b4 efef      	LDI  R30,LOW(65535)
0002b5 efff      	LDI  R31,HIGH(65535)
0002b6 93ed      	ST   X+,R30
0002b7 93fc      	ST   X,R31
                 _0x2000015:
0002b8 d6c9      	RCALL __LOADLOCR2
0002b9 c4ef      	RJMP _0x2120004
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
0002ba d593      	RCALL SUBOPT_0xA
0002bb 9726      	SBIW R28,6
0002bc d6ba      	RCALL __SAVELOCR6
0002bd e010      	LDI  R17,0
0002be 85ac      	LDD  R26,Y+12
0002bf 85bd      	LDD  R27,Y+12+1
0002c0 d59c      	RCALL SUBOPT_0xE
0002c1 93ed      	ST   X+,R30
0002c2 93fc      	ST   X,R31
                 _0x2000016:
0002c3 89ea      	LDD  R30,Y+18
0002c4 89fb      	LDD  R31,Y+18+1
0002c5 9631      	ADIW R30,1
0002c6 8bea      	STD  Y+18,R30
0002c7 8bfb      	STD  Y+18+1,R31
0002c8 9731      	SBIW R30,1
0002c9 91e4      	LPM  R30,Z
0002ca 2f2e      	MOV  R18,R30
0002cb 30e0      	CPI  R30,0
0002cc f409      	BRNE PC+2
0002cd c0fb      	RJMP _0x2000018
0002ce 2fe1      	MOV  R30,R17
0002cf 30e0      	CPI  R30,0
0002d0 f431      	BRNE _0x200001C
0002d1 3225      	CPI  R18,37
0002d2 f411      	BRNE _0x200001D
0002d3 e011      	LDI  R17,LOW(1)
0002d4 c001      	RJMP _0x200001E
                 _0x200001D:
0002d5 d58a      	RCALL SUBOPT_0xF
                 _0x200001E:
0002d6 c0f1      	RJMP _0x200001B
                 _0x200001C:
0002d7 30e1      	CPI  R30,LOW(0x1)
0002d8 f4a1      	BRNE _0x200001F
0002d9 3225      	CPI  R18,37
0002da f411      	BRNE _0x2000020
0002db d584      	RCALL SUBOPT_0xF
0002dc c0ea      	RJMP _0x20000CC
                 _0x2000020:
0002dd e012      	LDI  R17,LOW(2)
0002de e040      	LDI  R20,LOW(0)
0002df e000      	LDI  R16,LOW(0)
0002e0 322d      	CPI  R18,45
0002e1 f411      	BRNE _0x2000021
0002e2 e001      	LDI  R16,LOW(1)
0002e3 c0e4      	RJMP _0x200001B
                 _0x2000021:
0002e4 322b      	CPI  R18,43
0002e5 f411      	BRNE _0x2000022
0002e6 e24b      	LDI  R20,LOW(43)
0002e7 c0e0      	RJMP _0x200001B
                 _0x2000022:
0002e8 3220      	CPI  R18,32
0002e9 f411      	BRNE _0x2000023
0002ea e240      	LDI  R20,LOW(32)
0002eb c0dc      	RJMP _0x200001B
                 _0x2000023:
0002ec c002      	RJMP _0x2000024
                 _0x200001F:
0002ed 30e2      	CPI  R30,LOW(0x2)
0002ee f439      	BRNE _0x2000025
                 _0x2000024:
0002ef e050      	LDI  R21,LOW(0)
0002f0 e013      	LDI  R17,LOW(3)
0002f1 3320      	CPI  R18,48
0002f2 f411      	BRNE _0x2000026
0002f3 6800      	ORI  R16,LOW(128)
0002f4 c0d3      	RJMP _0x200001B
                 _0x2000026:
0002f5 c003      	RJMP _0x2000027
                 _0x2000025:
0002f6 30e3      	CPI  R30,LOW(0x3)
0002f7 f009      	BREQ PC+2
0002f8 c0cf      	RJMP _0x200001B
                 _0x2000027:
0002f9 3320      	CPI  R18,48
0002fa f010      	BRLO _0x200002A
0002fb 332a      	CPI  R18,58
0002fc f008      	BRLO _0x200002B
                 _0x200002A:
0002fd c007      	RJMP _0x2000029
                 _0x200002B:
0002fe e0aa      	LDI  R26,LOW(10)
0002ff 9f5a      	MUL  R21,R26
000300 2d50      	MOV  R21,R0
000301 2fe2      	MOV  R30,R18
000302 53e0      	SUBI R30,LOW(48)
000303 0f5e      	ADD  R21,R30
000304 c0c3      	RJMP _0x200001B
                 _0x2000029:
000305 2fe2      	MOV  R30,R18
000306 36e3      	CPI  R30,LOW(0x63)
000307 f439      	BRNE _0x200002F
000308 d55e      	RCALL SUBOPT_0x10
000309 d560      	RCALL SUBOPT_0x11
00030a d55c      	RCALL SUBOPT_0x10
00030b 81a4      	LDD  R26,Z+4
00030c 93aa      	ST   -Y,R26
00030d d560      	RCALL SUBOPT_0x12
00030e c0b8      	RJMP _0x2000030
                 _0x200002F:
00030f 37e3      	CPI  R30,LOW(0x73)
000310 f431      	BRNE _0x2000032
000311 d562      	RCALL SUBOPT_0x13
000312 d563      	RCALL SUBOPT_0x14
000313 d565      	RCALL SUBOPT_0x15
000314 d496      	RCALL _strlen
000315 2f1e      	MOV  R17,R30
000316 c008      	RJMP _0x2000033
                 _0x2000032:
000317 37e0      	CPI  R30,LOW(0x70)
000318 f451      	BRNE _0x2000035
000319 d55a      	RCALL SUBOPT_0x13
00031a d55b      	RCALL SUBOPT_0x14
00031b d55d      	RCALL SUBOPT_0x15
00031c d499      	RCALL _strlenf
00031d 2f1e      	MOV  R17,R30
00031e 6008      	ORI  R16,LOW(8)
                 _0x2000033:
00031f 6002      	ORI  R16,LOW(2)
000320 770f      	ANDI R16,LOW(127)
000321 e030      	LDI  R19,LOW(0)
000322 c02d      	RJMP _0x2000036
                 _0x2000035:
000323 36e4      	CPI  R30,LOW(0x64)
000324 f011      	BREQ _0x2000039
000325 36e9      	CPI  R30,LOW(0x69)
000326 f411      	BRNE _0x200003A
                 _0x2000039:
000327 6004      	ORI  R16,LOW(4)
000328 c002      	RJMP _0x200003B
                 _0x200003A:
000329 37e5      	CPI  R30,LOW(0x75)
00032a f429      	BRNE _0x200003C
                 _0x200003B:
00032b e0ea      	LDI  R30,LOW(_tbl10_G100*2)
00032c e0f2      	LDI  R31,HIGH(_tbl10_G100*2)
00032d d550      	RCALL SUBOPT_0x16
00032e e015      	LDI  R17,LOW(5)
00032f c00b      	RJMP _0x200003D
                 _0x200003C:
000330 35e8      	CPI  R30,LOW(0x58)
000331 f411      	BRNE _0x200003F
000332 6008      	ORI  R16,LOW(8)
000333 c003      	RJMP _0x2000040
                 _0x200003F:
000334 37e8      	CPI  R30,LOW(0x78)
000335 f009      	BREQ PC+2
000336 c090      	RJMP _0x2000071
                 _0x2000040:
000337 e1e4      	LDI  R30,LOW(_tbl16_G100*2)
000338 e0f2      	LDI  R31,HIGH(_tbl16_G100*2)
000339 d544      	RCALL SUBOPT_0x16
00033a e014      	LDI  R17,LOW(4)
                 _0x200003D:
00033b ff02      	SBRS R16,2
00033c c010      	RJMP _0x2000042
00033d d536      	RCALL SUBOPT_0x13
00033e d537      	RCALL SUBOPT_0x14
00033f d541      	RCALL SUBOPT_0x17
000340 85ab      	LDD  R26,Y+11
000341 23aa      	TST  R26
000342 f422      	BRPL _0x2000043
000343 d540      	RCALL SUBOPT_0x18
000344 d5e8      	RCALL __ANEGW1
000345 d53b      	RCALL SUBOPT_0x17
000346 e24d      	LDI  R20,LOW(45)
                 _0x2000043:
000347 3040      	CPI  R20,0
000348 f011      	BREQ _0x2000044
000349 5f1f      	SUBI R17,-LOW(1)
00034a c001      	RJMP _0x2000045
                 _0x2000044:
00034b 7f0b      	ANDI R16,LOW(251)
                 _0x2000045:
00034c c003      	RJMP _0x2000046
                 _0x2000042:
00034d d526      	RCALL SUBOPT_0x13
00034e d527      	RCALL SUBOPT_0x14
00034f d531      	RCALL SUBOPT_0x17
                 _0x2000046:
                 _0x2000036:
000350 fd00      	SBRC R16,0
000351 c010      	RJMP _0x2000047
                 _0x2000048:
000352 1715      	CP   R17,R21
000353 f470      	BRSH _0x200004A
000354 ff07      	SBRS R16,7
000355 c008      	RJMP _0x200004B
000356 ff02      	SBRS R16,2
000357 c004      	RJMP _0x200004C
000358 7f0b      	ANDI R16,LOW(251)
000359 2f24      	MOV  R18,R20
00035a 5011      	SUBI R17,LOW(1)
00035b c001      	RJMP _0x200004D
                 _0x200004C:
00035c e320      	LDI  R18,LOW(48)
                 _0x200004D:
00035d c001      	RJMP _0x200004E
                 _0x200004B:
00035e e220      	LDI  R18,LOW(32)
                 _0x200004E:
00035f d500      	RCALL SUBOPT_0xF
000360 5051      	SUBI R21,LOW(1)
000361 cff0      	RJMP _0x2000048
                 _0x200004A:
                 _0x2000047:
000362 2f31      	MOV  R19,R17
000363 ff01      	SBRS R16,1
000364 c015      	RJMP _0x200004F
                 _0x2000050:
000365 3030      	CPI  R19,0
000366 f091      	BREQ _0x2000052
000367 ff03      	SBRS R16,3
000368 c005      	RJMP _0x2000053
000369 81ee      	LDD  R30,Y+6
00036a 81ff      	LDD  R31,Y+6+1
00036b 9125      	LPM  R18,Z+
00036c d511      	RCALL SUBOPT_0x16
00036d c005      	RJMP _0x2000054
                 _0x2000053:
00036e 81ae      	LDD  R26,Y+6
00036f 81bf      	LDD  R27,Y+6+1
000370 912d      	LD   R18,X+
000371 83ae      	STD  Y+6,R26
000372 83bf      	STD  Y+6+1,R27
                 _0x2000054:
000373 d4ec      	RCALL SUBOPT_0xF
000374 3050      	CPI  R21,0
000375 f009      	BREQ _0x2000055
000376 5051      	SUBI R21,LOW(1)
                 _0x2000055:
000377 5031      	SUBI R19,LOW(1)
000378 cfec      	RJMP _0x2000050
                 _0x2000052:
000379 c044      	RJMP _0x2000056
                 _0x200004F:
                 _0x2000058:
00037a e320      	LDI  R18,LOW(48)
00037b 81ee      	LDD  R30,Y+6
00037c 81ff      	LDD  R31,Y+6+1
00037d d5cf      	RCALL __GETW1PF
00037e 87e8      	STD  Y+8,R30
00037f 87f9      	STD  Y+8+1,R31
000380 81ee      	LDD  R30,Y+6
000381 81ff      	LDD  R31,Y+6+1
000382 9632      	ADIW R30,2
000383 d4fa      	RCALL SUBOPT_0x16
                 _0x200005A:
000384 85e8      	LDD  R30,Y+8
000385 85f9      	LDD  R31,Y+8+1
000386 d500      	RCALL SUBOPT_0x19
000387 17ae      	CP   R26,R30
000388 07bf      	CPC  R27,R31
000389 f040      	BRLO _0x200005C
00038a 5f2f      	SUBI R18,-LOW(1)
00038b 85a8      	LDD  R26,Y+8
00038c 85b9      	LDD  R27,Y+8+1
00038d d4f6      	RCALL SUBOPT_0x18
00038e 1bea      	SUB  R30,R26
00038f 0bfb      	SBC  R31,R27
000390 d4f0      	RCALL SUBOPT_0x17
000391 cff2      	RJMP _0x200005A
                 _0x200005C:
000392 332a      	CPI  R18,58
000393 f028      	BRLO _0x200005D
000394 ff03      	SBRS R16,3
000395 c002      	RJMP _0x200005E
000396 5f29      	SUBI R18,-LOW(7)
000397 c001      	RJMP _0x200005F
                 _0x200005E:
000398 5d29      	SUBI R18,-LOW(39)
                 _0x200005F:
                 _0x200005D:
000399 fd04      	SBRC R16,4
00039a c019      	RJMP _0x2000061
00039b 3321      	CPI  R18,49
00039c f420      	BRSH _0x2000063
00039d 85a8      	LDD  R26,Y+8
00039e 85b9      	LDD  R27,Y+8+1
00039f 9711      	SBIW R26,1
0003a0 f409      	BRNE _0x2000062
                 _0x2000063:
0003a1 c009      	RJMP _0x20000CD
                 _0x2000062:
0003a2 1753      	CP   R21,R19
0003a3 f010      	BRLO _0x2000067
0003a4 ff00      	SBRS R16,0
0003a5 c001      	RJMP _0x2000068
                 _0x2000067:
0003a6 c011      	RJMP _0x2000066
                 _0x2000068:
0003a7 e220      	LDI  R18,LOW(32)
0003a8 ff07      	SBRS R16,7
0003a9 c00a      	RJMP _0x2000069
0003aa e320      	LDI  R18,LOW(48)
                 _0x20000CD:
0003ab 6100      	ORI  R16,LOW(16)
0003ac ff02      	SBRS R16,2
0003ad c006      	RJMP _0x200006A
0003ae 7f0b      	ANDI R16,LOW(251)
0003af 934a      	ST   -Y,R20
0003b0 d4bd      	RCALL SUBOPT_0x12
0003b1 3050      	CPI  R21,0
0003b2 f009      	BREQ _0x200006B
0003b3 5051      	SUBI R21,LOW(1)
                 _0x200006B:
                 _0x200006A:
                 _0x2000069:
                 _0x2000061:
0003b4 d4ab      	RCALL SUBOPT_0xF
0003b5 3050      	CPI  R21,0
0003b6 f009      	BREQ _0x200006C
0003b7 5051      	SUBI R21,LOW(1)
                 _0x200006C:
                 _0x2000066:
0003b8 5031      	SUBI R19,LOW(1)
0003b9 85a8      	LDD  R26,Y+8
0003ba 85b9      	LDD  R27,Y+8+1
0003bb 9712      	SBIW R26,2
0003bc f008      	BRLO _0x2000059
0003bd cfbc      	RJMP _0x2000058
                 _0x2000059:
                 _0x2000056:
0003be ff00      	SBRS R16,0
0003bf c007      	RJMP _0x200006D
                 _0x200006E:
0003c0 3050      	CPI  R21,0
0003c1 f029      	BREQ _0x2000070
0003c2 5051      	SUBI R21,LOW(1)
0003c3 e2e0      	LDI  R30,LOW(32)
0003c4 93ea      	ST   -Y,R30
0003c5 d4a8      	RCALL SUBOPT_0x12
0003c6 cff9      	RJMP _0x200006E
                 _0x2000070:
                 _0x200006D:
                 _0x2000071:
                 _0x2000030:
                 _0x20000CC:
0003c7 e010      	LDI  R17,LOW(0)
                 _0x200001B:
0003c8 cefa      	RJMP _0x2000016
                 _0x2000018:
0003c9 85ac      	LDD  R26,Y+12
0003ca 85bd      	LDD  R27,Y+12+1
0003cb d57d      	RCALL __GETW1P
0003cc d5b1      	RCALL __LOADLOCR6
0003cd 9664      	ADIW R28,20
0003ce 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
0003cf 92ff      	PUSH R15
0003d0 2ef8      	MOV  R15,R24
0003d1 9726      	SBIW R28,6
0003d2 d5a6      	RCALL __SAVELOCR4
0003d3 d4b6      	RCALL SUBOPT_0x1A
0003d4 9730      	SBIW R30,0
0003d5 f419      	BRNE _0x2000072
0003d6 efef      	LDI  R30,LOW(65535)
0003d7 efff      	LDI  R31,HIGH(65535)
0003d8 c01c      	RJMP _0x212000B
                 _0x2000072:
0003d9 01de      	MOVW R26,R28
0003da 9616      	ADIW R26,6
0003db d54d      	RCALL __ADDW2R15
0003dc 018d      	MOVW R16,R26
0003dd d4ac      	RCALL SUBOPT_0x1A
0003de d49f      	RCALL SUBOPT_0x16
0003df e0e0      	LDI  R30,LOW(0)
0003e0 87e8      	STD  Y+8,R30
0003e1 87e9      	STD  Y+8+1,R30
0003e2 01de      	MOVW R26,R28
0003e3 961a      	ADIW R26,10
0003e4 d544      	RCALL __ADDW2R15
0003e5 d563      	RCALL __GETW1P
0003e6 d464      	RCALL SUBOPT_0x9
0003e7 931a      	ST   -Y,R17
0003e8 930a      	ST   -Y,R16
0003e9 e8ee      	LDI  R30,LOW(_put_buff_G100)
0003ea e0f2      	LDI  R31,HIGH(_put_buff_G100)
0003eb d45f      	RCALL SUBOPT_0x9
0003ec 01de      	MOVW R26,R28
0003ed 961a      	ADIW R26,10
0003ee decb      	RCALL __print_G100
0003ef 019f      	MOVW R18,R30
0003f0 81ae      	LDD  R26,Y+6
0003f1 81bf      	LDD  R27,Y+6+1
0003f2 e0e0      	LDI  R30,LOW(0)
0003f3 93ec      	ST   X,R30
0003f4 01f9      	MOVW R30,R18
                 _0x212000B:
0003f5 d58a      	RCALL __LOADLOCR4
0003f6 962a      	ADIW R28,10
0003f7 90ff      	POP  R15
0003f8 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _pcd8544_delay_G101:
                 ; .FSTART _pcd8544_delay_G101
0003f9 9508      	RET
                 ; .FEND
                 _pcd8544_wrbus_G101:
                 ; .FSTART _pcd8544_wrbus_G101
0003fa d432      	RCALL SUBOPT_0x1
0003fb 98a9      	CBI  0x15,1
0003fc e018      	LDI  R17,LOW(8)
                 _0x2020004:
0003fd dffb      	RCALL _pcd8544_delay_G101
0003fe 81e9      	LDD  R30,Y+1
0003ff 78e0      	ANDI R30,LOW(0x80)
000400 f011      	BREQ _0x2020006
000401 9aab      	SBI  0x15,3
000402 c001      	RJMP _0x2020007
                 _0x2020006:
000403 98ab      	CBI  0x15,3
                 _0x2020007:
000404 81e9      	LDD  R30,Y+1
000405 0fee      	LSL  R30
000406 83e9      	STD  Y+1,R30
000407 dff1      	RCALL _pcd8544_delay_G101
000408 9aac      	SBI  0x15,4
000409 dfef      	RCALL _pcd8544_delay_G101
00040a 98ac      	CBI  0x15,4
00040b 5011      	SUBI R17,LOW(1)
00040c f781      	BRNE _0x2020004
00040d 9aa9      	SBI  0x15,1
00040e 8118      	LDD  R17,Y+0
00040f c3ba      	RJMP _0x2120003
                 ; .FEND
                 _pcd8544_wrcmd:
                 ; .FSTART _pcd8544_wrcmd
000410 93aa      	ST   -Y,R26
000411 98aa      	CBI  0x15,2
000412 81a8      	LD   R26,Y
000413 dfe6      	RCALL _pcd8544_wrbus_G101
000414 c0a2      	RJMP _0x212000A
                 ; .FEND
                 _pcd8544_wrdata_G101:
                 ; .FSTART _pcd8544_wrdata_G101
000415 93aa      	ST   -Y,R26
000416 9aaa      	SBI  0x15,2
000417 81a8      	LD   R26,Y
000418 dfe1      	RCALL _pcd8544_wrbus_G101
000419 c09d      	RJMP _0x212000A
                 ; .FEND
                 _pcd8544_setaddr_G101:
                 ; .FSTART _pcd8544_setaddr_G101
00041a d412      	RCALL SUBOPT_0x1
00041b 81e9      	LDD  R30,Y+1
00041c d472      	RCALL SUBOPT_0x1B
00041d 2f1e      	MOV  R17,R30
00041e e5e4      	LDI  R30,LOW(84)
00041f 9fe1      	MUL  R30,R17
000420 01f0      	MOVW R30,R0
000421 01df      	MOVW R26,R30
000422 81ea      	LDD  R30,Y+2
000423 d46f      	RCALL SUBOPT_0x1C
000424 93e0 0230 	STS  _gfx_addr_G101,R30
000426 93f0 0231 	STS  _gfx_addr_G101+1,R31
000428 2fe1      	MOV  R30,R17
000429 8118      	LDD  R17,Y+0
00042a c3e0      	RJMP _0x2120002
                 ; .FEND
                 _pcd8544_gotoxy:
                 ; .FSTART _pcd8544_gotoxy
00042b 93aa      	ST   -Y,R26
00042c 81e9      	LDD  R30,Y+1
00042d 68e0      	ORI  R30,0x80
00042e d468      	RCALL SUBOPT_0x1D
00042f 81e9      	LDD  R30,Y+1
000430 93ea      	ST   -Y,R30
000431 81a9      	LDD  R26,Y+1
000432 dfe7      	RCALL _pcd8544_setaddr_G101
000433 64e0      	ORI  R30,0x40
000434 d462      	RCALL SUBOPT_0x1D
000435 c394      	RJMP _0x2120003
                 ; .FEND
                 _pcd8544_rdbyte:
                 ; .FSTART _pcd8544_rdbyte
000436 93aa      	ST   -Y,R26
000437 81e9      	LDD  R30,Y+1
000438 93ea      	ST   -Y,R30
000439 81a9      	LDD  R26,Y+1
00043a dff0      	RCALL _pcd8544_gotoxy
00043b 91e0 0230 	LDS  R30,_gfx_addr_G101
00043d 91f0 0231 	LDS  R31,_gfx_addr_G101+1
00043f d459      	RCALL SUBOPT_0x1E
000440 81e0      	LD   R30,Z
000441 c388      	RJMP _0x2120003
                 ; .FEND
                 _pcd8544_wrbyte:
                 ; .FSTART _pcd8544_wrbyte
000442 93aa      	ST   -Y,R26
000443 d458      	RCALL SUBOPT_0x1F
000444 d45a      	RCALL SUBOPT_0x20
000445 81a8      	LD   R26,Y
000446 83a0      	STD  Z+0,R26
000447 dfcd      	RCALL _pcd8544_wrdata_G101
000448 c06e      	RJMP _0x212000A
                 ; .FEND
                 _glcd_init:
                 ; .FSTART _glcd_init
000449 d404      	RCALL SUBOPT_0xA
00044a d52e      	RCALL __SAVELOCR4
00044b 9aa1      	SBI  0x14,1
00044c 9aa9      	SBI  0x15,1
00044d 9aa4      	SBI  0x14,4
00044e 98ac      	CBI  0x15,4
00044f 9aa3      	SBI  0x14,3
000450 9aa2      	SBI  0x14,2
000451 9aa0      	SBI  0x14,0
000452 98a8      	CBI  0x15,0
000453 e0aa      	LDI  R26,LOW(10)
000454 e0b0      	LDI  R27,0
000455 d4c9      	RCALL _delay_ms
000456 9aa8      	SBI  0x15,0
000457 d449      	RCALL SUBOPT_0x21
000458 9730      	SBIW R30,0
000459 f0d9      	BREQ _0x2020008
00045a d446      	RCALL SUBOPT_0x21
00045b 81e6      	LDD  R30,Z+6
00045c 70e3      	ANDI R30,LOW(0x3)
00045d 2f1e      	MOV  R17,R30
00045e d442      	RCALL SUBOPT_0x21
00045f 81e6      	LDD  R30,Z+6
000460 95e6      	LSR  R30
000461 95e6      	LSR  R30
000462 70e7      	ANDI R30,LOW(0x7)
000463 2f0e      	MOV  R16,R30
000464 d43c      	RCALL SUBOPT_0x21
000465 81e7      	LDD  R30,Z+7
000466 77ef      	ANDI R30,0x7F
000467 2f3e      	MOV  R19,R30
000468 81ac      	LDD  R26,Y+4
000469 81bd      	LDD  R27,Y+4+1
00046a d4de      	RCALL __GETW1P
00046b d438      	RCALL SUBOPT_0x22
00046c 81ac      	LDD  R26,Y+4
00046d 81bd      	LDD  R27,Y+4+1
00046e 9612      	ADIW R26,2
00046f d4d9      	RCALL __GETW1P
000470 d438      	RCALL SUBOPT_0x23
000471 81ac      	LDD  R26,Y+4
000472 81bd      	LDD  R27,Y+4+1
000473 d3e0      	RCALL SUBOPT_0xC
000474 c008      	RJMP _0x20200A0
                 _0x2020008:
000475 e010      	LDI  R17,LOW(0)
000476 e003      	LDI  R16,LOW(3)
000477 e332      	LDI  R19,LOW(50)
000478 d3e4      	RCALL SUBOPT_0xE
000479 d42a      	RCALL SUBOPT_0x22
00047a d3e2      	RCALL SUBOPT_0xE
00047b d42d      	RCALL SUBOPT_0x23
00047c d3e0      	RCALL SUBOPT_0xE
                 _0x20200A0:
                +
00047d 93e0 0198+STS _glcd_state + ( 27 ) , R30
00047f 93f0 0199+STS _glcd_state + ( 27 ) + 1 , R31
                 	__PUTW1MN _glcd_state,27
000481 e2a1      	LDI  R26,LOW(33)
000482 df8d      	RCALL _pcd8544_wrcmd
000483 2fe1      	MOV  R30,R17
000484 60e4      	ORI  R30,4
000485 d411      	RCALL SUBOPT_0x1D
000486 2fe0      	MOV  R30,R16
000487 61e0      	ORI  R30,0x10
000488 d40e      	RCALL SUBOPT_0x1D
000489 2fe3      	MOV  R30,R19
00048a 68e0      	ORI  R30,0x80
00048b d40b      	RCALL SUBOPT_0x1D
00048c e2a0      	LDI  R26,LOW(32)
00048d df82      	RCALL _pcd8544_wrcmd
00048e e0a1      	LDI  R26,LOW(1)
00048f d01f      	RCALL _glcd_display
000490 e0e1      	LDI  R30,LOW(1)
000491 93e0 017d 	STS  _glcd_state,R30
000493 e0e0      	LDI  R30,LOW(0)
                +
000494 93e0 017e+STS _glcd_state + ( 1 ) , R30
                 	__PUTB1MN _glcd_state,1
000496 e0e1      	LDI  R30,LOW(1)
                +
000497 93e0 0183+STS _glcd_state + ( 6 ) , R30
                 	__PUTB1MN _glcd_state,6
                +
000499 93e0 0184+STS _glcd_state + ( 7 ) , R30
                 	__PUTB1MN _glcd_state,7
                +
00049b 93e0 0185+STS _glcd_state + ( 8 ) , R30
                 	__PUTB1MN _glcd_state,8
00049d efef      	LDI  R30,LOW(255)
                +
00049e 93e0 0186+STS _glcd_state + ( 9 ) , R30
                 	__PUTB1MN _glcd_state,9
0004a0 e0e1      	LDI  R30,LOW(1)
                +
0004a1 93e0 018d+STS _glcd_state + ( 16 ) , R30
                 	__PUTB1MN _glcd_state,16
                +
0004a3 e8ee     +LDI R30 , LOW ( _glcd_state + ( 17 ) )
0004a4 e0f1     +LDI R31 , HIGH ( _glcd_state + ( 17 ) )
                 	__POINTW1MN _glcd_state,17
0004a5 d3a5      	RCALL SUBOPT_0x9
0004a6 efef      	LDI  R30,LOW(255)
0004a7 93ea      	ST   -Y,R30
0004a8 e0a8      	LDI  R26,LOW(8)
0004a9 e0b0      	LDI  R27,0
0004aa d2f1      	RCALL _memset
0004ab d00d      	RCALL _glcd_clear
0004ac e0e1      	LDI  R30,LOW(1)
0004ad d4d2      	RCALL __LOADLOCR4
0004ae c058      	RJMP _0x2120009
                 ; .FEND
                 _glcd_display:
                 ; .FSTART _glcd_display
0004af 93aa      	ST   -Y,R26
0004b0 81e8      	LD   R30,Y
0004b1 30e0      	CPI  R30,0
0004b2 f011      	BREQ _0x202000A
0004b3 e0ec      	LDI  R30,LOW(12)
0004b4 c001      	RJMP _0x202000B
                 _0x202000A:
0004b5 e0e8      	LDI  R30,LOW(8)
                 _0x202000B:
0004b6 d3e0      	RCALL SUBOPT_0x1D
                 _0x212000A:
0004b7 9621      	ADIW R28,1
0004b8 9508      	RET
                 ; .FEND
                 _glcd_clear:
                 ; .FSTART _glcd_clear
0004b9 d4bf      	RCALL __SAVELOCR4
0004ba e030      	LDI  R19,0
                +
0004bb 91e0 017e+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
0004bd 30e0      	CPI  R30,0
0004be f009      	BREQ _0x202000D
0004bf ef3f      	LDI  R19,LOW(255)
                 _0x202000D:
0004c0 d369      	RCALL SUBOPT_0x0
0004c1 e0a0      	LDI  R26,LOW(0)
0004c2 df68      	RCALL _pcd8544_gotoxy
                +
0004c3 ef08     +LDI R16 , LOW ( 504 )
0004c4 e011     +LDI R17 , HIGH ( 504 )
                 	__GETWRN 16,17,504
                 _0x202000E:
0004c5 01f8      	MOVW R30,R16
                +
0004c6 5001     +SUBI R16 , LOW ( 1 )
0004c7 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
0004c8 9730      	SBIW R30,0
0004c9 f019      	BREQ _0x2020010
0004ca 2fa3      	MOV  R26,R19
0004cb df76      	RCALL _pcd8544_wrbyte
0004cc cff8      	RJMP _0x202000E
                 _0x2020010:
0004cd d35c      	RCALL SUBOPT_0x0
0004ce e0a0      	LDI  R26,LOW(0)
0004cf d2c0      	RCALL _glcd_moveto
0004d0 d4af      	RCALL __LOADLOCR4
0004d1 c356      	RJMP _0x2120001
                 ; .FEND
                 _pcd8544_wrmasked_G101:
                 ; .FSTART _pcd8544_wrmasked_G101
0004d2 d35a      	RCALL SUBOPT_0x1
0004d3 81ed      	LDD  R30,Y+5
0004d4 93ea      	ST   -Y,R30
0004d5 81ad      	LDD  R26,Y+5
0004d6 df5f      	RCALL _pcd8544_rdbyte
0004d7 2f1e      	MOV  R17,R30
0004d8 81e9      	LDD  R30,Y+1
0004d9 30e7      	CPI  R30,LOW(0x7)
0004da f011      	BREQ _0x2020020
0004db 30e8      	CPI  R30,LOW(0x8)
0004dc f431      	BRNE _0x2020021
                 _0x2020020:
0004dd 81eb      	LDD  R30,Y+3
0004de 93ea      	ST   -Y,R30
0004df 81aa      	LDD  R26,Y+2
0004e0 d2eb      	RCALL _glcd_mappixcolor1bit
0004e1 83eb      	STD  Y+3,R30
0004e2 c008      	RJMP _0x2020022
                 _0x2020021:
0004e3 30e3      	CPI  R30,LOW(0x3)
0004e4 f421      	BRNE _0x2020024
0004e5 81eb      	LDD  R30,Y+3
0004e6 95e0      	COM  R30
0004e7 83eb      	STD  Y+3,R30
0004e8 c002      	RJMP _0x2020025
                 _0x2020024:
0004e9 30e0      	CPI  R30,0
0004ea f421      	BRNE _0x2020026
                 _0x2020025:
                 _0x2020022:
0004eb 81ea      	LDD  R30,Y+2
0004ec 95e0      	COM  R30
0004ed 231e      	AND  R17,R30
0004ee c002      	RJMP _0x2020027
                 _0x2020026:
0004ef 30e2      	CPI  R30,LOW(0x2)
0004f0 f429      	BRNE _0x2020028
                 _0x2020027:
0004f1 81ea      	LDD  R30,Y+2
0004f2 81ab      	LDD  R26,Y+3
0004f3 23ea      	AND  R30,R26
0004f4 2b1e      	OR   R17,R30
0004f5 c00e      	RJMP _0x202001E
                 _0x2020028:
0004f6 30e1      	CPI  R30,LOW(0x1)
0004f7 f429      	BRNE _0x2020029
0004f8 81ea      	LDD  R30,Y+2
0004f9 81ab      	LDD  R26,Y+3
0004fa 23ea      	AND  R30,R26
0004fb 271e      	EOR  R17,R30
0004fc c007      	RJMP _0x202001E
                 _0x2020029:
0004fd 30e4      	CPI  R30,LOW(0x4)
0004fe f429      	BRNE _0x202001E
0004ff 81ea      	LDD  R30,Y+2
000500 95e0      	COM  R30
000501 81ab      	LDD  R26,Y+3
000502 2bea      	OR   R30,R26
000503 231e      	AND  R17,R30
                 _0x202001E:
000504 2fa1      	MOV  R26,R17
000505 df3c      	RCALL _pcd8544_wrbyte
000506 8118      	LDD  R17,Y+0
                 _0x2120009:
000507 9626      	ADIW R28,6
000508 9508      	RET
                 ; .FEND
                 _glcd_block:
                 ; .FSTART _glcd_block
000509 93aa      	ST   -Y,R26
00050a 9723      	SBIW R28,3
00050b d46b      	RCALL __SAVELOCR6
00050c 89a8      	LDD  R26,Y+16
00050d 35a4      	CPI  R26,LOW(0x54)
00050e f448      	BRSH _0x202002C
00050f 85af      	LDD  R26,Y+15
000510 33a0      	CPI  R26,LOW(0x30)
000511 f430      	BRSH _0x202002C
000512 85ae      	LDD  R26,Y+14
000513 30a0      	CPI  R26,LOW(0x0)
000514 f019      	BREQ _0x202002C
000515 85ad      	LDD  R26,Y+13
000516 30a0      	CPI  R26,LOW(0x0)
000517 f409      	BRNE _0x202002B
                 _0x202002C:
000518 c185      	RJMP _0x2120008
                 _0x202002B:
000519 85ee      	LDD  R30,Y+14
00051a 87e8      	STD  Y+8,R30
00051b 89a8      	LDD  R26,Y+16
00051c 27bb      	CLR  R27
00051d 85ee      	LDD  R30,Y+14
00051e d38f      	RCALL SUBOPT_0x24
00051f 35a5      	CPI  R26,LOW(0x55)
000520 e0e0      	LDI  R30,HIGH(0x55)
000521 07be      	CPC  R27,R30
000522 f020      	BRLO _0x202002E
000523 89a8      	LDD  R26,Y+16
000524 e5e4      	LDI  R30,LOW(84)
000525 1bea      	SUB  R30,R26
000526 87ee      	STD  Y+14,R30
                 _0x202002E:
000527 852d      	LDD  R18,Y+13
000528 85af      	LDD  R26,Y+15
000529 27bb      	CLR  R27
00052a 85ed      	LDD  R30,Y+13
00052b d382      	RCALL SUBOPT_0x24
00052c 97d1      	SBIW R26,49
00052d f020      	BRLO _0x202002F
00052e 85af      	LDD  R26,Y+15
00052f e3e0      	LDI  R30,LOW(48)
000530 1bea      	SUB  R30,R26
000531 87ed      	STD  Y+13,R30
                 _0x202002F:
000532 85a9      	LDD  R26,Y+9
000533 30a6      	CPI  R26,LOW(0x6)
000534 f009      	BREQ PC+2
000535 c052      	RJMP _0x2020030
000536 85ec      	LDD  R30,Y+12
000537 30e1      	CPI  R30,LOW(0x1)
000538 f409      	BRNE _0x2020034
000539 c164      	RJMP _0x2120008
                 _0x2020034:
00053a 30e3      	CPI  R30,LOW(0x3)
00053b f439      	BRNE _0x2020037
                +
00053c 91e0 0198+LDS R30 , _glcd_state + ( 27 )
00053e 91f0 0199+LDS R31 , _glcd_state + ( 27 ) + 1
                 	__GETW1MN _glcd_state,27
000540 9730      	SBIW R30,0
000541 f409      	BRNE _0x2020036
000542 c15b      	RJMP _0x2120008
                 _0x2020036:
                 _0x2020037:
000543 8508      	LDD  R16,Y+8
000544 85ed      	LDD  R30,Y+13
000545 d349      	RCALL SUBOPT_0x1B
000546 2f3e      	MOV  R19,R30
000547 2fe2      	MOV  R30,R18
000548 70e7      	ANDI R30,LOW(0x7)
000549 f419      	BRNE _0x2020039
00054a 85ad      	LDD  R26,Y+13
00054b 172a      	CP   R18,R26
00054c f0d1      	BREQ _0x2020038
                 _0x2020039:
00054d 2fa0      	MOV  R26,R16
00054e 27bb      	CLR  R27
00054f 2fe3      	MOV  R30,R19
000550 d361      	RCALL SUBOPT_0x25
000551 d335      	RCALL SUBOPT_0x19
000552 0fea      	ADD  R30,R26
000553 1ffb      	ADC  R31,R27
000554 d329      	RCALL SUBOPT_0x16
000555 9526      	LSR  R18
000556 9526      	LSR  R18
000557 9526      	LSR  R18
000558 2f53      	MOV  R21,R19
                 _0x202003B:
000559 935f      	PUSH R21
00055a 5f5f      	SUBI R21,-1
00055b 2fe2      	MOV  R30,R18
00055c 91af      	POP  R26
00055d 17ea      	CP   R30,R26
00055e f040      	BRLO _0x202003D
00055f 2f10      	MOV  R17,R16
                 _0x202003E:
000560 2fe1      	MOV  R30,R17
000561 5011      	SUBI R17,1
000562 30e0      	CPI  R30,0
000563 f011      	BREQ _0x2020040
000564 d350      	RCALL SUBOPT_0x26
000565 cffa      	RJMP _0x202003E
                 _0x2020040:
000566 cff2      	RJMP _0x202003B
                 _0x202003D:
                 _0x2020038:
000567 85ae      	LDD  R26,Y+14
000568 170a      	CP   R16,R26
000569 f0f1      	BREQ _0x2020041
00056a 85ee      	LDD  R30,Y+14
00056b d31b      	RCALL SUBOPT_0x19
00056c d326      	RCALL SUBOPT_0x1C
00056d d310      	RCALL SUBOPT_0x16
00056e 85ed      	LDD  R30,Y+13
00056f 70e7      	ANDI R30,LOW(0x7)
000570 f009      	BREQ _0x2020042
000571 5f3f      	SUBI R19,-LOW(1)
                 _0x2020042:
000572 e020      	LDI  R18,LOW(0)
                 _0x2020043:
000573 932f      	PUSH R18
000574 5f2f      	SUBI R18,-1
000575 2fe3      	MOV  R30,R19
000576 91af      	POP  R26
000577 17ae      	CP   R26,R30
000578 f478      	BRSH _0x2020045
000579 851e      	LDD  R17,Y+14
                 _0x2020046:
00057a 931f      	PUSH R17
00057b 5f1f      	SUBI R17,-1
00057c 2fe0      	MOV  R30,R16
00057d 91af      	POP  R26
00057e 17ae      	CP   R26,R30
00057f f410      	BRSH _0x2020048
000580 d334      	RCALL SUBOPT_0x26
000581 cff8      	RJMP _0x2020046
                 _0x2020048:
000582 85ee      	LDD  R30,Y+14
000583 81ae      	LDD  R26,Y+6
000584 81bf      	LDD  R27,Y+6+1
000585 d30d      	RCALL SUBOPT_0x1C
000586 d2f7      	RCALL SUBOPT_0x16
000587 cfeb      	RJMP _0x2020043
                 _0x2020045:
                 _0x2020041:
                 _0x2020030:
000588 85ef      	LDD  R30,Y+15
000589 70e7      	ANDI R30,LOW(0x7)
00058a 2f3e      	MOV  R19,R30
                 _0x2020049:
00058b 85ed      	LDD  R30,Y+13
00058c 30e0      	CPI  R30,0
00058d f409      	BRNE PC+2
00058e c10f      	RJMP _0x202004B
00058f d2f4      	RCALL SUBOPT_0x18
000590 d2ed      	RCALL SUBOPT_0x16
000591 e010      	LDI  R17,LOW(0)
000592 8908      	LDD  R16,Y+16
000593 3030      	CPI  R19,0
000594 f009      	BREQ PC+2
000595 c05a      	RJMP _0x202004C
000596 85ad      	LDD  R26,Y+13
000597 30a8      	CPI  R26,LOW(0x8)
000598 f408      	BRSH PC+2
000599 c051      	RJMP _0x202004D
00059a 85e9      	LDD  R30,Y+9
00059b 30e0      	CPI  R30,0
00059c f011      	BREQ _0x2020052
00059d 30e3      	CPI  R30,LOW(0x3)
00059e f409      	BRNE _0x2020053
                 _0x2020052:
00059f c002      	RJMP _0x2020054
                 _0x2020053:
0005a0 30e7      	CPI  R30,LOW(0x7)
0005a1 f409      	BRNE _0x2020055
                 _0x2020054:
0005a2 c002      	RJMP _0x2020056
                 _0x2020055:
0005a3 30e8      	CPI  R30,LOW(0x8)
0005a4 f409      	BRNE _0x2020057
                 _0x2020056:
0005a5 c002      	RJMP _0x2020058
                 _0x2020057:
0005a6 30e9      	CPI  R30,LOW(0x9)
0005a7 f409      	BRNE _0x2020059
                 _0x2020058:
0005a8 c002      	RJMP _0x202005A
                 _0x2020059:
0005a9 30ea      	CPI  R30,LOW(0xA)
0005aa f419      	BRNE _0x202005B
                 _0x202005A:
0005ab d314      	RCALL SUBOPT_0x27
0005ac de7e      	RCALL _pcd8544_gotoxy
0005ad c004      	RJMP _0x2020050
                 _0x202005B:
0005ae 30e6      	CPI  R30,LOW(0x6)
0005af f411      	BRNE _0x2020050
0005b0 d30f      	RCALL SUBOPT_0x27
0005b1 de68      	RCALL _pcd8544_setaddr_G101
                 _0x2020050:
                 _0x202005D:
0005b2 931f      	PUSH R17
0005b3 d30f      	RCALL SUBOPT_0x28
0005b4 91af      	POP  R26
0005b5 17ae      	CP   R26,R30
0005b6 f568      	BRSH _0x202005F
0005b7 85a9      	LDD  R26,Y+9
0005b8 30a6      	CPI  R26,LOW(0x6)
0005b9 f439      	BRNE _0x2020060
0005ba d30b      	RCALL SUBOPT_0x29
0005bb d28f      	RCALL SUBOPT_0x9
0005bc d2df      	RCALL SUBOPT_0x1F
0005bd d2e1      	RCALL SUBOPT_0x20
0005be 81a0      	LD   R26,Z
0005bf d24d      	RCALL _glcd_writemem
0005c0 c022      	RJMP _0x2020061
                 _0x2020060:
0005c1 85e9      	LDD  R30,Y+9
0005c2 30e9      	CPI  R30,LOW(0x9)
0005c3 f411      	BRNE _0x2020065
0005c4 e050      	LDI  R21,LOW(0)
0005c5 c00c      	RJMP _0x2020066
                 _0x2020065:
0005c6 30ea      	CPI  R30,LOW(0xA)
0005c7 f411      	BRNE _0x2020064
0005c8 ef5f      	LDI  R21,LOW(255)
0005c9 c008      	RJMP _0x2020066
                 _0x2020064:
0005ca d2fb      	RCALL SUBOPT_0x29
0005cb d303      	RCALL SUBOPT_0x2A
0005cc 2f5e      	MOV  R21,R30
0005cd 85e9      	LDD  R30,Y+9
0005ce 30e7      	CPI  R30,LOW(0x7)
0005cf f011      	BREQ _0x202006D
0005d0 30e8      	CPI  R30,LOW(0x8)
0005d1 f419      	BRNE _0x202006E
                 _0x202006D:
                 _0x2020066:
0005d2 d301      	RCALL SUBOPT_0x2B
0005d3 2f5e      	MOV  R21,R30
0005d4 c006      	RJMP _0x202006F
                 _0x202006E:
0005d5 30e3      	CPI  R30,LOW(0x3)
0005d6 f411      	BRNE _0x2020071
0005d7 9550      	COM  R21
0005d8 c002      	RJMP _0x2020072
                 _0x2020071:
0005d9 30e0      	CPI  R30,0
0005da f419      	BRNE _0x2020074
                 _0x2020072:
                 _0x202006F:
0005db 2fa5      	MOV  R26,R21
0005dc de38      	RCALL _pcd8544_wrdata_G101
0005dd c005      	RJMP _0x202006B
                 _0x2020074:
0005de d2f8      	RCALL SUBOPT_0x2C
0005df efef      	LDI  R30,LOW(255)
0005e0 93ea      	ST   -Y,R30
0005e1 85ad      	LDD  R26,Y+13
0005e2 deef      	RCALL _pcd8544_wrmasked_G101
                 _0x202006B:
                 _0x2020061:
0005e3 cfce      	RJMP _0x202005D
                 _0x202005F:
0005e4 85ef      	LDD  R30,Y+15
0005e5 5fe8      	SUBI R30,-LOW(8)
0005e6 87ef      	STD  Y+15,R30
0005e7 85ed      	LDD  R30,Y+13
0005e8 50e8      	SUBI R30,LOW(8)
0005e9 87ed      	STD  Y+13,R30
0005ea c0ae      	RJMP _0x2020075
                 _0x202004D:
0005eb 855d      	LDD  R21,Y+13
0005ec e020      	LDI  R18,LOW(0)
0005ed e0e0      	LDI  R30,LOW(0)
0005ee 87ed      	STD  Y+13,R30
0005ef c067      	RJMP _0x2020076
                 _0x202004C:
0005f0 2fe3      	MOV  R30,R19
0005f1 85ad      	LDD  R26,Y+13
0005f2 0fae      	ADD  R26,R30
0005f3 30a9      	CPI  R26,LOW(0x9)
0005f4 f420      	BRSH _0x2020077
0005f5 852d      	LDD  R18,Y+13
0005f6 e0e0      	LDI  R30,LOW(0)
0005f7 87ed      	STD  Y+13,R30
0005f8 c003      	RJMP _0x2020078
                 _0x2020077:
0005f9 e0e8      	LDI  R30,LOW(8)
0005fa 1be3      	SUB  R30,R19
0005fb 2f2e      	MOV  R18,R30
                 _0x2020078:
0005fc 933a      	ST   -Y,R19
0005fd 2fa2      	MOV  R26,R18
0005fe d1c3      	RCALL _glcd_getmask
0005ff 2f4e      	MOV  R20,R30
000600 85e9      	LDD  R30,Y+9
000601 30e6      	CPI  R30,LOW(0x6)
000602 f4c1      	BRNE _0x202007C
000603 d2bc      	RCALL SUBOPT_0x27
000604 de15      	RCALL _pcd8544_setaddr_G101
                 _0x202007D:
000605 931f      	PUSH R17
000606 d2bc      	RCALL SUBOPT_0x28
000607 91af      	POP  R26
000608 17ae      	CP   R26,R30
000609 f480      	BRSH _0x202007F
00060a d291      	RCALL SUBOPT_0x1F
00060b d293      	RCALL SUBOPT_0x20
00060c 81e0      	LD   R30,Z
00060d 23e4      	AND  R30,R20
00060e 2fae      	MOV  R26,R30
00060f 2fe3      	MOV  R30,R19
000610 d328      	RCALL __LSRB12
000611 d2cb      	RCALL SUBOPT_0x2D
000612 2fe3      	MOV  R30,R19
000613 2fa4      	MOV  R26,R20
000614 d324      	RCALL __LSRB12
000615 d2d1      	RCALL SUBOPT_0x2E
000616 d234      	RCALL SUBOPT_0x9
000617 2fa5      	MOV  R26,R21
000618 d1f4      	RCALL _glcd_writemem
000619 cfeb      	RJMP _0x202007D
                 _0x202007F:
00061a c022      	RJMP _0x202007B
                 _0x202007C:
00061b 30e9      	CPI  R30,LOW(0x9)
00061c f411      	BRNE _0x2020080
00061d e050      	LDI  R21,LOW(0)
00061e c003      	RJMP _0x2020081
                 _0x2020080:
00061f 30ea      	CPI  R30,LOW(0xA)
000620 f489      	BRNE _0x2020087
000621 ef5f      	LDI  R21,LOW(255)
                 _0x2020081:
000622 d2b1      	RCALL SUBOPT_0x2B
000623 2fae      	MOV  R26,R30
000624 2fe3      	MOV  R30,R19
000625 d30b      	RCALL __LSLB12
000626 2f5e      	MOV  R21,R30
                 _0x2020084:
000627 931f      	PUSH R17
000628 d29a      	RCALL SUBOPT_0x28
000629 91af      	POP  R26
00062a 17ae      	CP   R26,R30
00062b f428      	BRSH _0x2020086
00062c d2aa      	RCALL SUBOPT_0x2C
00062d 934a      	ST   -Y,R20
00062e e0a0      	LDI  R26,LOW(0)
00062f dea2      	RCALL _pcd8544_wrmasked_G101
000630 cff6      	RJMP _0x2020084
                 _0x2020086:
000631 c00b      	RJMP _0x202007B
                 _0x2020087:
                 _0x2020088:
000632 931f      	PUSH R17
000633 d28f      	RCALL SUBOPT_0x28
000634 91af      	POP  R26
000635 17ae      	CP   R26,R30
000636 f430      	BRSH _0x202008A
000637 d2b3      	RCALL SUBOPT_0x2F
000638 2fae      	MOV  R26,R30
000639 2fe3      	MOV  R30,R19
00063a d2f6      	RCALL __LSLB12
00063b d2bc      	RCALL SUBOPT_0x30
00063c cff5      	RJMP _0x2020088
                 _0x202008A:
                 _0x202007B:
00063d 85ed      	LDD  R30,Y+13
00063e 30e0      	CPI  R30,0
00063f f409      	BRNE _0x202008B
000640 c05d      	RJMP _0x202004B
                 _0x202008B:
000641 85ad      	LDD  R26,Y+13
000642 30a8      	CPI  R26,LOW(0x8)
000643 f428      	BRSH _0x202008C
000644 85ed      	LDD  R30,Y+13
000645 1be2      	SUB  R30,R18
000646 2f5e      	MOV  R21,R30
000647 e0e0      	LDI  R30,LOW(0)
000648 c003      	RJMP _0x20200A1
                 _0x202008C:
000649 2f53      	MOV  R21,R19
00064a 85ed      	LDD  R30,Y+13
00064b 50e8      	SUBI R30,LOW(8)
                 _0x20200A1:
00064c 87ed      	STD  Y+13,R30
00064d e010      	LDI  R17,LOW(0)
00064e 85ef      	LDD  R30,Y+15
00064f 5fe8      	SUBI R30,-LOW(8)
000650 87ef      	STD  Y+15,R30
000651 e0e8      	LDI  R30,LOW(8)
000652 1be3      	SUB  R30,R19
000653 2f2e      	MOV  R18,R30
000654 8908      	LDD  R16,Y+16
000655 d22e      	RCALL SUBOPT_0x18
000656 d227      	RCALL SUBOPT_0x16
                 _0x2020076:
000657 2fe5      	MOV  R30,R21
000658 e0f0      	LDI  R31,0
000659 5ee4      	SUBI R30,LOW(-__glcd_mask*2)
00065a 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
00065b 9144      	LPM  R20,Z
00065c 85e9      	LDD  R30,Y+9
00065d 30e6      	CPI  R30,LOW(0x6)
00065e f4c1      	BRNE _0x2020091
00065f d260      	RCALL SUBOPT_0x27
000660 ddb9      	RCALL _pcd8544_setaddr_G101
                 _0x2020092:
000661 931f      	PUSH R17
000662 d260      	RCALL SUBOPT_0x28
000663 91af      	POP  R26
000664 17ae      	CP   R26,R30
000665 f480      	BRSH _0x2020094
000666 d235      	RCALL SUBOPT_0x1F
000667 d237      	RCALL SUBOPT_0x20
000668 81e0      	LD   R30,Z
000669 23e4      	AND  R30,R20
00066a 2fae      	MOV  R26,R30
00066b 2fe2      	MOV  R30,R18
00066c d2c4      	RCALL __LSLB12
00066d d26f      	RCALL SUBOPT_0x2D
00066e 2fe2      	MOV  R30,R18
00066f 2fa4      	MOV  R26,R20
000670 d2c0      	RCALL __LSLB12
000671 d275      	RCALL SUBOPT_0x2E
000672 d1d8      	RCALL SUBOPT_0x9
000673 2fa5      	MOV  R26,R21
000674 d198      	RCALL _glcd_writemem
000675 cfeb      	RJMP _0x2020092
                 _0x2020094:
000676 c022      	RJMP _0x2020090
                 _0x2020091:
000677 30e9      	CPI  R30,LOW(0x9)
000678 f411      	BRNE _0x2020095
000679 e050      	LDI  R21,LOW(0)
00067a c003      	RJMP _0x2020096
                 _0x2020095:
00067b 30ea      	CPI  R30,LOW(0xA)
00067c f489      	BRNE _0x202009C
00067d ef5f      	LDI  R21,LOW(255)
                 _0x2020096:
00067e d255      	RCALL SUBOPT_0x2B
00067f 2fae      	MOV  R26,R30
000680 2fe2      	MOV  R30,R18
000681 d2b7      	RCALL __LSRB12
000682 2f5e      	MOV  R21,R30
                 _0x2020099:
000683 931f      	PUSH R17
000684 d23e      	RCALL SUBOPT_0x28
000685 91af      	POP  R26
000686 17ae      	CP   R26,R30
000687 f428      	BRSH _0x202009B
000688 d24e      	RCALL SUBOPT_0x2C
000689 934a      	ST   -Y,R20
00068a e0a0      	LDI  R26,LOW(0)
00068b de46      	RCALL _pcd8544_wrmasked_G101
00068c cff6      	RJMP _0x2020099
                 _0x202009B:
00068d c00b      	RJMP _0x2020090
                 _0x202009C:
                 _0x202009D:
00068e 931f      	PUSH R17
00068f d233      	RCALL SUBOPT_0x28
000690 91af      	POP  R26
000691 17ae      	CP   R26,R30
000692 f430      	BRSH _0x202009F
000693 d257      	RCALL SUBOPT_0x2F
000694 2fae      	MOV  R26,R30
000695 2fe2      	MOV  R30,R18
000696 d2a2      	RCALL __LSRB12
000697 d260      	RCALL SUBOPT_0x30
000698 cff5      	RJMP _0x202009D
                 _0x202009F:
                 _0x2020090:
                 _0x2020075:
000699 85e8      	LDD  R30,Y+8
00069a d1ec      	RCALL SUBOPT_0x19
00069b d1f7      	RCALL SUBOPT_0x1C
00069c d1e4      	RCALL SUBOPT_0x17
00069d ceed      	RJMP _0x2020049
                 _0x202004B:
                 _0x2120008:
00069e d2df      	RCALL __LOADLOCR6
00069f 9661      	ADIW R28,17
0006a0 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _glcd_clipx:
                 ; .FSTART _glcd_clipx
0006a1 d25a      	RCALL SUBOPT_0x31
0006a2 f014      	BRLT _0x2040003
0006a3 d1b9      	RCALL SUBOPT_0xE
0006a4 c125      	RJMP _0x2120003
                 _0x2040003:
0006a5 d25b      	RCALL SUBOPT_0x32
0006a6 35a4      	CPI  R26,LOW(0x54)
0006a7 e0e0      	LDI  R30,HIGH(0x54)
0006a8 07be      	CPC  R27,R30
0006a9 f01c      	BRLT _0x2040004
0006aa e5e3      	LDI  R30,LOW(83)
0006ab e0f0      	LDI  R31,HIGH(83)
0006ac c11d      	RJMP _0x2120003
                 _0x2040004:
0006ad 81e8      	LD   R30,Y
0006ae 81f9      	LDD  R31,Y+1
0006af c11a      	RJMP _0x2120003
                 ; .FEND
                 _glcd_clipy:
                 ; .FSTART _glcd_clipy
0006b0 d24b      	RCALL SUBOPT_0x31
0006b1 f014      	BRLT _0x2040005
0006b2 d1aa      	RCALL SUBOPT_0xE
0006b3 c116      	RJMP _0x2120003
                 _0x2040005:
0006b4 d24c      	RCALL SUBOPT_0x32
0006b5 97d0      	SBIW R26,48
0006b6 f01c      	BRLT _0x2040006
0006b7 e2ef      	LDI  R30,LOW(47)
0006b8 e0f0      	LDI  R31,HIGH(47)
0006b9 c110      	RJMP _0x2120003
                 _0x2040006:
0006ba 81e8      	LD   R30,Y
0006bb 81f9      	LDD  R31,Y+1
0006bc c10d      	RJMP _0x2120003
                 ; .FEND
                 _glcd_getcharw_G102:
                 ; .FSTART _glcd_getcharw_G102
0006bd d190      	RCALL SUBOPT_0xA
0006be 9723      	SBIW R28,3
0006bf d244      	RCALL SUBOPT_0x33
0006c0 018f      	MOVW R16,R30
0006c1 2e00      	MOV  R0,R16
0006c2 2a01      	OR   R0,R17
0006c3 f411      	BRNE _0x204000B
0006c4 d198      	RCALL SUBOPT_0xE
0006c5 c052      	RJMP _0x2120007
                 _0x204000B:
0006c6 d243      	RCALL SUBOPT_0x34
0006c7 820f      	STD  Y+7,R0
0006c8 d241      	RCALL SUBOPT_0x34
0006c9 820e      	STD  Y+6,R0
0006ca d23f      	RCALL SUBOPT_0x34
0006cb 8608      	STD  Y+8,R0
0006cc 85eb      	LDD  R30,Y+11
0006cd 85a8      	LDD  R26,Y+8
0006ce 17ea      	CP   R30,R26
0006cf f410      	BRSH _0x204000C
0006d0 d18c      	RCALL SUBOPT_0xE
0006d1 c046      	RJMP _0x2120007
                 _0x204000C:
0006d2 01f8      	MOVW R30,R16
                +
0006d3 5f0f     +SUBI R16 , LOW ( - 1 )
0006d4 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0006d5 9154      	LPM  R21,Z
0006d6 85a8      	LDD  R26,Y+8
0006d7 27bb      	CLR  R27
0006d8 27ee      	CLR  R30
0006d9 0fa5      	ADD  R26,R21
0006da 1fbe      	ADC  R27,R30
0006db 85eb      	LDD  R30,Y+11
0006dc e0f0      	LDI  R31,0
0006dd 17ea      	CP   R30,R26
0006de 07fb      	CPC  R31,R27
0006df f010      	BRLO _0x204000D
0006e0 d17c      	RCALL SUBOPT_0xE
0006e1 c036      	RJMP _0x2120007
                 _0x204000D:
0006e2 81ee      	LDD  R30,Y+6
0006e3 d1ab      	RCALL SUBOPT_0x1B
0006e4 2f4e      	MOV  R20,R30
0006e5 81ee      	LDD  R30,Y+6
0006e6 70e7      	ANDI R30,LOW(0x7)
0006e7 f009      	BREQ _0x204000E
0006e8 5f4f      	SUBI R20,-LOW(1)
                 _0x204000E:
0006e9 81ef      	LDD  R30,Y+7
0006ea 30e0      	CPI  R30,0
0006eb f081      	BREQ _0x204000F
0006ec 85a9      	LDD  R26,Y+9
0006ed 85ba      	LDD  R27,Y+9+1
0006ee 93ec      	ST   X,R30
0006ef 85a8      	LDD  R26,Y+8
0006f0 85eb      	LDD  R30,Y+11
0006f1 1bea      	SUB  R30,R26
0006f2 e0f0      	LDI  R31,0
0006f3 01df      	MOVW R26,R30
0006f4 81ef      	LDD  R30,Y+7
0006f5 d1bc      	RCALL SUBOPT_0x25
0006f6 01df      	MOVW R26,R30
0006f7 2fe4      	MOV  R30,R20
0006f8 d1b9      	RCALL SUBOPT_0x25
0006f9 0fe0      	ADD  R30,R16
0006fa 1ff1      	ADC  R31,R17
0006fb c01c      	RJMP _0x2120007
                 _0x204000F:
0006fc 0198      	MOVW R18,R16
0006fd 2fe5      	MOV  R30,R21
0006fe e0f0      	LDI  R31,0
                +
0006ff 0f0e     +ADD R16 , R30
000700 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
                 _0x2040010:
000701 85a8      	LDD  R26,Y+8
000702 5faf      	SUBI R26,-LOW(1)
000703 87a8      	STD  Y+8,R26
000704 50a1      	SUBI R26,LOW(1)
000705 85eb      	LDD  R30,Y+11
000706 17ae      	CP   R26,R30
000707 f450      	BRSH _0x2040012
000708 01f9      	MOVW R30,R18
                +
000709 5f2f     +SUBI R18 , LOW ( - 1 )
00070a 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00070b 91a4      	LPM  R26,Z
00070c e0b0      	LDI  R27,0
00070d 2fe4      	MOV  R30,R20
00070e d1a3      	RCALL SUBOPT_0x25
                +
00070f 0f0e     +ADD R16 , R30
000710 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
000711 cfef      	RJMP _0x2040010
                 _0x2040012:
000712 01f9      	MOVW R30,R18
000713 91e4      	LPM  R30,Z
000714 85a9      	LDD  R26,Y+9
000715 85ba      	LDD  R27,Y+9+1
000716 93ec      	ST   X,R30
000717 01f8      	MOVW R30,R16
                 _0x2120007:
000718 d265      	RCALL __LOADLOCR6
000719 962c      	ADIW R28,12
00071a 9508      	RET
                 ; .FEND
                 _glcd_new_line_G102:
                 ; .FSTART _glcd_new_line_G102
00071b e0e0      	LDI  R30,LOW(0)
                +
00071c 93e0 017f+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
                +
00071e 91a0 0180+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
000720 27bb      	CLR  R27
000721 d1ed      	RCALL SUBOPT_0x35
000722 d18b      	RCALL SUBOPT_0x24
                +
000723 91e0 0184+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
000725 d188      	RCALL SUBOPT_0x24
000726 df89      	RCALL _glcd_clipy
                +
000727 93e0 0180+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
000729 9508      	RET
                 ; .FEND
                 _glcd_putchar:
                 ; .FSTART _glcd_putchar
00072a 93aa      	ST   -Y,R26
00072b 9721      	SBIW R28,1
00072c d1d7      	RCALL SUBOPT_0x33
00072d 9730      	SBIW R30,0
00072e f409      	BRNE PC+2
00072f c04c      	RJMP _0x204001F
000730 81af      	LDD  R26,Y+7
000731 30aa      	CPI  R26,LOW(0xA)
000732 f409      	BRNE _0x2040020
000733 c046      	RJMP _0x2040021
                 _0x2040020:
000734 81ef      	LDD  R30,Y+7
000735 93ea      	ST   -Y,R30
000736 01de      	MOVW R26,R28
000737 9617      	ADIW R26,7
000738 df84      	RCALL _glcd_getcharw_G102
000739 01af      	MOVW R20,R30
00073a 9730      	SBIW R30,0
00073b f409      	BRNE _0x2040022
00073c c041      	RJMP _0x2120005
                 _0x2040022:
                +
00073d 91e0 0183+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
00073f 81ae      	LDD  R26,Y+6
000740 0fea      	ADD  R30,R26
000741 2f3e      	MOV  R19,R30
                +
000742 91a0 017f+LDS R26 , _glcd_state + ( 2 )
                 	__GETB2MN _glcd_state,2
000744 27bb      	CLR  R27
000745 d14d      	RCALL SUBOPT_0x1C
000746 018f      	MOVW R16,R30
                +
000747 3505     +CPI R16 , LOW ( 85 )
000748 e0e0     +LDI R30 , HIGH ( 85 )
000749 071e     +CPC R17 , R30
                 	__CPWRN 16,17,85
00074a f018      	BRLO _0x2040023
00074b 2f03      	MOV  R16,R19
00074c 2711      	CLR  R17
00074d dfcd      	RCALL _glcd_new_line_G102
                 _0x2040023:
                +
00074e 91e0 017f+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000750 d1c5      	RCALL SUBOPT_0x36
000751 85e8      	LDD  R30,Y+8
000752 93ea      	ST   -Y,R30
000753 d1bb      	RCALL SUBOPT_0x35
000754 93ea      	ST   -Y,R30
000755 e0e1      	LDI  R30,LOW(1)
000756 93ea      	ST   -Y,R30
000757 935a      	ST   -Y,R21
000758 934a      	ST   -Y,R20
000759 e0a7      	LDI  R26,LOW(7)
00075a ddae      	RCALL _glcd_block
                +
00075b 91e0 017f+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
00075d 81ae      	LDD  R26,Y+6
00075e 0fea      	ADD  R30,R26
00075f d1b6      	RCALL SUBOPT_0x36
                +
000760 91e0 0183+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
000762 93ea      	ST   -Y,R30
000763 d1ab      	RCALL SUBOPT_0x35
000764 93ea      	ST   -Y,R30
000765 d0c4      	RCALL SUBOPT_0x0
000766 d1b4      	RCALL SUBOPT_0x37
                +
000767 91e0 017f+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000769 93ea      	ST   -Y,R30
                +
00076a 91a0 0180+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
00076c d1a2      	RCALL SUBOPT_0x35
00076d 0fea      	ADD  R30,R26
00076e 93ea      	ST   -Y,R30
00076f 933a      	ST   -Y,R19
                +
000770 91e0 0184+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
000772 93ea      	ST   -Y,R30
000773 d0b6      	RCALL SUBOPT_0x0
000774 d1a6      	RCALL SUBOPT_0x37
000775 e5e4      	LDI  R30,LOW(84)
000776 e0f0      	LDI  R31,HIGH(84)
000777 17e0      	CP   R30,R16
000778 07f1      	CPC  R31,R17
000779 f411      	BRNE _0x2040024
                 _0x2040021:
00077a dfa0      	RCALL _glcd_new_line_G102
00077b c002      	RJMP _0x2120005
                 _0x2040024:
                 _0x204001F:
                +
00077c 9300 017f+STS _glcd_state + ( 2 ) , R16
                 	__PUTBMRN _glcd_state,2,16
                 _0x2120005:
00077e d1ff      	RCALL __LOADLOCR6
                 _0x2120006:
00077f 9628      	ADIW R28,8
000780 9508      	RET
                 ; .FEND
                 _glcd_outtext:
                 ; .FSTART _glcd_outtext
000781 d0cc      	RCALL SUBOPT_0xA
000782 931a      	ST   -Y,R17
                 _0x204002E:
000783 81a9      	LDD  R26,Y+1
000784 81ba      	LDD  R27,Y+1+1
000785 91ed      	LD   R30,X+
000786 83a9      	STD  Y+1,R26
000787 83ba      	STD  Y+1+1,R27
000788 2f1e      	MOV  R17,R30
000789 30e0      	CPI  R30,0
00078a f019      	BREQ _0x2040030
00078b 2fa1      	MOV  R26,R17
00078c df9d      	RCALL _glcd_putchar
00078d cff5      	RJMP _0x204002E
                 _0x2040030:
00078e 8118      	LDD  R17,Y+0
00078f c07b      	RJMP _0x2120002
                 ; .FEND
                 _glcd_moveto:
                 ; .FSTART _glcd_moveto
000790 93aa      	ST   -Y,R26
000791 81a9      	LDD  R26,Y+1
000792 27bb      	CLR  R27
000793 df0d      	RCALL _glcd_clipx
                +
000794 93e0 017f+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
000796 81a8      	LD   R26,Y
000797 27bb      	CLR  R27
000798 df17      	RCALL _glcd_clipy
                +
000799 93e0 0180+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
00079b c02e      	RJMP _0x2120003
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _memset:
                 ; .FSTART _memset
00079c d0b1      	RCALL SUBOPT_0xA
00079d 81b9          ldd  r27,y+1
00079e 81a8          ld   r26,y
00079f 9610          adiw r26,0
0007a0 f031          breq memset1
0007a1 81fc          ldd  r31,y+4
0007a2 81eb          ldd  r30,y+3
0007a3 816a          ldd  r22,y+2
                 memset0:
0007a4 9361          st   z+,r22
0007a5 9711          sbiw r26,1
0007a6 f7e9          brne memset0
                 memset1:
0007a7 81eb          ldd  r30,y+3
0007a8 81fc          ldd  r31,y+4
                 _0x2120004:
0007a9 9625      	ADIW R28,5
0007aa 9508      	RET
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
0007ab d0a2      	RCALL SUBOPT_0xA
0007ac 91a9          ld   r26,y+
0007ad 91b9          ld   r27,y+
0007ae 27ee          clr  r30
0007af 27ff          clr  r31
                 strlen0:
0007b0 916d          ld   r22,x+
0007b1 2366          tst  r22
0007b2 f011          breq strlen1
0007b3 9631          adiw r30,1
0007b4 cffb          rjmp strlen0
                 strlen1:
0007b5 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
0007b6 d097      	RCALL SUBOPT_0xA
0007b7 27aa          clr  r26
0007b8 27bb          clr  r27
0007b9 91e9          ld   r30,y+
0007ba 91f9          ld   r31,y+
                 strlenf0:
0007bb 9005      	lpm  r0,z+
0007bc 2000          tst  r0
0007bd f011          breq strlenf1
0007be 9611          adiw r26,1
0007bf cffb          rjmp strlenf0
                 strlenf1:
0007c0 01fd          movw r30,r26
0007c1 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 _glcd_getmask:
                 ; .FSTART _glcd_getmask
0007c2 93aa      	ST   -Y,R26
0007c3 81e8      	LD   R30,Y
0007c4 e0f0      	LDI  R31,0
0007c5 5ee4      	SUBI R30,LOW(-__glcd_mask*2)
0007c6 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
0007c7 91a4      	LPM  R26,Z
0007c8 81e9      	LDD  R30,Y+1
0007c9 d167      	RCALL __LSLB12
                 _0x2120003:
0007ca 9622      	ADIW R28,2
0007cb 9508      	RET
                 ; .FEND
                 _glcd_mappixcolor1bit:
                 ; .FSTART _glcd_mappixcolor1bit
0007cc d060      	RCALL SUBOPT_0x1
0007cd 81e9      	LDD  R30,Y+1
0007ce 30e7      	CPI  R30,LOW(0x7)
0007cf f011      	BREQ _0x20C0007
0007d0 30ea      	CPI  R30,LOW(0xA)
0007d1 f419      	BRNE _0x20C0008
                 _0x20C0007:
0007d2 9110 017d 	LDS  R17,_glcd_state
0007d4 c009      	RJMP _0x20C0009
                 _0x20C0008:
0007d5 30e9      	CPI  R30,LOW(0x9)
0007d6 f419      	BRNE _0x20C000B
                +
0007d7 9110 017e+LDS R17 , _glcd_state + ( 1 )
                 	__GETBRMN 17,_glcd_state,1
0007d9 c004      	RJMP _0x20C0009
                 _0x20C000B:
0007da 30e8      	CPI  R30,LOW(0x8)
0007db f4a1      	BRNE _0x20C0005
                +
0007dc 9110 018d+LDS R17 , _glcd_state + ( 16 )
                 	__GETBRMN 17,_glcd_state,16
                 _0x20C0009:
                +
0007de 91e0 017e+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
0007e0 30e0      	CPI  R30,0
0007e1 f049      	BREQ _0x20C000E
0007e2 3010      	CPI  R17,0
0007e3 f019      	BREQ _0x20C000F
0007e4 efef      	LDI  R30,LOW(255)
0007e5 8118      	LDD  R17,Y+0
0007e6 c024      	RJMP _0x2120002
                 _0x20C000F:
0007e7 81ea      	LDD  R30,Y+2
0007e8 95e0      	COM  R30
0007e9 8118      	LDD  R17,Y+0
0007ea c020      	RJMP _0x2120002
                 _0x20C000E:
0007eb 3010      	CPI  R17,0
0007ec f419      	BRNE _0x20C0011
0007ed e0e0      	LDI  R30,LOW(0)
0007ee 8118      	LDD  R17,Y+0
0007ef c01b      	RJMP _0x2120002
                 _0x20C0011:
                 _0x20C0005:
0007f0 81ea      	LDD  R30,Y+2
0007f1 8118      	LDD  R17,Y+0
0007f2 c018      	RJMP _0x2120002
                 ; .FEND
                 _glcd_readmem:
                 ; .FSTART _glcd_readmem
0007f3 d05a      	RCALL SUBOPT_0xA
0007f4 81ea      	LDD  R30,Y+2
0007f5 30e1      	CPI  R30,LOW(0x1)
0007f6 f421      	BRNE _0x20C0015
0007f7 81e8      	LD   R30,Y
0007f8 81f9      	LDD  R31,Y+1
0007f9 91e4      	LPM  R30,Z
0007fa c010      	RJMP _0x2120002
                 _0x20C0015:
0007fb 30e2      	CPI  R30,LOW(0x2)
0007fc f419      	BRNE _0x20C0016
0007fd d103      	RCALL SUBOPT_0x32
0007fe d157      	RCALL __EEPROMRDB
0007ff c00b      	RJMP _0x2120002
                 _0x20C0016:
000800 30e3      	CPI  R30,LOW(0x3)
000801 f439      	BRNE _0x20C0018
000802 d0fe      	RCALL SUBOPT_0x32
                +
000803 91e0 0196+LDS R30 , _glcd_state + ( 25 )
000805 91f0 0197+LDS R31 , _glcd_state + ( 25 ) + 1
000807 9509     +ICALL
                 	__CALL1MN _glcd_state,25
000808 c002      	RJMP _0x2120002
                 _0x20C0018:
000809 d0f7      	RCALL SUBOPT_0x32
00080a 91ec      	LD   R30,X
                 _0x2120002:
00080b 9623      	ADIW R28,3
00080c 9508      	RET
                 ; .FEND
                 _glcd_writemem:
                 ; .FSTART _glcd_writemem
00080d 93aa      	ST   -Y,R26
00080e 81eb      	LDD  R30,Y+3
00080f 30e0      	CPI  R30,0
000810 f429      	BRNE _0x20C001C
000811 81e8      	LD   R30,Y
000812 81a9      	LDD  R26,Y+1
000813 81ba      	LDD  R27,Y+1+1
000814 93ec      	ST   X,R30
000815 c012      	RJMP _0x20C001B
                 _0x20C001C:
000816 30e2      	CPI  R30,LOW(0x2)
000817 f429      	BRNE _0x20C001D
000818 81e8      	LD   R30,Y
000819 81a9      	LDD  R26,Y+1
00081a 81ba      	LDD  R27,Y+1+1
00081b d146      	RCALL __EEPROMWRB
00081c c00b      	RJMP _0x20C001B
                 _0x20C001D:
00081d 30e3      	CPI  R30,LOW(0x3)
00081e f449      	BRNE _0x20C001B
00081f 81e9      	LDD  R30,Y+1
000820 81fa      	LDD  R31,Y+1+1
000821 d029      	RCALL SUBOPT_0x9
000822 81aa      	LDD  R26,Y+2
                +
000823 91e0 0198+LDS R30 , _glcd_state + ( 27 )
000825 91f0 0199+LDS R31 , _glcd_state + ( 27 ) + 1
000827 9509     +ICALL
                 	__CALL1MN _glcd_state,27
                 _0x20C001B:
                 _0x2120001:
000828 9624      	ADIW R28,4
000829 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _glcd_state:
00017d           	.BYTE 0x1D
                 _glcd_buff:
00019a           	.BYTE 0x96
                 _gfx_addr_G101:
000230           	.BYTE 0x2
                 _gfx_buffer_G101:
000232           	.BYTE 0x1F8
                 __seed_G108:
00042a           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x0:
00082a e0e0      	LDI  R30,LOW(0)
00082b 93ea      	ST   -Y,R30
00082c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1:
00082d 93aa      	ST   -Y,R26
00082e 931a      	ST   -Y,R17
00082f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x2:
                +
000830 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000831 958a     +DEC R24
000832 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000833 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3:
000834 9a93      	SBI  0x12,3
000835 dffa      	RCALL SUBOPT_0x2
000836 e0e0      	LDI  R30,0
000837 9982      	SBIC 0x10,2
000838 e0e1      	LDI  R30,1
000839 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x4:
00083a d9a7      	RCALL _SPI_RW
00083b 81a8      	LD   R26,Y
00083c c9a5      	RJMP _SPI_RW
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x5:
00083d 9a95      	SBI  0x12,5
                +
00083e e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
00083f 958a     +DEC R24
000840 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
000841 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6:
000842 81a8      	LD   R26,Y
000843 cff6      	RJMP SUBOPT_0x4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
000844 e0e7      	LDI  R30,LOW(7)
000845 93ea      	ST   -Y,R30
000846 e7ae      	LDI  R26,LOW(126)
000847 c9ca      	RJMP _RF_Write
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x8:
000848 93ea      	ST   -Y,R30
000849 e0a1      	LDI  R26,LOW(1)
00084a c9c7      	RJMP _RF_Write
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x9:
00084b 93fa      	ST   -Y,R31
00084c 93ea      	ST   -Y,R30
00084d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0xA:
00084e 93ba      	ST   -Y,R27
00084f 93aa      	ST   -Y,R26
000850 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xB:
000851 81aa      	LDD  R26,Y+2
000852 81bb      	LDD  R27,Y+2+1
000853 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xC:
000854 9614      	ADIW R26,4
000855 d0f3      	RCALL __GETW1P
000856 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0xD:
000857 91ed      	LD   R30,X+
000858 91fd      	LD   R31,X+
000859 9631      	ADIW R30,1
00085a 93fe      	ST   -X,R31
00085b 93ee      	ST   -X,R30
00085c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0xE:
00085d e0e0      	LDI  R30,LOW(0)
00085e e0f0      	LDI  R31,HIGH(0)
00085f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0xF:
000860 932a      	ST   -Y,R18
000861 85ad      	LDD  R26,Y+13
000862 85be      	LDD  R27,Y+13+1
000863 85ef      	LDD  R30,Y+15
000864 89f8      	LDD  R31,Y+15+1
000865 9509      	ICALL
000866 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x10:
000867 89e8      	LDD  R30,Y+16
000868 89f9      	LDD  R31,Y+16+1
000869 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x11:
00086a 9734      	SBIW R30,4
00086b 8be8      	STD  Y+16,R30
00086c 8bf9      	STD  Y+16+1,R31
00086d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x12:
00086e 85ad      	LDD  R26,Y+13
00086f 85be      	LDD  R27,Y+13+1
000870 85ef      	LDD  R30,Y+15
000871 89f8      	LDD  R31,Y+15+1
000872 9509      	ICALL
000873 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x13:
000874 dff2      	RCALL SUBOPT_0x10
000875 cff4      	RJMP SUBOPT_0x11
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x14:
000876 89a8      	LDD  R26,Y+16
000877 89b9      	LDD  R27,Y+16+1
000878 cfdb      	RJMP SUBOPT_0xC
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x15:
000879 83ee      	STD  Y+6,R30
00087a 83ff      	STD  Y+6+1,R31
00087b 81ae      	LDD  R26,Y+6
00087c 81bf      	LDD  R27,Y+6+1
00087d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x16:
00087e 83ee      	STD  Y+6,R30
00087f 83ff      	STD  Y+6+1,R31
000880 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x17:
000881 87ea      	STD  Y+10,R30
000882 87fb      	STD  Y+10+1,R31
000883 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x18:
000884 85ea      	LDD  R30,Y+10
000885 85fb      	LDD  R31,Y+10+1
000886 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x19:
000887 85aa      	LDD  R26,Y+10
000888 85bb      	LDD  R27,Y+10+1
000889 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1A:
00088a 01de      	MOVW R26,R28
00088b 961c      	ADIW R26,12
00088c d09c      	RCALL __ADDW2R15
00088d d0bb      	RCALL __GETW1P
00088e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1B:
00088f 95e6      	LSR  R30
000890 95e6      	LSR  R30
000891 95e6      	LSR  R30
000892 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1C:
000893 e0f0      	LDI  R31,0
000894 0fea      	ADD  R30,R26
000895 1ffb      	ADC  R31,R27
000896 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1D:
000897 2fae      	MOV  R26,R30
000898 cb77      	RJMP _pcd8544_wrcmd
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1E:
000899 5cee      	SUBI R30,LOW(-_gfx_buffer_G101)
00089a 4ffd      	SBCI R31,HIGH(-_gfx_buffer_G101)
00089b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x1F:
00089c e3a0      	LDI  R26,LOW(_gfx_addr_G101)
00089d e0b2      	LDI  R27,HIGH(_gfx_addr_G101)
00089e cfb8      	RJMP SUBOPT_0xD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x20:
00089f 9731      	SBIW R30,1
0008a0 cff8      	RJMP SUBOPT_0x1E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x21:
0008a1 81ec      	LDD  R30,Y+4
0008a2 81fd      	LDD  R31,Y+4+1
0008a3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x22:
                +
0008a4 93e0 0181+STS _glcd_state + ( 4 ) , R30
0008a6 93f0 0182+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
0008a8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x23:
                +
0008a9 93e0 0196+STS _glcd_state + ( 25 ) , R30
0008ab 93f0 0197+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
0008ad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x24:
0008ae e0f0      	LDI  R31,0
0008af 0fae      	ADD  R26,R30
0008b0 1fbf      	ADC  R27,R31
0008b1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x25:
0008b2 e0f0      	LDI  R31,0
0008b3 d08d      	RCALL __MULW12U
0008b4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x26:
0008b5 85ec      	LDD  R30,Y+12
0008b6 93ea      	ST   -Y,R30
0008b7 81ef      	LDD  R30,Y+7
0008b8 85f8      	LDD  R31,Y+7+1
0008b9 9631      	ADIW R30,1
0008ba 83ef      	STD  Y+7,R30
0008bb 87f8      	STD  Y+7+1,R31
0008bc 9731      	SBIW R30,1
0008bd df8d      	RCALL SUBOPT_0x9
0008be e0a0      	LDI  R26,LOW(0)
0008bf cf4d      	RJMP _glcd_writemem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x27:
0008c0 930a      	ST   -Y,R16
0008c1 89a8      	LDD  R26,Y+16
0008c2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x28:
0008c3 5f1f      	SUBI R17,-1
0008c4 85ee      	LDD  R30,Y+14
0008c5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x29:
0008c6 85ec      	LDD  R30,Y+12
0008c7 93ea      	ST   -Y,R30
0008c8 81ef      	LDD  R30,Y+7
0008c9 85f8      	LDD  R31,Y+7+1
0008ca 9631      	ADIW R30,1
0008cb 83ef      	STD  Y+7,R30
0008cc 87f8      	STD  Y+7+1,R31
0008cd 9731      	SBIW R30,1
0008ce 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2A:
0008cf 2766      	CLR  R22
0008d0 2777      	CLR  R23
0008d1 01df      	MOVW R26,R30
0008d2 01cb      	MOVW R24,R22
0008d3 cf1f      	RJMP _glcd_readmem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2B:
0008d4 935a      	ST   -Y,R21
0008d5 85aa      	LDD  R26,Y+10
0008d6 cef5      	RJMP _glcd_mappixcolor1bit
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2C:
0008d7 930a      	ST   -Y,R16
0008d8 9503      	INC  R16
0008d9 89e8      	LDD  R30,Y+16
0008da 93ea      	ST   -Y,R30
0008db 935a      	ST   -Y,R21
0008dc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2D:
0008dd 2f5e      	MOV  R21,R30
0008de 85ec      	LDD  R30,Y+12
0008df 93ea      	ST   -Y,R30
0008e0 81af      	LDD  R26,Y+7
0008e1 85b8      	LDD  R27,Y+7+1
0008e2 2788      	CLR  R24
0008e3 2799      	CLR  R25
0008e4 df0e      	RCALL _glcd_readmem
0008e5 2e1e      	MOV  R1,R30
0008e6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2E:
0008e7 95e0      	COM  R30
0008e8 21e1      	AND  R30,R1
0008e9 2b5e      	OR   R21,R30
0008ea cfdb      	RJMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x2F:
0008eb 930a      	ST   -Y,R16
0008ec 9503      	INC  R16
0008ed 89e8      	LDD  R30,Y+16
0008ee 93ea      	ST   -Y,R30
0008ef 85ee      	LDD  R30,Y+14
0008f0 93ea      	ST   -Y,R30
0008f1 85e9      	LDD  R30,Y+9
0008f2 85fa      	LDD  R31,Y+9+1
0008f3 9631      	ADIW R30,1
0008f4 87e9      	STD  Y+9,R30
0008f5 87fa      	STD  Y+9+1,R31
0008f6 9731      	SBIW R30,1
0008f7 cfd7      	RJMP SUBOPT_0x2A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x30:
0008f8 93ea      	ST   -Y,R30
0008f9 934a      	ST   -Y,R20
0008fa 85ad      	LDD  R26,Y+13
0008fb cbd6      	RJMP _pcd8544_wrmasked_G101
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x31:
0008fc df51      	RCALL SUBOPT_0xA
0008fd 81a8      	LD   R26,Y
0008fe 81b9      	LDD  R27,Y+1
0008ff d073      	RCALL __CPW02
000900 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x32:
000901 81a8      	LD   R26,Y
000902 81b9      	LDD  R27,Y+1
000903 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x33:
000904 d072      	RCALL __SAVELOCR6
                +
000905 91e0 0181+LDS R30 , _glcd_state + ( 4 )
000907 91f0 0182+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
000909 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x34:
00090a 01f8      	MOVW R30,R16
                +
00090b 5f0f     +SUBI R16 , LOW ( - 1 )
00090c 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00090d 9004      	LPM  R0,Z
00090e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x35:
                +
00090f 91e0 0181+LDS R30 , _glcd_state + ( 4 )
000911 91f0 0182+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
000913 9631      	ADIW R30,1
000914 91e4      	LPM  R30,Z
000915 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x36:
000916 93ea      	ST   -Y,R30
                +
000917 91e0 0180+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
000919 93ea      	ST   -Y,R30
00091a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x37:
00091b df41      	RCALL SUBOPT_0xE
00091c df2e      	RCALL SUBOPT_0x9
00091d e0a9      	LDI  R26,LOW(9)
00091e cbea      	RJMP _glcd_block
                 
                 
                 	.CSEG
                 _delay_ms:
00091f 9610      	adiw r26,0
000920 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000921 ed80     +LDI R24 , LOW ( 0x7D0 )
000922 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000923 9701     +SBIW R24 , 1
000924 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000925 95a8      	wdr
000926 9711      	sbiw r26,1
000927 f7c9      	brne __delay_ms0
                 __delay_ms1:
000928 9508      	ret
                 
                 __ADDW2R15:
000929 2400      	CLR  R0
00092a 0daf      	ADD  R26,R15
00092b 1db0      	ADC  R27,R0
00092c 9508      	RET
                 
                 __ANEGW1:
00092d 95f1      	NEG  R31
00092e 95e1      	NEG  R30
00092f 40f0      	SBCI R31,0
000930 9508      	RET
                 
                 __LSLB12:
000931 23ee      	TST  R30
000932 2e0e      	MOV  R0,R30
000933 2fea      	MOV  R30,R26
000934 f019      	BREQ __LSLB12R
                 __LSLB12L:
000935 0fee      	LSL  R30
000936 940a      	DEC  R0
000937 f7e9      	BRNE __LSLB12L
                 __LSLB12R:
000938 9508      	RET
                 
                 __LSRB12:
000939 23ee      	TST  R30
00093a 2e0e      	MOV  R0,R30
00093b 2fea      	MOV  R30,R26
00093c f019      	BREQ __LSRB12R
                 __LSRB12L:
00093d 95e6      	LSR  R30
00093e 940a      	DEC  R0
00093f f7e9      	BRNE __LSRB12L
                 __LSRB12R:
000940 9508      	RET
                 
                 __MULW12U:
000941 9ffa      	MUL  R31,R26
000942 2df0      	MOV  R31,R0
000943 9feb      	MUL  R30,R27
000944 0df0      	ADD  R31,R0
000945 9fea      	MUL  R30,R26
000946 2de0      	MOV  R30,R0
000947 0df1      	ADD  R31,R1
000948 9508      	RET
                 
                 __GETW1P:
000949 91ed      	LD   R30,X+
00094a 91fc      	LD   R31,X
00094b 9711      	SBIW R26,1
00094c 9508      	RET
                 
                 __GETW1PF:
00094d 9005      	LPM  R0,Z+
00094e 91f4      	LPM  R31,Z
00094f 2de0      	MOV  R30,R0
000950 9508      	RET
                 
                 __PUTPARD1:
000951 937a      	ST   -Y,R23
000952 936a      	ST   -Y,R22
000953 93fa      	ST   -Y,R31
000954 93ea      	ST   -Y,R30
000955 9508      	RET
                 
                 __EEPROMRDB:
000956 99e1      	SBIC EECR,EEWE
000957 cffe      	RJMP __EEPROMRDB
000958 93ff      	PUSH R31
000959 b7ff      	IN   R31,SREG
00095a 94f8      	CLI
00095b bbae      	OUT  EEARL,R26
00095c bbbf      	OUT  EEARH,R27
00095d 9ae0      	SBI  EECR,EERE
00095e b3ed      	IN   R30,EEDR
00095f bfff      	OUT  SREG,R31
000960 91ff      	POP  R31
000961 9508      	RET
                 
                 __EEPROMWRB:
000962 9be1      	SBIS EECR,EEWE
000963 c002      	RJMP __EEPROMWRB1
000964 95a8      	WDR
000965 cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
000966 b79f      	IN   R25,SREG
000967 94f8      	CLI
000968 bbae      	OUT  EEARL,R26
000969 bbbf      	OUT  EEARH,R27
00096a 9ae0      	SBI  EECR,EERE
00096b b38d      	IN   R24,EEDR
00096c 17e8      	CP   R30,R24
00096d f019      	BREQ __EEPROMWRB0
00096e bbed      	OUT  EEDR,R30
00096f 9ae2      	SBI  EECR,EEMWE
000970 9ae1      	SBI  EECR,EEWE
                 __EEPROMWRB0:
000971 bf9f      	OUT  SREG,R25
000972 9508      	RET
                 
                 __CPW02:
000973 2400      	CLR  R0
000974 160a      	CP   R0,R26
000975 060b      	CPC  R0,R27
000976 9508      	RET
                 
                 __SAVELOCR6:
000977 935a      	ST   -Y,R21
                 __SAVELOCR5:
000978 934a      	ST   -Y,R20
                 __SAVELOCR4:
000979 933a      	ST   -Y,R19
                 __SAVELOCR3:
00097a 932a      	ST   -Y,R18
                 __SAVELOCR2:
00097b 931a      	ST   -Y,R17
00097c 930a      	ST   -Y,R16
00097d 9508      	RET
                 
                 __LOADLOCR6:
00097e 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
00097f 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000980 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000981 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000982 8119      	LDD  R17,Y+1
000983 8108      	LD   R16,Y
000984 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega8 register use summary:
r0 :  28 r1 :   4 r2 :   0 r3 :   0 r4 :   2 r5 :   1 r6 :   2 r7 :   4 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  70 r17:  89 r18:  53 r19:  34 r20:  24 r21:  46 r22:  10 r23:   3 
r24:  25 r25:   7 r26: 261 r27:  67 r28:  25 r29:   1 r30: 616 r31:  99 
x  :  23 y  : 376 z  :  31 
Registers used: 26 out of 35 (74.3%)

ATmega8 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   8 add   :  15 
adiw  :  33 and   :   7 andi  :  16 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  40 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  12 
brlt  :   4 brmi  :   1 brne  :  80 brpl  :   1 brsh  :  21 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 cbi   :  19 
cbr   :   0 clc   :   0 clh   :   0 cli   :   3 cln   :   0 clr   :  26 
cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   6 cp    :  23 
cpc   :   8 cpi   :  94 cpse  :   0 dec   :   7 des   :   0 eor   :   1 
fmul  :   0 fmuls :   0 fmulsu:   0 icall :   4 ijmp  :   0 in    :   5 
inc   :   3 ld    :  39 ldd   : 216 ldi   : 207 lds   :  28 lpm   :  30 
lsl   :   4 lsr   :   9 mov   :  90 movw  :  32 mul   :   5 muls  :   0 
mulsu :   0 neg   :   2 nop   :   0 or    :   6 ori   :  14 out   :  45 
pop   :  12 push  :  12 rcall : 331 ret   :  74 reti  :   1 rjmp  : 194 
rol   :   0 ror   :   0 sbc   :   1 sbci  :   8 sbi   :  25 sbic  :   3 
sbis  :   2 sbiw  :  34 sbr   :   0 sbrc  :   2 sbrs  :  10 sec   :   0 
seh   :   0 sei   :   1 sen   :   0 ser   :   0 ses   :   0 set   :   0 
sev   :   0 sez   :   0 sleep :   0 spm   :   0 st    : 103 std   :  52 
sts   :  20 sub   :   7 subi  :  36 swap  :   0 tst   :   6 wdr   :   2 

Instructions used: 60 out of 114 (52.6%)

ATmega8 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x00130a   4276    598   4874    8192  59.5%
[.dseg] 0x000060 0x00042e      0    718    718    1024  70.1%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 7 warnings
