
AVRASM ver. 2.1.30  D:\Dropbox\2019\Project\Singapore\Code\timer\Debug\List\tm.asm Sun Aug 25 18:23:01 2019

D:\Dropbox\2019\Project\Singapore\Code\timer\Debug\List\tm.asm(1087): warning: Register r5 already defined by the .DEF directive
D:\Dropbox\2019\Project\Singapore\Code\timer\Debug\List\tm.asm(1088): warning: Register r6 already defined by the .DEF directive
D:\Dropbox\2019\Project\Singapore\Code\timer\Debug\List\tm.asm(1089): warning: Register r7 already defined by the .DEF directive
D:\Dropbox\2019\Project\Singapore\Code\timer\Debug\List\tm.asm(1090): warning: Register r8 already defined by the .DEF directive
D:\Dropbox\2019\Project\Singapore\Code\timer\Debug\List\tm.asm(1091): warning: Register r9 already defined by the .DEF directive
D:\Dropbox\2019\Project\Singapore\Code\timer\Debug\List\tm.asm(1092): warning: Register r10 already defined by the .DEF directive
D:\Dropbox\2019\Project\Singapore\Code\timer\Debug\List\tm.asm(1093): warning: Register r11 already defined by the .DEF directive
D:\Dropbox\2019\Project\Singapore\Code\timer\Debug\List\tm.asm(1094): warning: Register r12 already defined by the .DEF directive
D:\Dropbox\2019\Project\Singapore\Code\timer\Debug\List\tm.asm(1095): warning: Register r13 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32A
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32A
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _triggered_sensor_1=R5
                 	.DEF _time_s=R6
                 	.DEF _time_s_msb=R7
                 	.DEF _time_ms=R8
                 	.DEF _time_ms_msb=R9
                 	.DEF _timestamp=R10
                 	.DEF _timestamp_msb=R11
                 	.DEF _total_time=R12
                 	.DEF _total_time_msb=R13
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0155 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0181 	JMP  _timer0_ovf_isr
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _font5x7:
00002a 0705
00002b 6020
00002c 0000
00002d 0000      	.DB  0x5,0x7,0x20,0x60,0x0,0x0,0x0,0x0
00002e 0000
00002f 0400
000030 040a
000031 0700      	.DB  0x0,0x0,0x0,0x4,0xA,0x4,0x0,0x7
000032 0700
000033 1400
000034 147f
000035 147f      	.DB  0x0,0x7,0x0,0x14,0x7F,0x14,0x7F,0x14
000036 2a24
000037 2a7f
000038 2312
000039 0813      	.DB  0x24,0x2A,0x7F,0x2A,0x12,0x23,0x13,0x8
00003a 6264
00003b 4936
00003c 2255
00003d 0050      	.DB  0x64,0x62,0x36,0x49,0x55,0x22,0x50,0x0
00003e 0305
00003f 0000
000040 1c00
000041 4122      	.DB  0x5,0x3,0x0,0x0,0x0,0x1C,0x22,0x41
000042 0000
000043 2241
000044 001c
000045 2a08      	.DB  0x0,0x0,0x41,0x22,0x1C,0x0,0x8,0x2A
000046 2a1c
000047 0808
000048 3e08
000049 0808      	.DB  0x1C,0x2A,0x8,0x8,0x8,0x3E,0x8,0x8
00004a 5000
00004b 0030
00004c 0800
00004d 0808      	.DB  0x0,0x50,0x30,0x0,0x0,0x8,0x8,0x8
00004e 0808
00004f 3000
000050 0030
000051 2000      	.DB  0x8,0x8,0x0,0x30,0x30,0x0,0x0,0x20
000052 0810
000053 0204
000054 513e
000055 4549      	.DB  0x10,0x8,0x4,0x2,0x3E,0x51,0x49,0x45
000056 003e
000057 7f42
000058 0040
000059 6142      	.DB  0x3E,0x0,0x42,0x7F,0x40,0x0,0x42,0x61
00005a 4951
00005b 2146
00005c 4541
00005d 314b      	.DB  0x51,0x49,0x46,0x21,0x41,0x45,0x4B,0x31
00005e 1418
00005f 7f12
000060 2710
000061 4545      	.DB  0x18,0x14,0x12,0x7F,0x10,0x27,0x45,0x45
000062 3945
000063 4a3c
000064 4949
000065 0130      	.DB  0x45,0x39,0x3C,0x4A,0x49,0x49,0x30,0x1
000066 0971
000067 0305
000068 4936
000069 4949      	.DB  0x71,0x9,0x5,0x3,0x36,0x49,0x49,0x49
00006a 0636
00006b 4949
00006c 1e29
00006d 3600      	.DB  0x36,0x6,0x49,0x49,0x29,0x1E,0x0,0x36
00006e 0036
00006f 0000
000070 3656
000071 0000      	.DB  0x36,0x0,0x0,0x0,0x56,0x36,0x0,0x0
000072 0800
000073 2214
000074 1441
000075 1414      	.DB  0x0,0x8,0x14,0x22,0x41,0x14,0x14,0x14
000076 1414
000077 2241
000078 0814
000079 0200      	.DB  0x14,0x14,0x41,0x22,0x14,0x8,0x0,0x2
00007a 5101
00007b 0609
00007c 4932
00007d 4179      	.DB  0x1,0x51,0x9,0x6,0x32,0x49,0x79,0x41
00007e 7e3e
00007f 1111
000080 7e11
000081 497f      	.DB  0x3E,0x7E,0x11,0x11,0x11,0x7E,0x7F,0x49
000082 4949
000083 3e36
000084 4141
000085 2241      	.DB  0x49,0x49,0x36,0x3E,0x41,0x41,0x41,0x22
000086 417f
000087 2241
000088 7f1c
000089 4949      	.DB  0x7F,0x41,0x41,0x22,0x1C,0x7F,0x49,0x49
00008a 4149
00008b 097f
00008c 0109
00008d 3e01      	.DB  0x49,0x41,0x7F,0x9,0x9,0x1,0x1,0x3E
00008e 4141
00008f 3251
000090 087f
000091 0808      	.DB  0x41,0x41,0x51,0x32,0x7F,0x8,0x8,0x8
000092 007f
000093 7f41
000094 0041
000095 4020      	.DB  0x7F,0x0,0x41,0x7F,0x41,0x0,0x20,0x40
000096 3f41
000097 7f01
000098 1408
000099 4122      	.DB  0x41,0x3F,0x1,0x7F,0x8,0x14,0x22,0x41
00009a 407f
00009b 4040
00009c 7f40
00009d 0402      	.DB  0x7F,0x40,0x40,0x40,0x40,0x7F,0x2,0x4
00009e 7f02
00009f 047f
0000a0 1008
0000a1 3e7f      	.DB  0x2,0x7F,0x7F,0x4,0x8,0x10,0x7F,0x3E
0000a2 4141
0000a3 3e41
0000a4 097f
0000a5 0909      	.DB  0x41,0x41,0x41,0x3E,0x7F,0x9,0x9,0x9
0000a6 3e06
0000a7 5141
0000a8 5e21
0000a9 097f      	.DB  0x6,0x3E,0x41,0x51,0x21,0x5E,0x7F,0x9
0000aa 2919
0000ab 4646
0000ac 4949
0000ad 3149      	.DB  0x19,0x29,0x46,0x46,0x49,0x49,0x49,0x31
0000ae 0101
0000af 017f
0000b0 3f01
0000b1 4040      	.DB  0x1,0x1,0x7F,0x1,0x1,0x3F,0x40,0x40
0000b2 3f40
0000b3 201f
0000b4 2040
0000b5 7f1f      	.DB  0x40,0x3F,0x1F,0x20,0x40,0x20,0x1F,0x7F
0000b6 1820
0000b7 7f20
0000b8 1463
0000b9 1408      	.DB  0x20,0x18,0x20,0x7F,0x63,0x14,0x8,0x14
0000ba 0363
0000bb 7804
0000bc 0304
0000bd 5161      	.DB  0x63,0x3,0x4,0x78,0x4,0x3,0x61,0x51
0000be 4549
0000bf 0043
0000c0 7f00
0000c1 4141      	.DB  0x49,0x45,0x43,0x0,0x0,0x7F,0x41,0x41
0000c2 0402
0000c3 1008
0000c4 4120
0000c5 7f41      	.DB  0x2,0x4,0x8,0x10,0x20,0x41,0x41,0x7F
0000c6 0000
0000c7 0204
0000c8 0201
0000c9 4004      	.DB  0x0,0x0,0x4,0x2,0x1,0x2,0x4,0x40
0000ca 4040
0000cb 4040
0000cc 0100
0000cd 0402      	.DB  0x40,0x40,0x40,0x40,0x0,0x1,0x2,0x4
0000ce 2000
0000cf 5454
0000d0 7854
0000d1 487f      	.DB  0x0,0x20,0x54,0x54,0x54,0x78,0x7F,0x48
0000d2 4444
0000d3 3838
0000d4 4444
0000d5 2044      	.DB  0x44,0x44,0x38,0x38,0x44,0x44,0x44,0x20
0000d6 4438
0000d7 4844
0000d8 387f
0000d9 5454      	.DB  0x38,0x44,0x44,0x48,0x7F,0x38,0x54,0x54
0000da 1854
0000db 7e08
0000dc 0109
0000dd 0802      	.DB  0x54,0x18,0x8,0x7E,0x9,0x1,0x2,0x8
0000de 5414
0000df 3c54
0000e0 087f
0000e1 0404      	.DB  0x14,0x54,0x54,0x3C,0x7F,0x8,0x4,0x4
0000e2 0078
0000e3 7d44
0000e4 0040
0000e5 4020      	.DB  0x78,0x0,0x44,0x7D,0x40,0x0,0x20,0x40
0000e6 3d44
0000e7 0000
0000e8 107f
0000e9 4428      	.DB  0x44,0x3D,0x0,0x0,0x7F,0x10,0x28,0x44
0000ea 4100
0000eb 407f
0000ec 7c00
0000ed 1804      	.DB  0x0,0x41,0x7F,0x40,0x0,0x7C,0x4,0x18
0000ee 7804
0000ef 087c
0000f0 0404
0000f1 3878      	.DB  0x4,0x78,0x7C,0x8,0x4,0x4,0x78,0x38
0000f2 4444
0000f3 3844
0000f4 147c
0000f5 1414      	.DB  0x44,0x44,0x44,0x38,0x7C,0x14,0x14,0x14
0000f6 0808
0000f7 1414
0000f8 7c18
0000f9 087c      	.DB  0x8,0x8,0x14,0x14,0x18,0x7C,0x7C,0x8
0000fa 0404
0000fb 4808
0000fc 5454
0000fd 2054      	.DB  0x4,0x4,0x8,0x48,0x54,0x54,0x54,0x20
0000fe 3f04
0000ff 4044
000100 3c20
000101 4040      	.DB  0x4,0x3F,0x44,0x40,0x20,0x3C,0x40,0x40
000102 7c20
000103 201c
000104 2040
000105 3c1c      	.DB  0x20,0x7C,0x1C,0x20,0x40,0x20,0x1C,0x3C
000106 3040
000107 3c40
000108 2844
000109 2810      	.DB  0x40,0x30,0x40,0x3C,0x44,0x28,0x10,0x28
00010a 0c44
00010b 5050
00010c 3c50
00010d 6444      	.DB  0x44,0xC,0x50,0x50,0x50,0x3C,0x44,0x64
00010e 4c54
00010f 0044
000110 3608
000111 0041      	.DB  0x54,0x4C,0x44,0x0,0x8,0x36,0x41,0x0
000112 0000
000113 007f
000114 0000
000115 3641      	.DB  0x0,0x0,0x7F,0x0,0x0,0x0,0x41,0x36
000116 0008
000117 0102
000118 0402
000119 7f02      	.DB  0x8,0x0,0x2,0x1,0x2,0x4,0x2,0x7F
00011a 4141
00011b 7f41      	.DB  0x41,0x41,0x41,0x7F
                 _tbl10_G100:
00011c 2710
00011d 03e8
00011e 0064
00011f 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000120 0001      	.DB  0x1,0x0
                 _tbl16_G100:
000121 1000
000122 0100
000123 0010
000124 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 __glcd_mask:
000125 0100
000126 0703
000127 1f0f
000128 7f3f      	.DB  0x0,0x1,0x3,0x7,0xF,0x1F,0x3F,0x7F
D:\Dropbox\2019\Project\Singapore\Code\timer\Debug\List\tm.asm(1195): warning: .cseg .db misalignment - padding zero byte
000129 00ff      	.DB  0xFF
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
00012a 0000
00012b 0000      	.DB  0x0,0x0,0x0,0x0
00012c 0000
00012d 0000      	.DB  0x0,0x0,0x0,0x0
D:\Dropbox\2019\Project\Singapore\Code\timer\Debug\List\tm.asm(1201): warning: .cseg .db misalignment - padding zero byte
00012e 0000      	.DB  0x0
                 
                 _0x0:
00012f 6574
000130 7473
000131 2000
000132 7525      	.DB  0x74,0x65,0x73,0x74,0x0,0x20,0x25,0x75
000133 7800
000134 2065
000135 6964
000136 6e20      	.DB  0x0,0x78,0x65,0x20,0x64,0x69,0x20,0x6E
000137 6168
000138 686e
000139 7800
00013a 2065      	.DB  0x68,0x61,0x6E,0x68,0x0,0x78,0x65,0x20
00013b 6964
00013c 6320
00013d 6168
00013e 006d      	.DB  0x64,0x69,0x20,0x63,0x68,0x61,0x6D,0x0
                 _0x2020060:
D:\Dropbox\2019\Project\Singapore\Code\timer\Debug\List\tm.asm(1209): warning: .cseg .db misalignment - padding zero byte
00013f 0001      	.DB  0x1
                 _0x2020000:
000140 4e2d
000141 4e41
000142 4900
000143 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
D:\Dropbox\2019\Project\Singapore\Code\timer\Debug\List\tm.asm(1212): warning: .cseg .db misalignment - padding zero byte
000144 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000145 0009      	.DW  0x09
000146 0005      	.DW  0x05
000147 0254      	.DW  __REG_VARS*2
                 
000148 0005      	.DW  0x05
000149 0260      	.DW  _0x5
00014a 025e      	.DW  _0x0*2
                 
00014b 000c      	.DW  0x0C
00014c 0265      	.DW  _0x5+5
00014d 0267      	.DW  _0x0*2+9
                 
00014e 000b      	.DW  0x0B
00014f 0271      	.DW  _0x5+17
000150 0273      	.DW  _0x0*2+21
                 
000151 0001      	.DW  0x01
000152 02ad      	.DW  __seed_G101
000153 027e      	.DW  _0x2020060*2
                 
                 _0xFFFFFFFF:
000154 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000155 94f8      	CLI
000156 27ee      	CLR  R30
000157 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000158 e0f1      	LDI  R31,1
000159 bff5      	OUT  MCUCR,R31
00015a bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
00015b e08d      	LDI  R24,(14-2)+1
00015c e0a2      	LDI  R26,2
00015d 27bb      	CLR  R27
                 __CLEAR_REG:
00015e 93ed      	ST   X+,R30
00015f 958a      	DEC  R24
000160 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000161 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000162 e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000163 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000164 93ed      	ST   X+,R30
000165 9701      	SBIW R24,1
000166 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000167 e8ea      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000168 e0f2      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000169 9185      	LPM  R24,Z+
00016a 9195      	LPM  R25,Z+
00016b 9700      	SBIW R24,0
00016c f061      	BREQ __GLOBAL_INI_END
00016d 91a5      	LPM  R26,Z+
00016e 91b5      	LPM  R27,Z+
00016f 9005      	LPM  R0,Z+
000170 9015      	LPM  R1,Z+
000171 01bf      	MOVW R22,R30
000172 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000173 9005      	LPM  R0,Z+
000174 920d      	ST   X+,R0
000175 9701      	SBIW R24,1
000176 f7e1      	BRNE __GLOBAL_INI_LOOP
000177 01fb      	MOVW R30,R22
000178 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000179 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00017a bfed      	OUT  SPL,R30
00017b e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00017c bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00017d e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00017e e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00017f 940c 01a6 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;
                 ;#include <mega32a.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include "untitled.c"
                 ;#define ct_1    PIND.0
                 ;#define ct_2    PINA.7
                 ;#define ct_3    PINA.6
                 ;
                 ;#include <glcd.h>
                 ;
                 ;#include <font5x7.h>
                 ;
                 ;bool triggered_sensor_1 = false; // trang thai kich hoat sensor
                 ;
                 ;unsigned int time_s = 0;
                 ;unsigned int time_ms = 0;
                 ;unsigned int timestamp = 0;
                 ;unsigned char buff[20];
                 ;unsigned int total_time = 0;
                 ;interrupt [TIM0_OVF] void timer0_ovf_isr(void) {
                 ; 0000 0013 interrupt [12] void timer0_ovf_isr(void) {
                 
                 	.CSEG
                 _timer0_ovf_isr:
                 ; .FSTART _timer0_ovf_isr
000181 920a      	ST   -Y,R0
000182 921a      	ST   -Y,R1
000183 939a      	ST   -Y,R25
000184 93aa      	ST   -Y,R26
000185 93ba      	ST   -Y,R27
000186 93ea      	ST   -Y,R30
000187 93fa      	ST   -Y,R31
000188 b7ef      	IN   R30,SREG
000189 93ea      	ST   -Y,R30
                 ; 0000 0014     TCNT0=0xB2; //10ms
00018a ebe2      	LDI  R30,LOW(178)
00018b bfe2      	OUT  0x32,R30
                 ; 0000 0015 	if (triggered_sensor_1)
00018c 2055      	TST  R5
00018d f071      	BREQ _0x3
                 ; 0000 0016     {
                 ; 0000 0017         time_ms += 10;
00018e 01f4      	MOVW R30,R8
00018f 963a      	ADIW R30,10
000190 014f      	MOVW R8,R30
                 ; 0000 0018     if (time_ms % 1000 == 0) { //1000 ms = 1s
000191 01d4      	MOVW R26,R8
000192 eee8      	LDI  R30,LOW(1000)
000193 e0f3      	LDI  R31,HIGH(1000)
000194 940e 09a8 	CALL __MODW21U
000196 9730      	SBIW R30,0
000197 f421      	BRNE _0x4
                 ; 0000 0019         time_s++;
000198 01f3      	MOVW R30,R6
000199 9631      	ADIW R30,1
00019a 013f      	MOVW R6,R30
00019b 9731      	SBIW R30,1
                 ; 0000 001A     }
                 ; 0000 001B     }
                 _0x4:
                 ; 0000 001C }
                 _0x3:
00019c 91e9      	LD   R30,Y+
00019d bfef      	OUT  SREG,R30
00019e 91f9      	LD   R31,Y+
00019f 91e9      	LD   R30,Y+
0001a0 91b9      	LD   R27,Y+
0001a1 91a9      	LD   R26,Y+
0001a2 9199      	LD   R25,Y+
0001a3 9019      	LD   R1,Y+
0001a4 9009      	LD   R0,Y+
0001a5 9518      	RETI
                 ; .FEND
                 ;
                 ;void main(void)
                 ; 0000 001F {
                 _main:
                 ; .FSTART _main
                 ; 0000 0020 // Declare your local variables here
                 ; 0000 0021 // Variable used to store graphic display
                 ; 0000 0022 // controller initialization data
                 ; 0000 0023 GLCDINIT_t glcd_init_data;
                 ; 0000 0024 
                 ; 0000 0025 // Input/Output Ports initialization
                 ; 0000 0026 // Port A initialization
                 ; 0000 0027 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0028 DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
0001a6 9728      	SBIW R28,8
                 ;	glcd_init_data -> Y+0
0001a7 e0e0      	LDI  R30,LOW(0)
0001a8 bbea      	OUT  0x1A,R30
                 ; 0000 0029 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 002A PORTA=(1<<PORTA7) | (1<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
0001a9 ece0      	LDI  R30,LOW(192)
0001aa bbeb      	OUT  0x1B,R30
                 ; 0000 002B 
                 ; 0000 002C // Port B initialization
                 ; 0000 002D // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=Out Bit0=Out
                 ; 0000 002E DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (1<<DDB1) | (1<<DDB0);
0001ab e0e3      	LDI  R30,LOW(3)
0001ac bbe7      	OUT  0x17,R30
                 ; 0000 002F // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=1 Bit0=0
                 ; 0000 0030 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (1<<PORTB1) | (0<<PORTB0);
0001ad e0e2      	LDI  R30,LOW(2)
0001ae bbe8      	OUT  0x18,R30
                 ; 0000 0031 
                 ; 0000 0032 // Port C initialization
                 ; 0000 0033 // Function: Bit7=In Bit6=In Bit5=Out Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0034 DDRC=(0<<DDC7) | (0<<DDC6) | (1<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
0001af e2e0      	LDI  R30,LOW(32)
0001b0 bbe4      	OUT  0x14,R30
                 ; 0000 0035 // State: Bit7=T Bit6=T Bit5=1 Bit4=T Bit3=T Bit2=T Bit1=P Bit0=P
                 ; 0000 0036 PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (1<<PORTC1) | (1<<PORTC0);
0001b1 e0e3      	LDI  R30,LOW(3)
0001b2 bbe5      	OUT  0x15,R30
                 ; 0000 0037 
                 ; 0000 0038 // Port D initialization
                 ; 0000 0039 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 003A DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
0001b3 e0e0      	LDI  R30,LOW(0)
0001b4 bbe1      	OUT  0x11,R30
                 ; 0000 003B // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=P
                 ; 0000 003C PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (1<<PORTD0);
0001b5 e0e1      	LDI  R30,LOW(1)
0001b6 bbe2      	OUT  0x12,R30
                 ; 0000 003D 
                 ; 0000 003E // Timer/Counter 0 initialization
                 ; 0000 003F // Clock source: System Clock
                 ; 0000 0040 // Clock value: 7.813 kHz
                 ; 0000 0041 // Mode: Normal top=0xFF
                 ; 0000 0042 // OC0 output: Disconnected
                 ; 0000 0043 // Timer Period: 9.984 ms
                 ; 0000 0044 TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (1<<CS02) | (0<<CS01) | (1<<CS00);
0001b7 e0e5      	LDI  R30,LOW(5)
0001b8 bfe3      	OUT  0x33,R30
                 ; 0000 0045 TCNT0=0xB2;
0001b9 ebe2      	LDI  R30,LOW(178)
0001ba bfe2      	OUT  0x32,R30
                 ; 0000 0046 OCR0=0x00;
0001bb e0e0      	LDI  R30,LOW(0)
0001bc bfec      	OUT  0x3C,R30
                 ; 0000 0047 
                 ; 0000 0048 // Timer/Counter 1 initialization
                 ; 0000 0049 // Clock source: System Clock
                 ; 0000 004A // Clock value: Timer1 Stopped
                 ; 0000 004B // Mode: Normal top=0xFFFF
                 ; 0000 004C // OC1A output: Disconnected
                 ; 0000 004D // OC1B output: Disconnected
                 ; 0000 004E // Noise Canceler: Off
                 ; 0000 004F // Input Capture on Falling Edge
                 ; 0000 0050 // Timer1 Overflow Interrupt: Off
                 ; 0000 0051 // Input Capture Interrupt: Off
                 ; 0000 0052 // Compare A Match Interrupt: Off
                 ; 0000 0053 // Compare B Match Interrupt: Off
                 ; 0000 0054 TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
0001bd bdef      	OUT  0x2F,R30
                 ; 0000 0055 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
0001be bdee      	OUT  0x2E,R30
                 ; 0000 0056 TCNT1H=0x00;
0001bf bded      	OUT  0x2D,R30
                 ; 0000 0057 TCNT1L=0x00;
0001c0 bdec      	OUT  0x2C,R30
                 ; 0000 0058 ICR1H=0x00;
0001c1 bde7      	OUT  0x27,R30
                 ; 0000 0059 ICR1L=0x00;
0001c2 bde6      	OUT  0x26,R30
                 ; 0000 005A OCR1AH=0x00;
0001c3 bdeb      	OUT  0x2B,R30
                 ; 0000 005B OCR1AL=0x00;
0001c4 bdea      	OUT  0x2A,R30
                 ; 0000 005C OCR1BH=0x00;
0001c5 bde9      	OUT  0x29,R30
                 ; 0000 005D OCR1BL=0x00;
0001c6 bde8      	OUT  0x28,R30
                 ; 0000 005E 
                 ; 0000 005F // Timer/Counter 2 initialization
                 ; 0000 0060 // Clock source: System Clock
                 ; 0000 0061 // Clock value: Timer2 Stopped
                 ; 0000 0062 // Mode: Normal top=0xFF
                 ; 0000 0063 // OC2 output: Disconnected
                 ; 0000 0064 ASSR=0<<AS2;
0001c7 bde2      	OUT  0x22,R30
                 ; 0000 0065 TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (0<<CS22) | (0<<CS21) | (0<<CS20);
0001c8 bde5      	OUT  0x25,R30
                 ; 0000 0066 TCNT2=0x00;
0001c9 bde4      	OUT  0x24,R30
                 ; 0000 0067 OCR2=0x00;
0001ca bde3      	OUT  0x23,R30
                 ; 0000 0068 
                 ; 0000 0069 // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 006A TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (1<<TOIE0);
0001cb e0e1      	LDI  R30,LOW(1)
0001cc bfe9      	OUT  0x39,R30
                 ; 0000 006B 
                 ; 0000 006C // External Interrupt(s) initialization
                 ; 0000 006D // INT0: Off
                 ; 0000 006E // INT1: Off
                 ; 0000 006F // INT2: Off
                 ; 0000 0070 MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
0001cd e0e0      	LDI  R30,LOW(0)
0001ce bfe5      	OUT  0x35,R30
                 ; 0000 0071 MCUCSR=(0<<ISC2);
0001cf bfe4      	OUT  0x34,R30
                 ; 0000 0072 
                 ; 0000 0073 // USART initialization
                 ; 0000 0074 // USART disabled
                 ; 0000 0075 UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
0001d0 b9ea      	OUT  0xA,R30
                 ; 0000 0076 
                 ; 0000 0077 // Analog Comparator initialization
                 ; 0000 0078 // Analog Comparator: Off
                 ; 0000 0079 // The Analog Comparator's positive input is
                 ; 0000 007A // connected to the AIN0 pin
                 ; 0000 007B // The Analog Comparator's negative input is
                 ; 0000 007C // connected to the AIN1 pin
                 ; 0000 007D ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
0001d1 e8e0      	LDI  R30,LOW(128)
0001d2 b9e8      	OUT  0x8,R30
                 ; 0000 007E SFIOR=(0<<ACME);
0001d3 e0e0      	LDI  R30,LOW(0)
0001d4 bfe0      	OUT  0x30,R30
                 ; 0000 007F 
                 ; 0000 0080 // ADC initialization
                 ; 0000 0081 // ADC disabled
                 ; 0000 0082 ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
0001d5 b9e6      	OUT  0x6,R30
                 ; 0000 0083 
                 ; 0000 0084 // SPI initialization
                 ; 0000 0085 // SPI disabled
                 ; 0000 0086 SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
0001d6 b9ed      	OUT  0xD,R30
                 ; 0000 0087 
                 ; 0000 0088 // TWI initialization
                 ; 0000 0089 // TWI disabled
                 ; 0000 008A TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
0001d7 bfe6      	OUT  0x36,R30
                 ; 0000 008B 
                 ; 0000 008C // Graphic Display Controller initialization
                 ; 0000 008D // The PCD8544 connections are specified in the
                 ; 0000 008E // Project|Configure|C Compiler|Libraries|Graphic Display menu:
                 ; 0000 008F // SDIN - PORTC Bit 3
                 ; 0000 0090 // SCLK - PORTC Bit 4
                 ; 0000 0091 // D /C - PORTC Bit 2
                 ; 0000 0092 // /SCE - PORTC Bit 1
                 ; 0000 0093 // /RES - PORTC Bit 0
                 ; 0000 0094 
                 ; 0000 0095 // Specify the current font for displaying text
                 ; 0000 0096 glcd_init_data.font=font5x7;
0001d8 e5e4      	LDI  R30,LOW(_font5x7*2)
0001d9 e0f0      	LDI  R31,HIGH(_font5x7*2)
0001da 83e8      	ST   Y,R30
0001db 83f9      	STD  Y+1,R31
                 ; 0000 0097 // No function is used for reading
                 ; 0000 0098 // image data from external memory
                 ; 0000 0099 glcd_init_data.readxmem=NULL;
0001dc e0e0      	LDI  R30,LOW(0)
0001dd 83ea      	STD  Y+2,R30
0001de 83eb      	STD  Y+2+1,R30
                 ; 0000 009A // No function is used for writing
                 ; 0000 009B // image data to external memory
                 ; 0000 009C glcd_init_data.writexmem=NULL;
0001df 83ec      	STD  Y+4,R30
0001e0 83ed      	STD  Y+4+1,R30
                 ; 0000 009D // Set the LCD temperature coefficient
                 ; 0000 009E glcd_init_data.temp_coef=90;
0001e1 81ee      	LDD  R30,Y+6
0001e2 7fec      	ANDI R30,LOW(0xFC)
0001e3 60e2      	ORI  R30,2
0001e4 83ee      	STD  Y+6,R30
                 ; 0000 009F // Set the LCD bias
                 ; 0000 00A0 glcd_init_data.bias=3;
0001e5 7ee3      	ANDI R30,LOW(0xE3)
0001e6 60ec      	ORI  R30,LOW(0xC)
0001e7 83ee      	STD  Y+6,R30
                 ; 0000 00A1 // Set the LCD contrast control voltage VLCD
                 ; 0000 00A2 glcd_init_data.vlcd=55;
0001e8 81ef      	LDD  R30,Y+7
0001e9 78e0      	ANDI R30,LOW(0x80)
0001ea 63e7      	ORI  R30,LOW(0x37)
0001eb 83ef      	STD  Y+7,R30
                 ; 0000 00A3 
                 ; 0000 00A4 glcd_init(&glcd_init_data);
0001ec 01de      	MOVW R26,R28
0001ed 940e 0439 	CALL _glcd_init
                 ; 0000 00A5 #asm("sei")
0001ef 9478      	sei
                 ; 0000 00A6 
                 ; 0000 00A7 glcd_outtextxy(0,10,"test");
0001f0 e0e0      	LDI  R30,LOW(0)
0001f1 93ea      	ST   -Y,R30
0001f2 e0ea      	LDI  R30,LOW(10)
0001f3 93ea      	ST   -Y,R30
                +
0001f4 e6a0     +LDI R26 , LOW ( _0x5 + ( 0 ) )
0001f5 e0b2     +LDI R27 , HIGH ( _0x5 + ( 0 ) )
                 	__POINTW2MN _0x5,0
0001f6 940e 0810 	CALL _glcd_outtextxy
                 ; 0000 00A8 while (1)
                 _0x6:
                 ; 0000 00A9       {
                 ; 0000 00AA         if (ct_1==0)
0001f8 9980      	SBIC 0x10,0
0001f9 c005      	RJMP _0x9
                 ; 0000 00AB             {
                 ; 0000 00AC                 glcd_clear();
0001fa 940e 04c2 	CALL _glcd_clear
                 ; 0000 00AD                 triggered_sensor_1 = true;
0001fc e0e1      	LDI  R30,LOW(1)
0001fd 2e5e      	MOV  R5,R30
                 ; 0000 00AE                 timestamp = time_s;
0001fe 0153      	MOVW R10,R6
                 ; 0000 00AF             }
                 ; 0000 00B0         if (ct_2==0)
                 _0x9:
0001ff 99cf      	SBIC 0x19,7
000200 c034      	RJMP _0xA
                 ; 0000 00B1             {
                 ; 0000 00B2 				while (ct_2 == 0)   //doi den khi ct2 ngung bi kich hoat
                 _0xB:
000201 99cf      	SBIC 0x19,7
000202 c032      	RJMP _0xD
                 ; 0000 00B3                 {
                 ; 0000 00B4                     if (triggered_sensor_1) //chi tinh thoi gian neu ct1 cung da duoc kich hoat, neu chi ct2 bi kich hoa ...
000203 2055      	TST  R5
000204 f179      	BREQ _0xE
                 ; 0000 00B5                         {
                 ; 0000 00B6                             total_time = time_s - timestamp; //thoi gian troi qua giua 2 lan sensor bi kich hoat
000205 01f3      	MOVW R30,R6
000206 19ea      	SUB  R30,R10
000207 09fb      	SBC  R31,R11
000208 016f      	MOVW R12,R30
                 ; 0000 00B7                             sprintf(buff," %u",total_time);
000209 e9e9      	LDI  R30,LOW(_buff)
00020a e0f2      	LDI  R31,HIGH(_buff)
00020b 93fa      	ST   -Y,R31
00020c 93ea      	ST   -Y,R30
                +
00020d e6e3     +LDI R30 , LOW ( 2 * _0x0 + ( 5 ) )
00020e e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 5 ) )
                 	__POINTW1FN _0x0,5
00020f 93fa      	ST   -Y,R31
000210 93ea      	ST   -Y,R30
000211 01f6      	MOVW R30,R12
000212 2766      	CLR  R22
000213 2777      	CLR  R23
000214 940e 09b3 	CALL __PUTPARD1
000216 e084      	LDI  R24,4
000217 940e 03a5 	CALL _sprintf
000219 9628      	ADIW R28,8
                 ; 0000 00B8                             glcd_outtextxy(10, 10, buff);
00021a e0ea      	LDI  R30,LOW(10)
00021b 93ea      	ST   -Y,R30
00021c 93ea      	ST   -Y,R30
00021d e9a9      	LDI  R26,LOW(_buff)
00021e e0b2      	LDI  R27,HIGH(_buff)
00021f 940e 0810 	CALL _glcd_outtextxy
                 ; 0000 00B9                             if (total_time < 5)
000221 e0e5      	LDI  R30,LOW(5)
000222 e0f0      	LDI  R31,HIGH(5)
000223 16ce      	CP   R12,R30
000224 06df      	CPC  R13,R31
000225 f430      	BRSH _0xF
                 ; 0000 00BA 					            {
                 ; 0000 00BB                                     glcd_outtextxy(0,0,"xe di nhanh");
000226 e0e0      	LDI  R30,LOW(0)
000227 93ea      	ST   -Y,R30
000228 93ea      	ST   -Y,R30
                +
000229 e6a5     +LDI R26 , LOW ( _0x5 + ( 5 ) )
00022a e0b2     +LDI R27 , HIGH ( _0x5 + ( 5 ) )
                 	__POINTW2MN _0x5,5
00022b c005      	RJMP _0x12
                 ; 0000 00BC                                 }
                 ; 0000 00BD 				            else
                 _0xF:
                 ; 0000 00BE 					            {
                 ; 0000 00BF                                     glcd_outtextxy(0,0,"xe di cham");
00022c e0e0      	LDI  R30,LOW(0)
00022d 93ea      	ST   -Y,R30
00022e 93ea      	ST   -Y,R30
                +
00022f e7a1     +LDI R26 , LOW ( _0x5 + ( 17 ) )
000230 e0b2     +LDI R27 , HIGH ( _0x5 + ( 17 ) )
                 	__POINTW2MN _0x5,17
                 _0x12:
000231 940e 0810 	CALL _glcd_outtextxy
                 ; 0000 00C0                                 }
                 ; 0000 00C1 
                 ; 0000 00C2                             triggered_sensor_1 = false; //reset trang thai sensor
000233 2455      	CLR  R5
                 ; 0000 00C3                         }
                 ; 0000 00C4                 }
                 _0xE:
000234 cfcc      	RJMP _0xB
                 _0xD:
                 ; 0000 00C5             }
                 ; 0000 00C6       }
                 _0xA:
000235 cfc2      	RJMP _0x6
                 ; 0000 00C7 }
                 _0x11:
000236 cfff      	RJMP _0x11
                 ; .FEND
                 
                 	.DSEG
                 _0x5:
000260           	.BYTE 0x1C
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
                 ; .FSTART _put_buff_G100
000237 93ba      	ST   -Y,R27
000238 93aa      	ST   -Y,R26
000239 931a      	ST   -Y,R17
00023a 930a      	ST   -Y,R16
00023b 81aa      	LDD  R26,Y+2
00023c 81bb      	LDD  R27,Y+2+1
00023d 9612      	ADIW R26,2
00023e 940e 09ab 	CALL __GETW1P
000240 9730      	SBIW R30,0
000241 f129      	BREQ _0x2000010
000242 81aa      	LDD  R26,Y+2
000243 81bb      	LDD  R27,Y+2+1
000244 9614      	ADIW R26,4
000245 940e 09ab 	CALL __GETW1P
000247 018f      	MOVW R16,R30
000248 9730      	SBIW R30,0
000249 f061      	BREQ _0x2000012
                +
00024a 3002     +CPI R16 , LOW ( 2 )
00024b e0e0     +LDI R30 , HIGH ( 2 )
00024c 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
00024d f080      	BRLO _0x2000013
00024e 01f8      	MOVW R30,R16
00024f 9731      	SBIW R30,1
000250 018f      	MOVW R16,R30
                +
000251 81aa     +LDD R26 , Y + 2
000252 81bb     +LDD R27 , Y + 2 + 1
000253 9614     +ADIW R26 , 4
000254 93ed     +ST X + , R30
000255 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
000256 81aa      	LDD  R26,Y+2
000257 81bb      	LDD  R27,Y+2+1
000258 9612      	ADIW R26,2
000259 940e 08cb 	CALL SUBOPT_0x0
00025b 9731      	SBIW R30,1
00025c 81ac      	LDD  R26,Y+4
00025d 83a0      	STD  Z+0,R26
                 _0x2000013:
00025e 81aa      	LDD  R26,Y+2
00025f 81bb      	LDD  R27,Y+2+1
000260 940e 09ab 	CALL __GETW1P
000262 23ff      	TST  R31
000263 f012      	BRMI _0x2000014
000264 940e 08cb 	CALL SUBOPT_0x0
                 _0x2000014:
000266 c006      	RJMP _0x2000015
                 _0x2000010:
000267 81aa      	LDD  R26,Y+2
000268 81bb      	LDD  R27,Y+2+1
000269 efef      	LDI  R30,LOW(65535)
00026a efff      	LDI  R31,HIGH(65535)
00026b 93ed      	ST   X+,R30
00026c 93fc      	ST   X,R31
                 _0x2000015:
00026d 8119      	LDD  R17,Y+1
00026e 8108      	LDD  R16,Y+0
00026f 9625      	ADIW R28,5
000270 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
000271 93ba      	ST   -Y,R27
000272 93aa      	ST   -Y,R26
000273 9726      	SBIW R28,6
000274 940e 09d9 	CALL __SAVELOCR6
000276 e010      	LDI  R17,0
000277 85ac      	LDD  R26,Y+12
000278 85bd      	LDD  R27,Y+12+1
000279 e0e0      	LDI  R30,LOW(0)
00027a e0f0      	LDI  R31,HIGH(0)
00027b 93ed      	ST   X+,R30
00027c 93fc      	ST   X,R31
                 _0x2000016:
00027d 89ea      	LDD  R30,Y+18
00027e 89fb      	LDD  R31,Y+18+1
00027f 9631      	ADIW R30,1
000280 8bea      	STD  Y+18,R30
000281 8bfb      	STD  Y+18+1,R31
000282 9731      	SBIW R30,1
000283 91e4      	LPM  R30,Z
000284 2f2e      	MOV  R18,R30
000285 30e0      	CPI  R30,0
000286 f409      	BRNE PC+2
000287 c115      	RJMP _0x2000018
000288 2fe1      	MOV  R30,R17
000289 30e0      	CPI  R30,0
00028a f439      	BRNE _0x200001C
00028b 3225      	CPI  R18,37
00028c f411      	BRNE _0x200001D
00028d e011      	LDI  R17,LOW(1)
00028e c002      	RJMP _0x200001E
                 _0x200001D:
00028f 940e 08d1 	CALL SUBOPT_0x1
                 _0x200001E:
000291 c10a      	RJMP _0x200001B
                 _0x200001C:
000292 30e1      	CPI  R30,LOW(0x1)
000293 f4a9      	BRNE _0x200001F
000294 3225      	CPI  R18,37
000295 f419      	BRNE _0x2000020
000296 940e 08d1 	CALL SUBOPT_0x1
000298 c102      	RJMP _0x20000CC
                 _0x2000020:
000299 e012      	LDI  R17,LOW(2)
00029a e040      	LDI  R20,LOW(0)
00029b e000      	LDI  R16,LOW(0)
00029c 322d      	CPI  R18,45
00029d f411      	BRNE _0x2000021
00029e e001      	LDI  R16,LOW(1)
00029f c0fc      	RJMP _0x200001B
                 _0x2000021:
0002a0 322b      	CPI  R18,43
0002a1 f411      	BRNE _0x2000022
0002a2 e24b      	LDI  R20,LOW(43)
0002a3 c0f8      	RJMP _0x200001B
                 _0x2000022:
0002a4 3220      	CPI  R18,32
0002a5 f411      	BRNE _0x2000023
0002a6 e240      	LDI  R20,LOW(32)
0002a7 c0f4      	RJMP _0x200001B
                 _0x2000023:
0002a8 c002      	RJMP _0x2000024
                 _0x200001F:
0002a9 30e2      	CPI  R30,LOW(0x2)
0002aa f439      	BRNE _0x2000025
                 _0x2000024:
0002ab e050      	LDI  R21,LOW(0)
0002ac e013      	LDI  R17,LOW(3)
0002ad 3320      	CPI  R18,48
0002ae f411      	BRNE _0x2000026
0002af 6800      	ORI  R16,LOW(128)
0002b0 c0eb      	RJMP _0x200001B
                 _0x2000026:
0002b1 c003      	RJMP _0x2000027
                 _0x2000025:
0002b2 30e3      	CPI  R30,LOW(0x3)
0002b3 f009      	BREQ PC+2
0002b4 c0e7      	RJMP _0x200001B
                 _0x2000027:
0002b5 3320      	CPI  R18,48
0002b6 f010      	BRLO _0x200002A
0002b7 332a      	CPI  R18,58
0002b8 f008      	BRLO _0x200002B
                 _0x200002A:
0002b9 c007      	RJMP _0x2000029
                 _0x200002B:
0002ba e0aa      	LDI  R26,LOW(10)
0002bb 9f5a      	MUL  R21,R26
0002bc 2d50      	MOV  R21,R0
0002bd 2fe2      	MOV  R30,R18
0002be 53e0      	SUBI R30,LOW(48)
0002bf 0f5e      	ADD  R21,R30
0002c0 c0db      	RJMP _0x200001B
                 _0x2000029:
0002c1 2fe2      	MOV  R30,R18
0002c2 36e3      	CPI  R30,LOW(0x63)
0002c3 f449      	BRNE _0x200002F
0002c4 940e 08d8 	CALL SUBOPT_0x2
0002c6 89e8      	LDD  R30,Y+16
0002c7 89f9      	LDD  R31,Y+16+1
0002c8 81a4      	LDD  R26,Z+4
0002c9 93aa      	ST   -Y,R26
0002ca 940e 08de 	CALL SUBOPT_0x3
0002cc c0ce      	RJMP _0x2000030
                 _0x200002F:
0002cd 37e3      	CPI  R30,LOW(0x73)
0002ce f441      	BRNE _0x2000032
0002cf 940e 08d8 	CALL SUBOPT_0x2
0002d1 940e 08e4 	CALL SUBOPT_0x4
0002d3 940e 0841 	CALL _strlen
0002d5 2f1e      	MOV  R17,R30
0002d6 c00a      	RJMP _0x2000033
                 _0x2000032:
0002d7 37e0      	CPI  R30,LOW(0x70)
0002d8 f461      	BRNE _0x2000035
0002d9 940e 08d8 	CALL SUBOPT_0x2
0002db 940e 08e4 	CALL SUBOPT_0x4
0002dd 940e 084d 	CALL _strlenf
0002df 2f1e      	MOV  R17,R30
0002e0 6008      	ORI  R16,LOW(8)
                 _0x2000033:
0002e1 6002      	ORI  R16,LOW(2)
0002e2 770f      	ANDI R16,LOW(127)
0002e3 e030      	LDI  R19,LOW(0)
0002e4 c034      	RJMP _0x2000036
                 _0x2000035:
0002e5 36e4      	CPI  R30,LOW(0x64)
0002e6 f011      	BREQ _0x2000039
0002e7 36e9      	CPI  R30,LOW(0x69)
0002e8 f411      	BRNE _0x200003A
                 _0x2000039:
0002e9 6004      	ORI  R16,LOW(4)
0002ea c002      	RJMP _0x200003B
                 _0x200003A:
0002eb 37e5      	CPI  R30,LOW(0x75)
0002ec f431      	BRNE _0x200003C
                 _0x200003B:
0002ed e3e8      	LDI  R30,LOW(_tbl10_G100*2)
0002ee e0f2      	LDI  R31,HIGH(_tbl10_G100*2)
0002ef 83ee      	STD  Y+6,R30
0002f0 83ff      	STD  Y+6+1,R31
0002f1 e015      	LDI  R17,LOW(5)
0002f2 c00c      	RJMP _0x200003D
                 _0x200003C:
0002f3 35e8      	CPI  R30,LOW(0x58)
0002f4 f411      	BRNE _0x200003F
0002f5 6008      	ORI  R16,LOW(8)
0002f6 c003      	RJMP _0x2000040
                 _0x200003F:
0002f7 37e8      	CPI  R30,LOW(0x78)
0002f8 f009      	BREQ PC+2
0002f9 c0a1      	RJMP _0x2000071
                 _0x2000040:
0002fa e4e2      	LDI  R30,LOW(_tbl16_G100*2)
0002fb e0f2      	LDI  R31,HIGH(_tbl16_G100*2)
0002fc 83ee      	STD  Y+6,R30
0002fd 83ff      	STD  Y+6+1,R31
0002fe e014      	LDI  R17,LOW(4)
                 _0x200003D:
0002ff ff02      	SBRS R16,2
000300 c014      	RJMP _0x2000042
000301 940e 08d8 	CALL SUBOPT_0x2
000303 940e 08ee 	CALL SUBOPT_0x5
000305 85ab      	LDD  R26,Y+11
000306 23aa      	TST  R26
000307 f43a      	BRPL _0x2000043
000308 85ea      	LDD  R30,Y+10
000309 85fb      	LDD  R31,Y+10+1
00030a 940e 0979 	CALL __ANEGW1
00030c 87ea      	STD  Y+10,R30
00030d 87fb      	STD  Y+10+1,R31
00030e e24d      	LDI  R20,LOW(45)
                 _0x2000043:
00030f 3040      	CPI  R20,0
000310 f011      	BREQ _0x2000044
000311 5f1f      	SUBI R17,-LOW(1)
000312 c001      	RJMP _0x2000045
                 _0x2000044:
000313 7f0b      	ANDI R16,LOW(251)
                 _0x2000045:
000314 c004      	RJMP _0x2000046
                 _0x2000042:
000315 940e 08d8 	CALL SUBOPT_0x2
000317 940e 08ee 	CALL SUBOPT_0x5
                 _0x2000046:
                 _0x2000036:
000319 fd00      	SBRC R16,0
00031a c011      	RJMP _0x2000047
                 _0x2000048:
00031b 1715      	CP   R17,R21
00031c f478      	BRSH _0x200004A
00031d ff07      	SBRS R16,7
00031e c008      	RJMP _0x200004B
00031f ff02      	SBRS R16,2
000320 c004      	RJMP _0x200004C
000321 7f0b      	ANDI R16,LOW(251)
000322 2f24      	MOV  R18,R20
000323 5011      	SUBI R17,LOW(1)
000324 c001      	RJMP _0x200004D
                 _0x200004C:
000325 e320      	LDI  R18,LOW(48)
                 _0x200004D:
000326 c001      	RJMP _0x200004E
                 _0x200004B:
000327 e220      	LDI  R18,LOW(32)
                 _0x200004E:
000328 940e 08d1 	CALL SUBOPT_0x1
00032a 5051      	SUBI R21,LOW(1)
00032b cfef      	RJMP _0x2000048
                 _0x200004A:
                 _0x2000047:
00032c 2f31      	MOV  R19,R17
00032d ff01      	SBRS R16,1
00032e c017      	RJMP _0x200004F
                 _0x2000050:
00032f 3030      	CPI  R19,0
000330 f0a1      	BREQ _0x2000052
000331 ff03      	SBRS R16,3
000332 c006      	RJMP _0x2000053
000333 81ee      	LDD  R30,Y+6
000334 81ff      	LDD  R31,Y+6+1
000335 9125      	LPM  R18,Z+
000336 83ee      	STD  Y+6,R30
000337 83ff      	STD  Y+6+1,R31
000338 c005      	RJMP _0x2000054
                 _0x2000053:
000339 81ae      	LDD  R26,Y+6
00033a 81bf      	LDD  R27,Y+6+1
00033b 912d      	LD   R18,X+
00033c 83ae      	STD  Y+6,R26
00033d 83bf      	STD  Y+6+1,R27
                 _0x2000054:
00033e 940e 08d1 	CALL SUBOPT_0x1
000340 3050      	CPI  R21,0
000341 f009      	BREQ _0x2000055
000342 5051      	SUBI R21,LOW(1)
                 _0x2000055:
000343 5031      	SUBI R19,LOW(1)
000344 cfea      	RJMP _0x2000050
                 _0x2000052:
000345 c04b      	RJMP _0x2000056
                 _0x200004F:
                 _0x2000058:
000346 e320      	LDI  R18,LOW(48)
000347 81ee      	LDD  R30,Y+6
000348 81ff      	LDD  R31,Y+6+1
000349 940e 09af 	CALL __GETW1PF
00034b 87e8      	STD  Y+8,R30
00034c 87f9      	STD  Y+8+1,R31
00034d 81ee      	LDD  R30,Y+6
00034e 81ff      	LDD  R31,Y+6+1
00034f 9632      	ADIW R30,2
000350 83ee      	STD  Y+6,R30
000351 83ff      	STD  Y+6+1,R31
                 _0x200005A:
000352 85e8      	LDD  R30,Y+8
000353 85f9      	LDD  R31,Y+8+1
000354 85aa      	LDD  R26,Y+10
000355 85bb      	LDD  R27,Y+10+1
000356 17ae      	CP   R26,R30
000357 07bf      	CPC  R27,R31
000358 f050      	BRLO _0x200005C
000359 5f2f      	SUBI R18,-LOW(1)
00035a 85a8      	LDD  R26,Y+8
00035b 85b9      	LDD  R27,Y+8+1
00035c 85ea      	LDD  R30,Y+10
00035d 85fb      	LDD  R31,Y+10+1
00035e 1bea      	SUB  R30,R26
00035f 0bfb      	SBC  R31,R27
000360 87ea      	STD  Y+10,R30
000361 87fb      	STD  Y+10+1,R31
000362 cfef      	RJMP _0x200005A
                 _0x200005C:
000363 332a      	CPI  R18,58
000364 f028      	BRLO _0x200005D
000365 ff03      	SBRS R16,3
000366 c002      	RJMP _0x200005E
000367 5f29      	SUBI R18,-LOW(7)
000368 c001      	RJMP _0x200005F
                 _0x200005E:
000369 5d29      	SUBI R18,-LOW(39)
                 _0x200005F:
                 _0x200005D:
00036a fd04      	SBRC R16,4
00036b c01a      	RJMP _0x2000061
00036c 3321      	CPI  R18,49
00036d f420      	BRSH _0x2000063
00036e 85a8      	LDD  R26,Y+8
00036f 85b9      	LDD  R27,Y+8+1
000370 9711      	SBIW R26,1
000371 f409      	BRNE _0x2000062
                 _0x2000063:
000372 c009      	RJMP _0x20000CD
                 _0x2000062:
000373 1753      	CP   R21,R19
000374 f010      	BRLO _0x2000067
000375 ff00      	SBRS R16,0
000376 c001      	RJMP _0x2000068
                 _0x2000067:
000377 c013      	RJMP _0x2000066
                 _0x2000068:
000378 e220      	LDI  R18,LOW(32)
000379 ff07      	SBRS R16,7
00037a c00b      	RJMP _0x2000069
00037b e320      	LDI  R18,LOW(48)
                 _0x20000CD:
00037c 6100      	ORI  R16,LOW(16)
00037d ff02      	SBRS R16,2
00037e c007      	RJMP _0x200006A
00037f 7f0b      	ANDI R16,LOW(251)
000380 934a      	ST   -Y,R20
000381 940e 08de 	CALL SUBOPT_0x3
000383 3050      	CPI  R21,0
000384 f009      	BREQ _0x200006B
000385 5051      	SUBI R21,LOW(1)
                 _0x200006B:
                 _0x200006A:
                 _0x2000069:
                 _0x2000061:
000386 940e 08d1 	CALL SUBOPT_0x1
000388 3050      	CPI  R21,0
000389 f009      	BREQ _0x200006C
00038a 5051      	SUBI R21,LOW(1)
                 _0x200006C:
                 _0x2000066:
00038b 5031      	SUBI R19,LOW(1)
00038c 85a8      	LDD  R26,Y+8
00038d 85b9      	LDD  R27,Y+8+1
00038e 9712      	SBIW R26,2
00038f f008      	BRLO _0x2000059
000390 cfb5      	RJMP _0x2000058
                 _0x2000059:
                 _0x2000056:
000391 ff00      	SBRS R16,0
000392 c008      	RJMP _0x200006D
                 _0x200006E:
000393 3050      	CPI  R21,0
000394 f031      	BREQ _0x2000070
000395 5051      	SUBI R21,LOW(1)
000396 e2e0      	LDI  R30,LOW(32)
000397 93ea      	ST   -Y,R30
000398 940e 08de 	CALL SUBOPT_0x3
00039a cff8      	RJMP _0x200006E
                 _0x2000070:
                 _0x200006D:
                 _0x2000071:
                 _0x2000030:
                 _0x20000CC:
00039b e010      	LDI  R17,LOW(0)
                 _0x200001B:
00039c cee0      	RJMP _0x2000016
                 _0x2000018:
00039d 85ac      	LDD  R26,Y+12
00039e 85bd      	LDD  R27,Y+12+1
00039f 940e 09ab 	CALL __GETW1P
0003a1 940e 09e0 	CALL __LOADLOCR6
0003a3 9664      	ADIW R28,20
0003a4 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
0003a5 92ff      	PUSH R15
0003a6 2ef8      	MOV  R15,R24
0003a7 9726      	SBIW R28,6
0003a8 940e 09db 	CALL __SAVELOCR4
0003aa 940e 08f6 	CALL SUBOPT_0x6
0003ac 9730      	SBIW R30,0
0003ad f419      	BRNE _0x2000072
0003ae efef      	LDI  R30,LOW(65535)
0003af efff      	LDI  R31,HIGH(65535)
0003b0 c023      	RJMP _0x212000A
                 _0x2000072:
0003b1 01de      	MOVW R26,R28
0003b2 9616      	ADIW R26,6
0003b3 940e 0975 	CALL __ADDW2R15
0003b5 018d      	MOVW R16,R26
0003b6 940e 08f6 	CALL SUBOPT_0x6
0003b8 83ee      	STD  Y+6,R30
0003b9 83ff      	STD  Y+6+1,R31
0003ba e0e0      	LDI  R30,LOW(0)
0003bb 87e8      	STD  Y+8,R30
0003bc 87e9      	STD  Y+8+1,R30
0003bd 01de      	MOVW R26,R28
0003be 961a      	ADIW R26,10
0003bf 940e 0975 	CALL __ADDW2R15
0003c1 940e 09ab 	CALL __GETW1P
0003c3 93fa      	ST   -Y,R31
0003c4 93ea      	ST   -Y,R30
0003c5 931a      	ST   -Y,R17
0003c6 930a      	ST   -Y,R16
0003c7 e3e7      	LDI  R30,LOW(_put_buff_G100)
0003c8 e0f2      	LDI  R31,HIGH(_put_buff_G100)
0003c9 93fa      	ST   -Y,R31
0003ca 93ea      	ST   -Y,R30
0003cb 01de      	MOVW R26,R28
0003cc 961a      	ADIW R26,10
0003cd dea3      	RCALL __print_G100
0003ce 019f      	MOVW R18,R30
0003cf 81ae      	LDD  R26,Y+6
0003d0 81bf      	LDD  R27,Y+6+1
0003d1 e0e0      	LDI  R30,LOW(0)
0003d2 93ec      	ST   X,R30
0003d3 01f9      	MOVW R30,R18
                 _0x212000A:
0003d4 940e 09e2 	CALL __LOADLOCR4
0003d6 962a      	ADIW R28,10
0003d7 90ff      	POP  R15
0003d8 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.DSEG
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _pcd8544_delay_G102:
                 ; .FSTART _pcd8544_delay_G102
0003d9 9508      	RET
                 ; .FEND
                 _pcd8544_wrbus_G102:
                 ; .FSTART _pcd8544_wrbus_G102
0003da 93aa      	ST   -Y,R26
0003db 931a      	ST   -Y,R17
0003dc 98a9      	CBI  0x15,1
0003dd e018      	LDI  R17,LOW(8)
                 _0x2040004:
0003de dffa      	RCALL _pcd8544_delay_G102
0003df 81e9      	LDD  R30,Y+1
0003e0 78e0      	ANDI R30,LOW(0x80)
0003e1 f011      	BREQ _0x2040006
0003e2 9aab      	SBI  0x15,3
0003e3 c001      	RJMP _0x2040007
                 _0x2040006:
0003e4 98ab      	CBI  0x15,3
                 _0x2040007:
0003e5 81e9      	LDD  R30,Y+1
0003e6 0fee      	LSL  R30
0003e7 83e9      	STD  Y+1,R30
0003e8 dff0      	RCALL _pcd8544_delay_G102
0003e9 9aac      	SBI  0x15,4
0003ea dfee      	RCALL _pcd8544_delay_G102
0003eb 98ac      	CBI  0x15,4
0003ec 5011      	SUBI R17,LOW(1)
0003ed f781      	BRNE _0x2040004
0003ee 9aa9      	SBI  0x15,1
0003ef 8118      	LDD  R17,Y+0
0003f0 940c 0863 	JMP  _0x2120003
                 ; .FEND
                 _pcd8544_wrcmd:
                 ; .FSTART _pcd8544_wrcmd
0003f2 93aa      	ST   -Y,R26
0003f3 98aa      	CBI  0x15,2
0003f4 81a8      	LD   R26,Y
0003f5 dfe4      	RCALL _pcd8544_wrbus_G102
0003f6 c0c9      	RJMP _0x2120009
                 ; .FEND
                 _pcd8544_wrdata_G102:
                 ; .FSTART _pcd8544_wrdata_G102
0003f7 93aa      	ST   -Y,R26
0003f8 9aaa      	SBI  0x15,2
0003f9 81a8      	LD   R26,Y
0003fa dfdf      	RCALL _pcd8544_wrbus_G102
0003fb c0c4      	RJMP _0x2120009
                 ; .FEND
                 _pcd8544_setaddr_G102:
                 ; .FSTART _pcd8544_setaddr_G102
0003fc 93aa      	ST   -Y,R26
0003fd 931a      	ST   -Y,R17
0003fe 81e9      	LDD  R30,Y+1
0003ff 95e6      	LSR  R30
000400 95e6      	LSR  R30
000401 95e6      	LSR  R30
000402 2f1e      	MOV  R17,R30
000403 e5e4      	LDI  R30,LOW(84)
000404 9fe1      	MUL  R30,R17
000405 01f0      	MOVW R30,R0
000406 01df      	MOVW R26,R30
000407 81ea      	LDD  R30,Y+2
000408 e0f0      	LDI  R31,0
000409 0fea      	ADD  R30,R26
00040a 1ffb      	ADC  R31,R27
00040b 93e0 02b1 	STS  _gfx_addr_G102,R30
00040d 93f0 02b2 	STS  _gfx_addr_G102+1,R31
00040f 2fe1      	MOV  R30,R17
000410 8118      	LDD  R17,Y+0
000411 940c 08aa 	JMP  _0x2120002
                 ; .FEND
                 _pcd8544_gotoxy:
                 ; .FSTART _pcd8544_gotoxy
000413 93aa      	ST   -Y,R26
000414 81e9      	LDD  R30,Y+1
000415 68e0      	ORI  R30,0x80
000416 2fae      	MOV  R26,R30
000417 dfda      	RCALL _pcd8544_wrcmd
000418 81e9      	LDD  R30,Y+1
000419 93ea      	ST   -Y,R30
00041a 81a9      	LDD  R26,Y+1
00041b dfe0      	RCALL _pcd8544_setaddr_G102
00041c 64e0      	ORI  R30,0x40
00041d 2fae      	MOV  R26,R30
00041e dfd3      	RCALL _pcd8544_wrcmd
00041f 940c 0863 	JMP  _0x2120003
                 ; .FEND
                 _pcd8544_rdbyte:
                 ; .FSTART _pcd8544_rdbyte
000421 93aa      	ST   -Y,R26
000422 81e9      	LDD  R30,Y+1
000423 93ea      	ST   -Y,R30
000424 81a9      	LDD  R26,Y+1
000425 dfed      	RCALL _pcd8544_gotoxy
000426 91e0 02b1 	LDS  R30,_gfx_addr_G102
000428 91f0 02b2 	LDS  R31,_gfx_addr_G102+1
00042a 54ed      	SUBI R30,LOW(-_gfx_buffer_G102)
00042b 4ffd      	SBCI R31,HIGH(-_gfx_buffer_G102)
00042c 81e0      	LD   R30,Z
00042d 940c 0863 	JMP  _0x2120003
                 ; .FEND
                 _pcd8544_wrbyte:
                 ; .FSTART _pcd8544_wrbyte
00042f 93aa      	ST   -Y,R26
000430 940e 08fd 	CALL SUBOPT_0x7
000432 9731      	SBIW R30,1
000433 54ed      	SUBI R30,LOW(-_gfx_buffer_G102)
000434 4ffd      	SBCI R31,HIGH(-_gfx_buffer_G102)
000435 81a8      	LD   R26,Y
000436 83a0      	STD  Z+0,R26
000437 dfbf      	RCALL _pcd8544_wrdata_G102
000438 c087      	RJMP _0x2120009
                 ; .FEND
                 _glcd_init:
                 ; .FSTART _glcd_init
000439 93ba      	ST   -Y,R27
00043a 93aa      	ST   -Y,R26
00043b 940e 09db 	CALL __SAVELOCR4
00043d 9aa1      	SBI  0x14,1
00043e 9aa9      	SBI  0x15,1
00043f 9aa4      	SBI  0x14,4
000440 98ac      	CBI  0x15,4
000441 9aa3      	SBI  0x14,3
000442 9aa2      	SBI  0x14,2
000443 9aa0      	SBI  0x14,0
000444 98a8      	CBI  0x15,0
000445 e0aa      	LDI  R26,LOW(10)
000446 e0b0      	LDI  R27,0
000447 940e 096b 	CALL _delay_ms
000449 9aa8      	SBI  0x15,0
00044a 81ec      	LDD  R30,Y+4
00044b 81fd      	LDD  R31,Y+4+1
00044c 9730      	SBIW R30,0
00044d f121      	BREQ _0x2040008
00044e 81e6      	LDD  R30,Z+6
00044f 70e3      	ANDI R30,LOW(0x3)
000450 2f1e      	MOV  R17,R30
000451 81ec      	LDD  R30,Y+4
000452 81fd      	LDD  R31,Y+4+1
000453 81e6      	LDD  R30,Z+6
000454 95e6      	LSR  R30
000455 95e6      	LSR  R30
000456 70e7      	ANDI R30,LOW(0x7)
000457 2f0e      	MOV  R16,R30
000458 81ec      	LDD  R30,Y+4
000459 81fd      	LDD  R31,Y+4+1
00045a 81e7      	LDD  R30,Z+7
00045b 77ef      	ANDI R30,0x7F
00045c 2f3e      	MOV  R19,R30
00045d 81ac      	LDD  R26,Y+4
00045e 81bd      	LDD  R27,Y+4+1
00045f 940e 09ab 	CALL __GETW1P
                +
000461 93e0 0280+STS _glcd_state + ( 4 ) , R30
000463 93f0 0281+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
000465 9612      	ADIW R26,2
000466 940e 09ab 	CALL __GETW1P
                +
000468 93e0 0295+STS _glcd_state + ( 25 ) , R30
00046a 93f0 0296+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
00046c 81ac      	LDD  R26,Y+4
00046d 81bd      	LDD  R27,Y+4+1
00046e 9614      	ADIW R26,4
00046f 940e 09ab 	CALL __GETW1P
000471 c00d      	RJMP _0x20400A0
                 _0x2040008:
000472 e010      	LDI  R17,LOW(0)
000473 e003      	LDI  R16,LOW(3)
000474 e332      	LDI  R19,LOW(50)
000475 e0e0      	LDI  R30,LOW(0)
000476 e0f0      	LDI  R31,HIGH(0)
                +
000477 93e0 0280+STS _glcd_state + ( 4 ) , R30
000479 93f0 0281+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
                +
00047b 93e0 0295+STS _glcd_state + ( 25 ) , R30
00047d 93f0 0296+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
                 _0x20400A0:
                +
00047f 93e0 0297+STS _glcd_state + ( 27 ) , R30
000481 93f0 0298+STS _glcd_state + ( 27 ) + 1 , R31
                 	__PUTW1MN _glcd_state,27
000483 e2a1      	LDI  R26,LOW(33)
000484 df6d      	RCALL _pcd8544_wrcmd
000485 2fe1      	MOV  R30,R17
000486 60e4      	ORI  R30,4
000487 2fae      	MOV  R26,R30
000488 df69      	RCALL _pcd8544_wrcmd
000489 2fe0      	MOV  R30,R16
00048a 61e0      	ORI  R30,0x10
00048b 2fae      	MOV  R26,R30
00048c df65      	RCALL _pcd8544_wrcmd
00048d 2fe3      	MOV  R30,R19
00048e 68e0      	ORI  R30,0x80
00048f 2fae      	MOV  R26,R30
000490 df61      	RCALL _pcd8544_wrcmd
000491 e2a0      	LDI  R26,LOW(32)
000492 df5f      	RCALL _pcd8544_wrcmd
000493 e0a1      	LDI  R26,LOW(1)
000494 d022      	RCALL _glcd_display
000495 e0e1      	LDI  R30,LOW(1)
000496 93e0 027c 	STS  _glcd_state,R30
000498 e0e0      	LDI  R30,LOW(0)
                +
000499 93e0 027d+STS _glcd_state + ( 1 ) , R30
                 	__PUTB1MN _glcd_state,1
00049b e0e1      	LDI  R30,LOW(1)
                +
00049c 93e0 0282+STS _glcd_state + ( 6 ) , R30
                 	__PUTB1MN _glcd_state,6
                +
00049e 93e0 0283+STS _glcd_state + ( 7 ) , R30
                 	__PUTB1MN _glcd_state,7
                +
0004a0 93e0 0284+STS _glcd_state + ( 8 ) , R30
                 	__PUTB1MN _glcd_state,8
0004a2 efef      	LDI  R30,LOW(255)
                +
0004a3 93e0 0285+STS _glcd_state + ( 9 ) , R30
                 	__PUTB1MN _glcd_state,9
0004a5 e0e1      	LDI  R30,LOW(1)
                +
0004a6 93e0 028c+STS _glcd_state + ( 16 ) , R30
                 	__PUTB1MN _glcd_state,16
                +
0004a8 e8ed     +LDI R30 , LOW ( _glcd_state + ( 17 ) )
0004a9 e0f2     +LDI R31 , HIGH ( _glcd_state + ( 17 ) )
                 	__POINTW1MN _glcd_state,17
0004aa 93fa      	ST   -Y,R31
0004ab 93ea      	ST   -Y,R30
0004ac efef      	LDI  R30,LOW(255)
0004ad 93ea      	ST   -Y,R30
0004ae e0a8      	LDI  R26,LOW(8)
0004af e0b0      	LDI  R27,0
0004b0 940e 0831 	CALL _memset
0004b2 d00f      	RCALL _glcd_clear
0004b3 e0e1      	LDI  R30,LOW(1)
0004b4 940e 09e2 	CALL __LOADLOCR4
0004b6 c060      	RJMP _0x2120008
                 ; .FEND
                 _glcd_display:
                 ; .FSTART _glcd_display
0004b7 93aa      	ST   -Y,R26
0004b8 81e8      	LD   R30,Y
0004b9 30e0      	CPI  R30,0
0004ba f011      	BREQ _0x204000A
0004bb e0ec      	LDI  R30,LOW(12)
0004bc c001      	RJMP _0x204000B
                 _0x204000A:
0004bd e0e8      	LDI  R30,LOW(8)
                 _0x204000B:
0004be 2fae      	MOV  R26,R30
0004bf df32      	RCALL _pcd8544_wrcmd
                 _0x2120009:
0004c0 9621      	ADIW R28,1
0004c1 9508      	RET
                 ; .FEND
                 _glcd_clear:
                 ; .FSTART _glcd_clear
0004c2 940e 09db 	CALL __SAVELOCR4
0004c4 e030      	LDI  R19,0
                +
0004c5 91e0 027d+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
0004c7 30e0      	CPI  R30,0
0004c8 f009      	BREQ _0x204000D
0004c9 ef3f      	LDI  R19,LOW(255)
                 _0x204000D:
0004ca e0e0      	LDI  R30,LOW(0)
0004cb 93ea      	ST   -Y,R30
0004cc e0a0      	LDI  R26,LOW(0)
0004cd df45      	RCALL _pcd8544_gotoxy
                +
0004ce ef08     +LDI R16 , LOW ( 504 )
0004cf e011     +LDI R17 , HIGH ( 504 )
                 	__GETWRN 16,17,504
                 _0x204000E:
0004d0 01f8      	MOVW R30,R16
                +
0004d1 5001     +SUBI R16 , LOW ( 1 )
0004d2 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
0004d3 9730      	SBIW R30,0
0004d4 f019      	BREQ _0x2040010
0004d5 2fa3      	MOV  R26,R19
0004d6 df58      	RCALL _pcd8544_wrbyte
0004d7 cff8      	RJMP _0x204000E
                 _0x2040010:
0004d8 e0e0      	LDI  R30,LOW(0)
0004d9 93ea      	ST   -Y,R30
0004da e0a0      	LDI  R26,LOW(0)
0004db d348      	RCALL _glcd_moveto
0004dc 940e 09e2 	CALL __LOADLOCR4
0004de 940c 08c9 	JMP  _0x2120001
                 ; .FEND
                 _pcd8544_wrmasked_G102:
                 ; .FSTART _pcd8544_wrmasked_G102
0004e0 93aa      	ST   -Y,R26
0004e1 931a      	ST   -Y,R17
0004e2 81ed      	LDD  R30,Y+5
0004e3 93ea      	ST   -Y,R30
0004e4 81ad      	LDD  R26,Y+5
0004e5 df3b      	RCALL _pcd8544_rdbyte
0004e6 2f1e      	MOV  R17,R30
0004e7 81e9      	LDD  R30,Y+1
0004e8 30e7      	CPI  R30,LOW(0x7)
0004e9 f011      	BREQ _0x2040020
0004ea 30e8      	CPI  R30,LOW(0x8)
0004eb f439      	BRNE _0x2040021
                 _0x2040020:
0004ec 81eb      	LDD  R30,Y+3
0004ed 93ea      	ST   -Y,R30
0004ee 81aa      	LDD  R26,Y+2
0004ef 940e 0865 	CALL _glcd_mappixcolor1bit
0004f1 83eb      	STD  Y+3,R30
0004f2 c008      	RJMP _0x2040022
                 _0x2040021:
0004f3 30e3      	CPI  R30,LOW(0x3)
0004f4 f421      	BRNE _0x2040024
0004f5 81eb      	LDD  R30,Y+3
0004f6 95e0      	COM  R30
0004f7 83eb      	STD  Y+3,R30
0004f8 c002      	RJMP _0x2040025
                 _0x2040024:
0004f9 30e0      	CPI  R30,0
0004fa f421      	BRNE _0x2040026
                 _0x2040025:
                 _0x2040022:
0004fb 81ea      	LDD  R30,Y+2
0004fc 95e0      	COM  R30
0004fd 231e      	AND  R17,R30
0004fe c002      	RJMP _0x2040027
                 _0x2040026:
0004ff 30e2      	CPI  R30,LOW(0x2)
000500 f429      	BRNE _0x2040028
                 _0x2040027:
000501 81ea      	LDD  R30,Y+2
000502 81ab      	LDD  R26,Y+3
000503 23ea      	AND  R30,R26
000504 2b1e      	OR   R17,R30
000505 c00e      	RJMP _0x204001E
                 _0x2040028:
000506 30e1      	CPI  R30,LOW(0x1)
000507 f429      	BRNE _0x2040029
000508 81ea      	LDD  R30,Y+2
000509 81ab      	LDD  R26,Y+3
00050a 23ea      	AND  R30,R26
00050b 271e      	EOR  R17,R30
00050c c007      	RJMP _0x204001E
                 _0x2040029:
00050d 30e4      	CPI  R30,LOW(0x4)
00050e f429      	BRNE _0x204001E
00050f 81ea      	LDD  R30,Y+2
000510 95e0      	COM  R30
000511 81ab      	LDD  R26,Y+3
000512 2bea      	OR   R30,R26
000513 231e      	AND  R17,R30
                 _0x204001E:
000514 2fa1      	MOV  R26,R17
000515 df19      	RCALL _pcd8544_wrbyte
000516 8118      	LDD  R17,Y+0
                 _0x2120008:
000517 9626      	ADIW R28,6
000518 9508      	RET
                 ; .FEND
                 _glcd_block:
                 ; .FSTART _glcd_block
000519 93aa      	ST   -Y,R26
00051a 9723      	SBIW R28,3
00051b 940e 09d9 	CALL __SAVELOCR6
00051d 89a8      	LDD  R26,Y+16
00051e 35a4      	CPI  R26,LOW(0x54)
00051f f448      	BRSH _0x204002C
000520 85af      	LDD  R26,Y+15
000521 33a0      	CPI  R26,LOW(0x30)
000522 f430      	BRSH _0x204002C
000523 85ae      	LDD  R26,Y+14
000524 30a0      	CPI  R26,LOW(0x0)
000525 f019      	BREQ _0x204002C
000526 85ad      	LDD  R26,Y+13
000527 30a0      	CPI  R26,LOW(0x0)
000528 f409      	BRNE _0x204002B
                 _0x204002C:
000529 c1d5      	RJMP _0x2120007
                 _0x204002B:
00052a 85ee      	LDD  R30,Y+14
00052b 87e8      	STD  Y+8,R30
00052c 89a8      	LDD  R26,Y+16
00052d 27bb      	CLR  R27
00052e 85ee      	LDD  R30,Y+14
00052f e0f0      	LDI  R31,0
000530 0fae      	ADD  R26,R30
000531 1fbf      	ADC  R27,R31
000532 35a5      	CPI  R26,LOW(0x55)
000533 e0e0      	LDI  R30,HIGH(0x55)
000534 07be      	CPC  R27,R30
000535 f020      	BRLO _0x204002E
000536 89a8      	LDD  R26,Y+16
000537 e5e4      	LDI  R30,LOW(84)
000538 1bea      	SUB  R30,R26
000539 87ee      	STD  Y+14,R30
                 _0x204002E:
00053a 852d      	LDD  R18,Y+13
00053b 85af      	LDD  R26,Y+15
00053c 27bb      	CLR  R27
00053d 85ed      	LDD  R30,Y+13
00053e e0f0      	LDI  R31,0
00053f 0fae      	ADD  R26,R30
000540 1fbf      	ADC  R27,R31
000541 97d1      	SBIW R26,49
000542 f020      	BRLO _0x204002F
000543 85af      	LDD  R26,Y+15
000544 e3e0      	LDI  R30,LOW(48)
000545 1bea      	SUB  R30,R26
000546 87ed      	STD  Y+13,R30
                 _0x204002F:
000547 85a9      	LDD  R26,Y+9
000548 30a6      	CPI  R26,LOW(0x6)
000549 f009      	BREQ PC+2
00054a c05b      	RJMP _0x2040030
00054b 85ec      	LDD  R30,Y+12
00054c 30e1      	CPI  R30,LOW(0x1)
00054d f409      	BRNE _0x2040034
00054e c1b0      	RJMP _0x2120007
                 _0x2040034:
00054f 30e3      	CPI  R30,LOW(0x3)
000550 f439      	BRNE _0x2040037
                +
000551 91e0 0297+LDS R30 , _glcd_state + ( 27 )
000553 91f0 0298+LDS R31 , _glcd_state + ( 27 ) + 1
                 	__GETW1MN _glcd_state,27
000555 9730      	SBIW R30,0
000556 f409      	BRNE _0x2040036
000557 c1a7      	RJMP _0x2120007
                 _0x2040036:
                 _0x2040037:
000558 8508      	LDD  R16,Y+8
000559 85ed      	LDD  R30,Y+13
00055a 95e6      	LSR  R30
00055b 95e6      	LSR  R30
00055c 95e6      	LSR  R30
00055d 2f3e      	MOV  R19,R30
00055e 2fe2      	MOV  R30,R18
00055f 70e7      	ANDI R30,LOW(0x7)
000560 f419      	BRNE _0x2040039
000561 85ad      	LDD  R26,Y+13
000562 172a      	CP   R18,R26
000563 f0e9      	BREQ _0x2040038
                 _0x2040039:
000564 2fa0      	MOV  R26,R16
000565 27bb      	CLR  R27
000566 2fe3      	MOV  R30,R19
000567 e0f0      	LDI  R31,0
000568 940e 098d 	CALL __MULW12U
00056a 85aa      	LDD  R26,Y+10
00056b 85bb      	LDD  R27,Y+10+1
00056c 940e 0900 	CALL SUBOPT_0x8
00056e 9526      	LSR  R18
00056f 9526      	LSR  R18
000570 9526      	LSR  R18
000571 2f53      	MOV  R21,R19
                 _0x204003B:
000572 935f      	PUSH R21
000573 5f5f      	SUBI R21,-1
000574 2fe2      	MOV  R30,R18
000575 91af      	POP  R26
000576 17ea      	CP   R30,R26
000577 f048      	BRLO _0x204003D
000578 2f10      	MOV  R17,R16
                 _0x204003E:
000579 2fe1      	MOV  R30,R17
00057a 5011      	SUBI R17,1
00057b 30e0      	CPI  R30,0
00057c f019      	BREQ _0x2040040
00057d 940e 0905 	CALL SUBOPT_0x9
00057f cff9      	RJMP _0x204003E
                 _0x2040040:
000580 cff1      	RJMP _0x204003B
                 _0x204003D:
                 _0x2040038:
000581 85ae      	LDD  R26,Y+14
000582 170a      	CP   R16,R26
000583 f111      	BREQ _0x2040041
000584 85ee      	LDD  R30,Y+14
000585 85aa      	LDD  R26,Y+10
000586 85bb      	LDD  R27,Y+10+1
000587 e0f0      	LDI  R31,0
000588 940e 0900 	CALL SUBOPT_0x8
00058a 85ed      	LDD  R30,Y+13
00058b 70e7      	ANDI R30,LOW(0x7)
00058c f009      	BREQ _0x2040042
00058d 5f3f      	SUBI R19,-LOW(1)
                 _0x2040042:
00058e e020      	LDI  R18,LOW(0)
                 _0x2040043:
00058f 932f      	PUSH R18
000590 5f2f      	SUBI R18,-1
000591 2fe3      	MOV  R30,R19
000592 91af      	POP  R26
000593 17ae      	CP   R26,R30
000594 f488      	BRSH _0x2040045
000595 851e      	LDD  R17,Y+14
                 _0x2040046:
000596 931f      	PUSH R17
000597 5f1f      	SUBI R17,-1
000598 2fe0      	MOV  R30,R16
000599 91af      	POP  R26
00059a 17ae      	CP   R26,R30
00059b f418      	BRSH _0x2040048
00059c 940e 0905 	CALL SUBOPT_0x9
00059e cff7      	RJMP _0x2040046
                 _0x2040048:
00059f 85ee      	LDD  R30,Y+14
0005a0 81ae      	LDD  R26,Y+6
0005a1 81bf      	LDD  R27,Y+6+1
0005a2 e0f0      	LDI  R31,0
0005a3 940e 0900 	CALL SUBOPT_0x8
0005a5 cfe9      	RJMP _0x2040043
                 _0x2040045:
                 _0x2040041:
                 _0x2040030:
0005a6 85ef      	LDD  R30,Y+15
0005a7 70e7      	ANDI R30,LOW(0x7)
0005a8 2f3e      	MOV  R19,R30
                 _0x2040049:
0005a9 85ed      	LDD  R30,Y+13
0005aa 30e0      	CPI  R30,0
0005ab f409      	BRNE PC+2
0005ac c152      	RJMP _0x204004B
0005ad 85ea      	LDD  R30,Y+10
0005ae 85fb      	LDD  R31,Y+10+1
0005af 83ee      	STD  Y+6,R30
0005b0 83ff      	STD  Y+6+1,R31
0005b1 e010      	LDI  R17,LOW(0)
0005b2 8908      	LDD  R16,Y+16
0005b3 3030      	CPI  R19,0
0005b4 f009      	BREQ PC+2
0005b5 c066      	RJMP _0x204004C
0005b6 85ad      	LDD  R26,Y+13
0005b7 30a8      	CPI  R26,LOW(0x8)
0005b8 f408      	BRSH PC+2
0005b9 c05d      	RJMP _0x204004D
0005ba 85e9      	LDD  R30,Y+9
0005bb 30e0      	CPI  R30,0
0005bc f011      	BREQ _0x2040052
0005bd 30e3      	CPI  R30,LOW(0x3)
0005be f409      	BRNE _0x2040053
                 _0x2040052:
0005bf c002      	RJMP _0x2040054
                 _0x2040053:
0005c0 30e7      	CPI  R30,LOW(0x7)
0005c1 f409      	BRNE _0x2040055
                 _0x2040054:
0005c2 c002      	RJMP _0x2040056
                 _0x2040055:
0005c3 30e8      	CPI  R30,LOW(0x8)
0005c4 f409      	BRNE _0x2040057
                 _0x2040056:
0005c5 c002      	RJMP _0x2040058
                 _0x2040057:
0005c6 30e9      	CPI  R30,LOW(0x9)
0005c7 f409      	BRNE _0x2040059
                 _0x2040058:
0005c8 c002      	RJMP _0x204005A
                 _0x2040059:
0005c9 30ea      	CPI  R30,LOW(0xA)
0005ca f421      	BRNE _0x204005B
                 _0x204005A:
0005cb 930a      	ST   -Y,R16
0005cc 89a8      	LDD  R26,Y+16
0005cd de45      	RCALL _pcd8544_gotoxy
0005ce c004      	RJMP _0x2040050
                 _0x204005B:
0005cf 30e6      	CPI  R30,LOW(0x6)
0005d0 f411      	BRNE _0x2040050
0005d1 940e 0912 	CALL SUBOPT_0xA
                 _0x2040050:
                 _0x204005D:
0005d3 931f      	PUSH R17
0005d4 5f1f      	SUBI R17,-1
0005d5 85ee      	LDD  R30,Y+14
0005d6 91af      	POP  R26
0005d7 17ae      	CP   R26,R30
0005d8 f5b8      	BRSH _0x204005F
0005d9 85a9      	LDD  R26,Y+9
0005da 30a6      	CPI  R26,LOW(0x6)
0005db f469      	BRNE _0x2040060
0005dc 940e 0916 	CALL SUBOPT_0xB
0005de 93fa      	ST   -Y,R31
0005df 93ea      	ST   -Y,R30
0005e0 940e 08fd 	CALL SUBOPT_0x7
0005e2 9731      	SBIW R30,1
0005e3 54ed      	SUBI R30,LOW(-_gfx_buffer_G102)
0005e4 4ffd      	SBCI R31,HIGH(-_gfx_buffer_G102)
0005e5 81a0      	LD   R26,Z
0005e6 940e 08ac 	CALL _glcd_writemem
0005e8 c026      	RJMP _0x2040061
                 _0x2040060:
0005e9 85e9      	LDD  R30,Y+9
0005ea 30e9      	CPI  R30,LOW(0x9)
0005eb f411      	BRNE _0x2040065
0005ec e050      	LDI  R21,LOW(0)
0005ed c00e      	RJMP _0x2040066
                 _0x2040065:
0005ee 30ea      	CPI  R30,LOW(0xA)
0005ef f411      	BRNE _0x2040064
0005f0 ef5f      	LDI  R21,LOW(255)
0005f1 c00a      	RJMP _0x2040066
                 _0x2040064:
0005f2 940e 0916 	CALL SUBOPT_0xB
0005f4 940e 091f 	CALL SUBOPT_0xC
0005f6 2f5e      	MOV  R21,R30
0005f7 85e9      	LDD  R30,Y+9
0005f8 30e7      	CPI  R30,LOW(0x7)
0005f9 f011      	BREQ _0x204006D
0005fa 30e8      	CPI  R30,LOW(0x8)
0005fb f421      	BRNE _0x204006E
                 _0x204006D:
                 _0x2040066:
0005fc 940e 0925 	CALL SUBOPT_0xD
0005fe 2f5e      	MOV  R21,R30
0005ff c006      	RJMP _0x204006F
                 _0x204006E:
000600 30e3      	CPI  R30,LOW(0x3)
000601 f411      	BRNE _0x2040071
000602 9550      	COM  R21
000603 c002      	RJMP _0x2040072
                 _0x2040071:
000604 30e0      	CPI  R30,0
000605 f419      	BRNE _0x2040074
                 _0x2040072:
                 _0x204006F:
000606 2fa5      	MOV  R26,R21
000607 ddef      	RCALL _pcd8544_wrdata_G102
000608 c006      	RJMP _0x204006B
                 _0x2040074:
000609 940e 0929 	CALL SUBOPT_0xE
00060b efef      	LDI  R30,LOW(255)
00060c 93ea      	ST   -Y,R30
00060d 85ad      	LDD  R26,Y+13
00060e ded1      	RCALL _pcd8544_wrmasked_G102
                 _0x204006B:
                 _0x2040061:
00060f cfc3      	RJMP _0x204005D
                 _0x204005F:
000610 85ef      	LDD  R30,Y+15
000611 5fe8      	SUBI R30,-LOW(8)
000612 87ef      	STD  Y+15,R30
000613 85ed      	LDD  R30,Y+13
000614 50e8      	SUBI R30,LOW(8)
000615 87ed      	STD  Y+13,R30
000616 c0df      	RJMP _0x2040075
                 _0x204004D:
000617 855d      	LDD  R21,Y+13
000618 e020      	LDI  R18,LOW(0)
000619 e0e0      	LDI  R30,LOW(0)
00061a 87ed      	STD  Y+13,R30
00061b c081      	RJMP _0x2040076
                 _0x204004C:
00061c 2fe3      	MOV  R30,R19
00061d 85ad      	LDD  R26,Y+13
00061e 0fae      	ADD  R26,R30
00061f 30a9      	CPI  R26,LOW(0x9)
000620 f420      	BRSH _0x2040077
000621 852d      	LDD  R18,Y+13
000622 e0e0      	LDI  R30,LOW(0)
000623 87ed      	STD  Y+13,R30
000624 c003      	RJMP _0x2040078
                 _0x2040077:
000625 e0e8      	LDI  R30,LOW(8)
000626 1be3      	SUB  R30,R19
000627 2f2e      	MOV  R18,R30
                 _0x2040078:
000628 933a      	ST   -Y,R19
000629 2fa2      	MOV  R26,R18
00062a 940e 085a 	CALL _glcd_getmask
00062c 2f4e      	MOV  R20,R30
00062d 85e9      	LDD  R30,Y+9
00062e 30e6      	CPI  R30,LOW(0x6)
00062f f529      	BRNE _0x204007C
000630 940e 0912 	CALL SUBOPT_0xA
                 _0x204007D:
000632 931f      	PUSH R17
000633 5f1f      	SUBI R17,-1
000634 85ee      	LDD  R30,Y+14
000635 91af      	POP  R26
000636 17ae      	CP   R26,R30
000637 f4e0      	BRSH _0x204007F
000638 940e 08fd 	CALL SUBOPT_0x7
00063a 9731      	SBIW R30,1
00063b 54ed      	SUBI R30,LOW(-_gfx_buffer_G102)
00063c 4ffd      	SBCI R31,HIGH(-_gfx_buffer_G102)
00063d 81e0      	LD   R30,Z
00063e 23e4      	AND  R30,R20
00063f 2fae      	MOV  R26,R30
000640 2fe3      	MOV  R30,R19
000641 940e 0985 	CALL __LSRB12
000643 940e 092f 	CALL SUBOPT_0xF
000645 2fe3      	MOV  R30,R19
000646 2fa4      	MOV  R26,R20
000647 940e 0985 	CALL __LSRB12
000649 95e0      	COM  R30
00064a 21e1      	AND  R30,R1
00064b 2b5e      	OR   R21,R30
00064c 940e 0916 	CALL SUBOPT_0xB
00064e 93fa      	ST   -Y,R31
00064f 93ea      	ST   -Y,R30
000650 2fa5      	MOV  R26,R21
000651 940e 08ac 	CALL _glcd_writemem
000653 cfde      	RJMP _0x204007D
                 _0x204007F:
000654 c02c      	RJMP _0x204007B
                 _0x204007C:
000655 30e9      	CPI  R30,LOW(0x9)
000656 f411      	BRNE _0x2040080
000657 e050      	LDI  R21,LOW(0)
000658 c003      	RJMP _0x2040081
                 _0x2040080:
000659 30ea      	CPI  R30,LOW(0xA)
00065a f4a9      	BRNE _0x2040087
00065b ef5f      	LDI  R21,LOW(255)
                 _0x2040081:
00065c 940e 0925 	CALL SUBOPT_0xD
00065e 2fae      	MOV  R26,R30
00065f 2fe3      	MOV  R30,R19
000660 940e 097d 	CALL __LSLB12
000662 2f5e      	MOV  R21,R30
                 _0x2040084:
000663 931f      	PUSH R17
000664 5f1f      	SUBI R17,-1
000665 85ee      	LDD  R30,Y+14
000666 91af      	POP  R26
000667 17ae      	CP   R26,R30
000668 f430      	BRSH _0x2040086
000669 940e 0929 	CALL SUBOPT_0xE
00066b 934a      	ST   -Y,R20
00066c e0a0      	LDI  R26,LOW(0)
00066d de72      	RCALL _pcd8544_wrmasked_G102
00066e cff4      	RJMP _0x2040084
                 _0x2040086:
00066f c011      	RJMP _0x204007B
                 _0x2040087:
                 _0x2040088:
000670 931f      	PUSH R17
000671 5f1f      	SUBI R17,-1
000672 85ee      	LDD  R30,Y+14
000673 91af      	POP  R26
000674 17ae      	CP   R26,R30
000675 f458      	BRSH _0x204008A
000676 940e 093a 	CALL SUBOPT_0x10
000678 2fae      	MOV  R26,R30
000679 2fe3      	MOV  R30,R19
00067a 940e 097d 	CALL __LSLB12
00067c 93ea      	ST   -Y,R30
00067d 934a      	ST   -Y,R20
00067e 85ad      	LDD  R26,Y+13
00067f de60      	RCALL _pcd8544_wrmasked_G102
000680 cfef      	RJMP _0x2040088
                 _0x204008A:
                 _0x204007B:
000681 85ed      	LDD  R30,Y+13
000682 30e0      	CPI  R30,0
000683 f409      	BRNE _0x204008B
000684 c07a      	RJMP _0x204004B
                 _0x204008B:
000685 85ad      	LDD  R26,Y+13
000686 30a8      	CPI  R26,LOW(0x8)
000687 f428      	BRSH _0x204008C
000688 85ed      	LDD  R30,Y+13
000689 1be2      	SUB  R30,R18
00068a 2f5e      	MOV  R21,R30
00068b e0e0      	LDI  R30,LOW(0)
00068c c003      	RJMP _0x20400A1
                 _0x204008C:
00068d 2f53      	MOV  R21,R19
00068e 85ed      	LDD  R30,Y+13
00068f 50e8      	SUBI R30,LOW(8)
                 _0x20400A1:
000690 87ed      	STD  Y+13,R30
000691 e010      	LDI  R17,LOW(0)
000692 85ef      	LDD  R30,Y+15
000693 5fe8      	SUBI R30,-LOW(8)
000694 87ef      	STD  Y+15,R30
000695 e0e8      	LDI  R30,LOW(8)
000696 1be3      	SUB  R30,R19
000697 2f2e      	MOV  R18,R30
000698 8908      	LDD  R16,Y+16
000699 85ea      	LDD  R30,Y+10
00069a 85fb      	LDD  R31,Y+10+1
00069b 83ee      	STD  Y+6,R30
00069c 83ff      	STD  Y+6+1,R31
                 _0x2040076:
00069d 2fe5      	MOV  R30,R21
00069e e0f0      	LDI  R31,0
00069f 5be6      	SUBI R30,LOW(-__glcd_mask*2)
0006a0 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
0006a1 9144      	LPM  R20,Z
0006a2 85e9      	LDD  R30,Y+9
0006a3 30e6      	CPI  R30,LOW(0x6)
0006a4 f529      	BRNE _0x2040091
0006a5 940e 0912 	CALL SUBOPT_0xA
                 _0x2040092:
0006a7 931f      	PUSH R17
0006a8 5f1f      	SUBI R17,-1
0006a9 85ee      	LDD  R30,Y+14
0006aa 91af      	POP  R26
0006ab 17ae      	CP   R26,R30
0006ac f4e0      	BRSH _0x2040094
0006ad 940e 08fd 	CALL SUBOPT_0x7
0006af 9731      	SBIW R30,1
0006b0 54ed      	SUBI R30,LOW(-_gfx_buffer_G102)
0006b1 4ffd      	SBCI R31,HIGH(-_gfx_buffer_G102)
0006b2 81e0      	LD   R30,Z
0006b3 23e4      	AND  R30,R20
0006b4 2fae      	MOV  R26,R30
0006b5 2fe2      	MOV  R30,R18
0006b6 940e 097d 	CALL __LSLB12
0006b8 940e 092f 	CALL SUBOPT_0xF
0006ba 2fe2      	MOV  R30,R18
0006bb 2fa4      	MOV  R26,R20
0006bc 940e 097d 	CALL __LSLB12
0006be 95e0      	COM  R30
0006bf 21e1      	AND  R30,R1
0006c0 2b5e      	OR   R21,R30
0006c1 940e 0916 	CALL SUBOPT_0xB
0006c3 93fa      	ST   -Y,R31
0006c4 93ea      	ST   -Y,R30
0006c5 2fa5      	MOV  R26,R21
0006c6 940e 08ac 	CALL _glcd_writemem
0006c8 cfde      	RJMP _0x2040092
                 _0x2040094:
0006c9 c02c      	RJMP _0x2040090
                 _0x2040091:
0006ca 30e9      	CPI  R30,LOW(0x9)
0006cb f411      	BRNE _0x2040095
0006cc e050      	LDI  R21,LOW(0)
0006cd c003      	RJMP _0x2040096
                 _0x2040095:
0006ce 30ea      	CPI  R30,LOW(0xA)
0006cf f4a9      	BRNE _0x204009C
0006d0 ef5f      	LDI  R21,LOW(255)
                 _0x2040096:
0006d1 940e 0925 	CALL SUBOPT_0xD
0006d3 2fae      	MOV  R26,R30
0006d4 2fe2      	MOV  R30,R18
0006d5 940e 0985 	CALL __LSRB12
0006d7 2f5e      	MOV  R21,R30
                 _0x2040099:
0006d8 931f      	PUSH R17
0006d9 5f1f      	SUBI R17,-1
0006da 85ee      	LDD  R30,Y+14
0006db 91af      	POP  R26
0006dc 17ae      	CP   R26,R30
0006dd f430      	BRSH _0x204009B
0006de 940e 0929 	CALL SUBOPT_0xE
0006e0 934a      	ST   -Y,R20
0006e1 e0a0      	LDI  R26,LOW(0)
0006e2 ddfd      	RCALL _pcd8544_wrmasked_G102
0006e3 cff4      	RJMP _0x2040099
                 _0x204009B:
0006e4 c011      	RJMP _0x2040090
                 _0x204009C:
                 _0x204009D:
0006e5 931f      	PUSH R17
0006e6 5f1f      	SUBI R17,-1
0006e7 85ee      	LDD  R30,Y+14
0006e8 91af      	POP  R26
0006e9 17ae      	CP   R26,R30
0006ea f458      	BRSH _0x204009F
0006eb 940e 093a 	CALL SUBOPT_0x10
0006ed 2fae      	MOV  R26,R30
0006ee 2fe2      	MOV  R30,R18
0006ef 940e 0985 	CALL __LSRB12
0006f1 93ea      	ST   -Y,R30
0006f2 934a      	ST   -Y,R20
0006f3 85ad      	LDD  R26,Y+13
0006f4 ddeb      	RCALL _pcd8544_wrmasked_G102
0006f5 cfef      	RJMP _0x204009D
                 _0x204009F:
                 _0x2040090:
                 _0x2040075:
0006f6 85e8      	LDD  R30,Y+8
0006f7 85aa      	LDD  R26,Y+10
0006f8 85bb      	LDD  R27,Y+10+1
0006f9 e0f0      	LDI  R31,0
0006fa 0fea      	ADD  R30,R26
0006fb 1ffb      	ADC  R31,R27
0006fc 87ea      	STD  Y+10,R30
0006fd 87fb      	STD  Y+10+1,R31
0006fe ceaa      	RJMP _0x2040049
                 _0x204004B:
                 _0x2120007:
0006ff 940e 09e0 	CALL __LOADLOCR6
000701 9661      	ADIW R28,17
000702 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _glcd_clipx:
                 ; .FSTART _glcd_clipx
000703 940e 0947 	CALL SUBOPT_0x11
000705 f024      	BRLT _0x2060003
000706 e0e0      	LDI  R30,LOW(0)
000707 e0f0      	LDI  R31,HIGH(0)
000708 940c 0863 	JMP  _0x2120003
                 _0x2060003:
00070a 81a8      	LD   R26,Y
00070b 81b9      	LDD  R27,Y+1
00070c 35a4      	CPI  R26,LOW(0x54)
00070d e0e0      	LDI  R30,HIGH(0x54)
00070e 07be      	CPC  R27,R30
00070f f024      	BRLT _0x2060004
000710 e5e3      	LDI  R30,LOW(83)
000711 e0f0      	LDI  R31,HIGH(83)
000712 940c 0863 	JMP  _0x2120003
                 _0x2060004:
000714 81e8      	LD   R30,Y
000715 81f9      	LDD  R31,Y+1
000716 940c 0863 	JMP  _0x2120003
                 ; .FEND
                 _glcd_clipy:
                 ; .FSTART _glcd_clipy
000718 940e 0947 	CALL SUBOPT_0x11
00071a f024      	BRLT _0x2060005
00071b e0e0      	LDI  R30,LOW(0)
00071c e0f0      	LDI  R31,HIGH(0)
00071d 940c 0863 	JMP  _0x2120003
                 _0x2060005:
00071f 81a8      	LD   R26,Y
000720 81b9      	LDD  R27,Y+1
000721 97d0      	SBIW R26,48
000722 f024      	BRLT _0x2060006
000723 e2ef      	LDI  R30,LOW(47)
000724 e0f0      	LDI  R31,HIGH(47)
000725 940c 0863 	JMP  _0x2120003
                 _0x2060006:
000727 81e8      	LD   R30,Y
000728 81f9      	LDD  R31,Y+1
000729 940c 0863 	JMP  _0x2120003
                 ; .FEND
                 _glcd_getcharw_G103:
                 ; .FSTART _glcd_getcharw_G103
00072b 93ba      	ST   -Y,R27
00072c 93aa      	ST   -Y,R26
00072d 9723      	SBIW R28,3
00072e 940e 094e 	CALL SUBOPT_0x12
000730 018f      	MOVW R16,R30
000731 2e00      	MOV  R0,R16
000732 2a01      	OR   R0,R17
000733 f419      	BRNE _0x206000B
000734 e0e0      	LDI  R30,LOW(0)
000735 e0f0      	LDI  R31,HIGH(0)
000736 c05f      	RJMP _0x2120006
                 _0x206000B:
000737 940e 0955 	CALL SUBOPT_0x13
000739 820f      	STD  Y+7,R0
00073a 940e 0955 	CALL SUBOPT_0x13
00073c 820e      	STD  Y+6,R0
00073d 940e 0955 	CALL SUBOPT_0x13
00073f 8608      	STD  Y+8,R0
000740 85eb      	LDD  R30,Y+11
000741 85a8      	LDD  R26,Y+8
000742 17ea      	CP   R30,R26
000743 f418      	BRSH _0x206000C
000744 e0e0      	LDI  R30,LOW(0)
000745 e0f0      	LDI  R31,HIGH(0)
000746 c04f      	RJMP _0x2120006
                 _0x206000C:
000747 01f8      	MOVW R30,R16
                +
000748 5f0f     +SUBI R16 , LOW ( - 1 )
000749 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00074a 9154      	LPM  R21,Z
00074b 85a8      	LDD  R26,Y+8
00074c 27bb      	CLR  R27
00074d 27ee      	CLR  R30
00074e 0fa5      	ADD  R26,R21
00074f 1fbe      	ADC  R27,R30
000750 85eb      	LDD  R30,Y+11
000751 e0f0      	LDI  R31,0
000752 17ea      	CP   R30,R26
000753 07fb      	CPC  R31,R27
000754 f018      	BRLO _0x206000D
000755 e0e0      	LDI  R30,LOW(0)
000756 e0f0      	LDI  R31,HIGH(0)
000757 c03e      	RJMP _0x2120006
                 _0x206000D:
000758 81ee      	LDD  R30,Y+6
000759 95e6      	LSR  R30
00075a 95e6      	LSR  R30
00075b 95e6      	LSR  R30
00075c 2f4e      	MOV  R20,R30
00075d 81ee      	LDD  R30,Y+6
00075e 70e7      	ANDI R30,LOW(0x7)
00075f f009      	BREQ _0x206000E
000760 5f4f      	SUBI R20,-LOW(1)
                 _0x206000E:
000761 81ef      	LDD  R30,Y+7
000762 30e0      	CPI  R30,0
000763 f0a1      	BREQ _0x206000F
000764 85a9      	LDD  R26,Y+9
000765 85ba      	LDD  R27,Y+9+1
000766 93ec      	ST   X,R30
000767 85a8      	LDD  R26,Y+8
000768 85eb      	LDD  R30,Y+11
000769 1bea      	SUB  R30,R26
00076a e0f0      	LDI  R31,0
00076b 01df      	MOVW R26,R30
00076c 81ef      	LDD  R30,Y+7
00076d e0f0      	LDI  R31,0
00076e 940e 098d 	CALL __MULW12U
000770 01df      	MOVW R26,R30
000771 2fe4      	MOV  R30,R20
000772 e0f0      	LDI  R31,0
000773 940e 098d 	CALL __MULW12U
000775 0fe0      	ADD  R30,R16
000776 1ff1      	ADC  R31,R17
000777 c01e      	RJMP _0x2120006
                 _0x206000F:
000778 0198      	MOVW R18,R16
000779 2fe5      	MOV  R30,R21
00077a e0f0      	LDI  R31,0
                +
00077b 0f0e     +ADD R16 , R30
00077c 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
                 _0x2060010:
00077d 85a8      	LDD  R26,Y+8
00077e 5faf      	SUBI R26,-LOW(1)
00077f 87a8      	STD  Y+8,R26
000780 50a1      	SUBI R26,LOW(1)
000781 85eb      	LDD  R30,Y+11
000782 17ae      	CP   R26,R30
000783 f460      	BRSH _0x2060012
000784 01f9      	MOVW R30,R18
                +
000785 5f2f     +SUBI R18 , LOW ( - 1 )
000786 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000787 91a4      	LPM  R26,Z
000788 e0b0      	LDI  R27,0
000789 2fe4      	MOV  R30,R20
00078a e0f0      	LDI  R31,0
00078b 940e 098d 	CALL __MULW12U
                +
00078d 0f0e     +ADD R16 , R30
00078e 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
00078f cfed      	RJMP _0x2060010
                 _0x2060012:
000790 01f9      	MOVW R30,R18
000791 91e4      	LPM  R30,Z
000792 85a9      	LDD  R26,Y+9
000793 85ba      	LDD  R27,Y+9+1
000794 93ec      	ST   X,R30
000795 01f8      	MOVW R30,R16
                 _0x2120006:
000796 940e 09e0 	CALL __LOADLOCR6
000798 962c      	ADIW R28,12
000799 9508      	RET
                 ; .FEND
                 _glcd_new_line_G103:
                 ; .FSTART _glcd_new_line_G103
00079a e0e0      	LDI  R30,LOW(0)
                +
00079b 93e0 027e+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
                +
00079d 91a0 027f+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
00079f 27bb      	CLR  R27
0007a0 940e 095a 	CALL SUBOPT_0x14
0007a2 e0f0      	LDI  R31,0
0007a3 0fae      	ADD  R26,R30
0007a4 1fbf      	ADC  R27,R31
                +
0007a5 91e0 0283+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
0007a7 e0f0      	LDI  R31,0
0007a8 0fae      	ADD  R26,R30
0007a9 1fbf      	ADC  R27,R31
0007aa df6d      	RCALL _glcd_clipy
                +
0007ab 93e0 027f+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
0007ad 9508      	RET
                 ; .FEND
                 _glcd_putchar:
                 ; .FSTART _glcd_putchar
0007ae 93aa      	ST   -Y,R26
0007af 9721      	SBIW R28,1
0007b0 940e 094e 	CALL SUBOPT_0x12
0007b2 9730      	SBIW R30,0
0007b3 f409      	BRNE PC+2
0007b4 c055      	RJMP _0x206001F
0007b5 81af      	LDD  R26,Y+7
0007b6 30aa      	CPI  R26,LOW(0xA)
0007b7 f409      	BRNE _0x2060020
0007b8 c04f      	RJMP _0x2060021
                 _0x2060020:
0007b9 81ef      	LDD  R30,Y+7
0007ba 93ea      	ST   -Y,R30
0007bb 01de      	MOVW R26,R28
0007bc 9617      	ADIW R26,7
0007bd df6d      	RCALL _glcd_getcharw_G103
0007be 01af      	MOVW R20,R30
0007bf 9730      	SBIW R30,0
0007c0 f409      	BRNE _0x2060022
0007c1 c04a      	RJMP _0x2120005
                 _0x2060022:
                +
0007c2 91e0 0282+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
0007c4 81ae      	LDD  R26,Y+6
0007c5 0fea      	ADD  R30,R26
0007c6 2f3e      	MOV  R19,R30
                +
0007c7 91a0 027e+LDS R26 , _glcd_state + ( 2 )
                 	__GETB2MN _glcd_state,2
0007c9 27bb      	CLR  R27
0007ca e0f0      	LDI  R31,0
0007cb 0fea      	ADD  R30,R26
0007cc 1ffb      	ADC  R31,R27
0007cd 018f      	MOVW R16,R30
                +
0007ce 3505     +CPI R16 , LOW ( 85 )
0007cf e0e0     +LDI R30 , HIGH ( 85 )
0007d0 071e     +CPC R17 , R30
                 	__CPWRN 16,17,85
0007d1 f018      	BRLO _0x2060023
0007d2 2f03      	MOV  R16,R19
0007d3 2711      	CLR  R17
0007d4 dfc5      	RCALL _glcd_new_line_G103
                 _0x2060023:
                +
0007d5 91e0 027e+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
0007d7 93ea      	ST   -Y,R30
                +
0007d8 91e0 027f+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
0007da 93ea      	ST   -Y,R30
0007db 85e8      	LDD  R30,Y+8
0007dc 93ea      	ST   -Y,R30
0007dd 940e 095a 	CALL SUBOPT_0x14
0007df 93ea      	ST   -Y,R30
0007e0 e0e1      	LDI  R30,LOW(1)
0007e1 93ea      	ST   -Y,R30
0007e2 935a      	ST   -Y,R21
0007e3 934a      	ST   -Y,R20
0007e4 e0a7      	LDI  R26,LOW(7)
0007e5 dd33      	RCALL _glcd_block
                +
0007e6 91e0 027e+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
0007e8 81ae      	LDD  R26,Y+6
0007e9 0fea      	ADD  R30,R26
0007ea 93ea      	ST   -Y,R30
                +
0007eb 91e0 027f+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
0007ed 93ea      	ST   -Y,R30
                +
0007ee 91e0 0282+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
0007f0 93ea      	ST   -Y,R30
0007f1 940e 095a 	CALL SUBOPT_0x14
0007f3 940e 0961 	CALL SUBOPT_0x15
                +
0007f5 91e0 027e+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
0007f7 93ea      	ST   -Y,R30
                +
0007f8 91a0 027f+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
0007fa 940e 095a 	CALL SUBOPT_0x14
0007fc 0fea      	ADD  R30,R26
0007fd 93ea      	ST   -Y,R30
0007fe 933a      	ST   -Y,R19
                +
0007ff 91e0 0283+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
000801 940e 0961 	CALL SUBOPT_0x15
000803 e5e4      	LDI  R30,LOW(84)
000804 e0f0      	LDI  R31,HIGH(84)
000805 17e0      	CP   R30,R16
000806 07f1      	CPC  R31,R17
000807 f411      	BRNE _0x2060024
                 _0x2060021:
000808 df91      	RCALL _glcd_new_line_G103
000809 c002      	RJMP _0x2120005
                 _0x2060024:
                 _0x206001F:
                +
00080a 9300 027e+STS _glcd_state + ( 2 ) , R16
                 	__PUTBMRN _glcd_state,2,16
                 _0x2120005:
00080c 940e 09e0 	CALL __LOADLOCR6
00080e 9628      	ADIW R28,8
00080f 9508      	RET
                 ; .FEND
                 _glcd_outtextxy:
                 ; .FSTART _glcd_outtextxy
000810 93ba      	ST   -Y,R27
000811 93aa      	ST   -Y,R26
000812 931a      	ST   -Y,R17
000813 81ec      	LDD  R30,Y+4
000814 93ea      	ST   -Y,R30
000815 81ac      	LDD  R26,Y+4
000816 d00d      	RCALL _glcd_moveto
                 _0x2060025:
000817 81a9      	LDD  R26,Y+1
000818 81ba      	LDD  R27,Y+1+1
000819 91ed      	LD   R30,X+
00081a 83a9      	STD  Y+1,R26
00081b 83ba      	STD  Y+1+1,R27
00081c 2f1e      	MOV  R17,R30
00081d 30e0      	CPI  R30,0
00081e f019      	BREQ _0x2060027
00081f 2fa1      	MOV  R26,R17
000820 df8d      	RCALL _glcd_putchar
000821 cff5      	RJMP _0x2060025
                 _0x2060027:
000822 8118      	LDD  R17,Y+0
000823 c01b      	RJMP _0x2120004
                 ; .FEND
                 _glcd_moveto:
                 ; .FSTART _glcd_moveto
000824 93aa      	ST   -Y,R26
000825 81a9      	LDD  R26,Y+1
000826 27bb      	CLR  R27
000827 dedb      	RCALL _glcd_clipx
                +
000828 93e0 027e+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
00082a 81a8      	LD   R26,Y
00082b 27bb      	CLR  R27
00082c deeb      	RCALL _glcd_clipy
                +
00082d 93e0 027f+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
00082f 940c 0863 	JMP  _0x2120003
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _memset:
                 ; .FSTART _memset
000831 93ba      	ST   -Y,R27
000832 93aa      	ST   -Y,R26
000833 81b9          ldd  r27,y+1
000834 81a8          ld   r26,y
000835 9610          adiw r26,0
000836 f031          breq memset1
000837 81fc          ldd  r31,y+4
000838 81eb          ldd  r30,y+3
000839 816a          ldd  r22,y+2
                 memset0:
00083a 9361          st   z+,r22
00083b 9711          sbiw r26,1
00083c f7e9          brne memset0
                 memset1:
00083d 81eb          ldd  r30,y+3
00083e 81fc          ldd  r31,y+4
                 _0x2120004:
00083f 9625      	ADIW R28,5
000840 9508      	RET
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
000841 93ba      	ST   -Y,R27
000842 93aa      	ST   -Y,R26
000843 91a9          ld   r26,y+
000844 91b9          ld   r27,y+
000845 27ee          clr  r30
000846 27ff          clr  r31
                 strlen0:
000847 916d          ld   r22,x+
000848 2366          tst  r22
000849 f011          breq strlen1
00084a 9631          adiw r30,1
00084b cffb          rjmp strlen0
                 strlen1:
00084c 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
00084d 93ba      	ST   -Y,R27
00084e 93aa      	ST   -Y,R26
00084f 27aa          clr  r26
000850 27bb          clr  r27
000851 91e9          ld   r30,y+
000852 91f9          ld   r31,y+
                 strlenf0:
000853 9005      	lpm  r0,z+
000854 2000          tst  r0
000855 f011          breq strlenf1
000856 9611          adiw r26,1
000857 cffb          rjmp strlenf0
                 strlenf1:
000858 01fd          movw r30,r26
000859 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _glcd_getmask:
                 ; .FSTART _glcd_getmask
00085a 93aa      	ST   -Y,R26
00085b 81e8      	LD   R30,Y
00085c e0f0      	LDI  R31,0
00085d 5be6      	SUBI R30,LOW(-__glcd_mask*2)
00085e 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
00085f 91a4      	LPM  R26,Z
000860 81e9      	LDD  R30,Y+1
000861 940e 097d 	CALL __LSLB12
                 _0x2120003:
000863 9622      	ADIW R28,2
000864 9508      	RET
                 ; .FEND
                 _glcd_mappixcolor1bit:
                 ; .FSTART _glcd_mappixcolor1bit
000865 93aa      	ST   -Y,R26
000866 931a      	ST   -Y,R17
000867 81e9      	LDD  R30,Y+1
000868 30e7      	CPI  R30,LOW(0x7)
000869 f011      	BREQ _0x2100007
00086a 30ea      	CPI  R30,LOW(0xA)
00086b f419      	BRNE _0x2100008
                 _0x2100007:
00086c 9110 027c 	LDS  R17,_glcd_state
00086e c009      	RJMP _0x2100009
                 _0x2100008:
00086f 30e9      	CPI  R30,LOW(0x9)
000870 f419      	BRNE _0x210000B
                +
000871 9110 027d+LDS R17 , _glcd_state + ( 1 )
                 	__GETBRMN 17,_glcd_state,1
000873 c004      	RJMP _0x2100009
                 _0x210000B:
000874 30e8      	CPI  R30,LOW(0x8)
000875 f4a1      	BRNE _0x2100005
                +
000876 9110 028c+LDS R17 , _glcd_state + ( 16 )
                 	__GETBRMN 17,_glcd_state,16
                 _0x2100009:
                +
000878 91e0 027d+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
00087a 30e0      	CPI  R30,0
00087b f049      	BREQ _0x210000E
00087c 3010      	CPI  R17,0
00087d f019      	BREQ _0x210000F
00087e efef      	LDI  R30,LOW(255)
00087f 8118      	LDD  R17,Y+0
000880 c029      	RJMP _0x2120002
                 _0x210000F:
000881 81ea      	LDD  R30,Y+2
000882 95e0      	COM  R30
000883 8118      	LDD  R17,Y+0
000884 c025      	RJMP _0x2120002
                 _0x210000E:
000885 3010      	CPI  R17,0
000886 f419      	BRNE _0x2100011
000887 e0e0      	LDI  R30,LOW(0)
000888 8118      	LDD  R17,Y+0
000889 c020      	RJMP _0x2120002
                 _0x2100011:
                 _0x2100005:
00088a 81ea      	LDD  R30,Y+2
00088b 8118      	LDD  R17,Y+0
00088c c01d      	RJMP _0x2120002
                 ; .FEND
                 _glcd_readmem:
                 ; .FSTART _glcd_readmem
00088d 93ba      	ST   -Y,R27
00088e 93aa      	ST   -Y,R26
00088f 81ea      	LDD  R30,Y+2
000890 30e1      	CPI  R30,LOW(0x1)
000891 f421      	BRNE _0x2100015
000892 81e8      	LD   R30,Y
000893 81f9      	LDD  R31,Y+1
000894 91e4      	LPM  R30,Z
000895 c014      	RJMP _0x2120002
                 _0x2100015:
000896 30e2      	CPI  R30,LOW(0x2)
000897 f429      	BRNE _0x2100016
000898 81a8      	LD   R26,Y
000899 81b9      	LDD  R27,Y+1
00089a 940e 09b8 	CALL __EEPROMRDB
00089c c00d      	RJMP _0x2120002
                 _0x2100016:
00089d 30e3      	CPI  R30,LOW(0x3)
00089e f441      	BRNE _0x2100018
00089f 81a8      	LD   R26,Y
0008a0 81b9      	LDD  R27,Y+1
                +
0008a1 91e0 0295+LDS R30 , _glcd_state + ( 25 )
0008a3 91f0 0296+LDS R31 , _glcd_state + ( 25 ) + 1
0008a5 9509     +ICALL
                 	__CALL1MN _glcd_state,25
0008a6 c003      	RJMP _0x2120002
                 _0x2100018:
0008a7 81a8      	LD   R26,Y
0008a8 81b9      	LDD  R27,Y+1
0008a9 91ec      	LD   R30,X
                 _0x2120002:
0008aa 9623      	ADIW R28,3
0008ab 9508      	RET
                 ; .FEND
                 _glcd_writemem:
                 ; .FSTART _glcd_writemem
0008ac 93aa      	ST   -Y,R26
0008ad 81eb      	LDD  R30,Y+3
0008ae 30e0      	CPI  R30,0
0008af f429      	BRNE _0x210001C
0008b0 81e8      	LD   R30,Y
0008b1 81a9      	LDD  R26,Y+1
0008b2 81ba      	LDD  R27,Y+1+1
0008b3 93ec      	ST   X,R30
0008b4 c014      	RJMP _0x210001B
                 _0x210001C:
0008b5 30e2      	CPI  R30,LOW(0x2)
0008b6 f431      	BRNE _0x210001D
0008b7 81e8      	LD   R30,Y
0008b8 81a9      	LDD  R26,Y+1
0008b9 81ba      	LDD  R27,Y+1+1
0008ba 940e 09c4 	CALL __EEPROMWRB
0008bc c00c      	RJMP _0x210001B
                 _0x210001D:
0008bd 30e3      	CPI  R30,LOW(0x3)
0008be f451      	BRNE _0x210001B
0008bf 81e9      	LDD  R30,Y+1
0008c0 81fa      	LDD  R31,Y+1+1
0008c1 93fa      	ST   -Y,R31
0008c2 93ea      	ST   -Y,R30
0008c3 81aa      	LDD  R26,Y+2
                +
0008c4 91e0 0297+LDS R30 , _glcd_state + ( 27 )
0008c6 91f0 0298+LDS R31 , _glcd_state + ( 27 ) + 1
0008c8 9509     +ICALL
                 	__CALL1MN _glcd_state,27
                 _0x210001B:
                 _0x2120001:
0008c9 9624      	ADIW R28,4
0008ca 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _glcd_state:
00027c           	.BYTE 0x1D
                 _buff:
000299           	.BYTE 0x14
                 __seed_G101:
0002ad           	.BYTE 0x4
                 _gfx_addr_G102:
0002b1           	.BYTE 0x2
                 _gfx_buffer_G102:
0002b3           	.BYTE 0x1F8
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x0:
0008cb 91ed      	LD   R30,X+
0008cc 91fd      	LD   R31,X+
0008cd 9631      	ADIW R30,1
0008ce 93fe      	ST   -X,R31
0008cf 93ee      	ST   -X,R30
0008d0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x1:
0008d1 932a      	ST   -Y,R18
0008d2 85ad      	LDD  R26,Y+13
0008d3 85be      	LDD  R27,Y+13+1
0008d4 85ef      	LDD  R30,Y+15
0008d5 89f8      	LDD  R31,Y+15+1
0008d6 9509      	ICALL
0008d7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2:
0008d8 89e8      	LDD  R30,Y+16
0008d9 89f9      	LDD  R31,Y+16+1
0008da 9734      	SBIW R30,4
0008db 8be8      	STD  Y+16,R30
0008dc 8bf9      	STD  Y+16+1,R31
0008dd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3:
0008de 85ad      	LDD  R26,Y+13
0008df 85be      	LDD  R27,Y+13+1
0008e0 85ef      	LDD  R30,Y+15
0008e1 89f8      	LDD  R31,Y+15+1
0008e2 9509      	ICALL
0008e3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x4:
0008e4 89a8      	LDD  R26,Y+16
0008e5 89b9      	LDD  R27,Y+16+1
0008e6 9614      	ADIW R26,4
0008e7 940e 09ab 	CALL __GETW1P
0008e9 83ee      	STD  Y+6,R30
0008ea 83ff      	STD  Y+6+1,R31
0008eb 81ae      	LDD  R26,Y+6
0008ec 81bf      	LDD  R27,Y+6+1
0008ed 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x5:
0008ee 89a8      	LDD  R26,Y+16
0008ef 89b9      	LDD  R27,Y+16+1
0008f0 9614      	ADIW R26,4
0008f1 940e 09ab 	CALL __GETW1P
0008f3 87ea      	STD  Y+10,R30
0008f4 87fb      	STD  Y+10+1,R31
0008f5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6:
0008f6 01de      	MOVW R26,R28
0008f7 961c      	ADIW R26,12
0008f8 940e 0975 	CALL __ADDW2R15
0008fa 940e 09ab 	CALL __GETW1P
0008fc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x7:
0008fd eba1      	LDI  R26,LOW(_gfx_addr_G102)
0008fe e0b2      	LDI  R27,HIGH(_gfx_addr_G102)
0008ff cfcb      	RJMP SUBOPT_0x0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x8:
000900 0fea      	ADD  R30,R26
000901 1ffb      	ADC  R31,R27
000902 83ee      	STD  Y+6,R30
000903 83ff      	STD  Y+6+1,R31
000904 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x9:
000905 85ec      	LDD  R30,Y+12
000906 93ea      	ST   -Y,R30
000907 81ef      	LDD  R30,Y+7
000908 85f8      	LDD  R31,Y+7+1
000909 9631      	ADIW R30,1
00090a 83ef      	STD  Y+7,R30
00090b 87f8      	STD  Y+7+1,R31
00090c 9731      	SBIW R30,1
00090d 93fa      	ST   -Y,R31
00090e 93ea      	ST   -Y,R30
00090f e0a0      	LDI  R26,LOW(0)
000910 940c 08ac 	JMP  _glcd_writemem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xA:
000912 930a      	ST   -Y,R16
000913 89a8      	LDD  R26,Y+16
000914 940c 03fc 	JMP  _pcd8544_setaddr_G102
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0xB:
000916 85ec      	LDD  R30,Y+12
000917 93ea      	ST   -Y,R30
000918 81ef      	LDD  R30,Y+7
000919 85f8      	LDD  R31,Y+7+1
00091a 9631      	ADIW R30,1
00091b 83ef      	STD  Y+7,R30
00091c 87f8      	STD  Y+7+1,R31
00091d 9731      	SBIW R30,1
00091e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xC:
00091f 2766      	CLR  R22
000920 2777      	CLR  R23
000921 01df      	MOVW R26,R30
000922 01cb      	MOVW R24,R22
000923 940c 088d 	JMP  _glcd_readmem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD:
000925 935a      	ST   -Y,R21
000926 85aa      	LDD  R26,Y+10
000927 940c 0865 	JMP  _glcd_mappixcolor1bit
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xE:
000929 930a      	ST   -Y,R16
00092a 9503      	INC  R16
00092b 89e8      	LDD  R30,Y+16
00092c 93ea      	ST   -Y,R30
00092d 935a      	ST   -Y,R21
00092e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xF:
00092f 2f5e      	MOV  R21,R30
000930 85ec      	LDD  R30,Y+12
000931 93ea      	ST   -Y,R30
000932 81af      	LDD  R26,Y+7
000933 85b8      	LDD  R27,Y+7+1
000934 2788      	CLR  R24
000935 2799      	CLR  R25
000936 940e 088d 	CALL _glcd_readmem
000938 2e1e      	MOV  R1,R30
000939 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x10:
00093a 930a      	ST   -Y,R16
00093b 9503      	INC  R16
00093c 89e8      	LDD  R30,Y+16
00093d 93ea      	ST   -Y,R30
00093e 85ee      	LDD  R30,Y+14
00093f 93ea      	ST   -Y,R30
000940 85e9      	LDD  R30,Y+9
000941 85fa      	LDD  R31,Y+9+1
000942 9631      	ADIW R30,1
000943 87e9      	STD  Y+9,R30
000944 87fa      	STD  Y+9+1,R31
000945 9731      	SBIW R30,1
000946 cfd8      	RJMP SUBOPT_0xC
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x11:
000947 93ba      	ST   -Y,R27
000948 93aa      	ST   -Y,R26
000949 81a8      	LD   R26,Y
00094a 81b9      	LDD  R27,Y+1
00094b 940e 09d5 	CALL __CPW02
00094d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x12:
00094e 940e 09d9 	CALL __SAVELOCR6
                +
000950 91e0 0280+LDS R30 , _glcd_state + ( 4 )
000952 91f0 0281+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
000954 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x13:
000955 01f8      	MOVW R30,R16
                +
000956 5f0f     +SUBI R16 , LOW ( - 1 )
000957 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000958 9004      	LPM  R0,Z
000959 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x14:
                +
00095a 91e0 0280+LDS R30 , _glcd_state + ( 4 )
00095c 91f0 0281+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
00095e 9631      	ADIW R30,1
00095f 91e4      	LPM  R30,Z
000960 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x15:
000961 93ea      	ST   -Y,R30
000962 e0e0      	LDI  R30,LOW(0)
000963 93ea      	ST   -Y,R30
000964 e0e0      	LDI  R30,LOW(0)
000965 e0f0      	LDI  R31,HIGH(0)
000966 93fa      	ST   -Y,R31
000967 93ea      	ST   -Y,R30
000968 e0a9      	LDI  R26,LOW(9)
000969 940c 0519 	JMP  _glcd_block
                 
                 
                 	.CSEG
                 _delay_ms:
00096b 9610      	adiw r26,0
00096c f039      	breq __delay_ms1
                 __delay_ms0:
                +
00096d ed80     +LDI R24 , LOW ( 0x7D0 )
00096e e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
00096f 9701     +SBIW R24 , 1
000970 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000971 95a8      	wdr
000972 9711      	sbiw r26,1
000973 f7c9      	brne __delay_ms0
                 __delay_ms1:
000974 9508      	ret
                 
                 __ADDW2R15:
000975 2400      	CLR  R0
000976 0daf      	ADD  R26,R15
000977 1db0      	ADC  R27,R0
000978 9508      	RET
                 
                 __ANEGW1:
000979 95f1      	NEG  R31
00097a 95e1      	NEG  R30
00097b 40f0      	SBCI R31,0
00097c 9508      	RET
                 
                 __LSLB12:
00097d 23ee      	TST  R30
00097e 2e0e      	MOV  R0,R30
00097f 2fea      	MOV  R30,R26
000980 f019      	BREQ __LSLB12R
                 __LSLB12L:
000981 0fee      	LSL  R30
000982 940a      	DEC  R0
000983 f7e9      	BRNE __LSLB12L
                 __LSLB12R:
000984 9508      	RET
                 
                 __LSRB12:
000985 23ee      	TST  R30
000986 2e0e      	MOV  R0,R30
000987 2fea      	MOV  R30,R26
000988 f019      	BREQ __LSRB12R
                 __LSRB12L:
000989 95e6      	LSR  R30
00098a 940a      	DEC  R0
00098b f7e9      	BRNE __LSRB12L
                 __LSRB12R:
00098c 9508      	RET
                 
                 __MULW12U:
00098d 9ffa      	MUL  R31,R26
00098e 2df0      	MOV  R31,R0
00098f 9feb      	MUL  R30,R27
000990 0df0      	ADD  R31,R0
000991 9fea      	MUL  R30,R26
000992 2de0      	MOV  R30,R0
000993 0df1      	ADD  R31,R1
000994 9508      	RET
                 
                 __DIVW21U:
000995 2400      	CLR  R0
000996 2411      	CLR  R1
000997 e190      	LDI  R25,16
                 __DIVW21U1:
000998 0faa      	LSL  R26
000999 1fbb      	ROL  R27
00099a 1c00      	ROL  R0
00099b 1c11      	ROL  R1
00099c 1a0e      	SUB  R0,R30
00099d 0a1f      	SBC  R1,R31
00099e f418      	BRCC __DIVW21U2
00099f 0e0e      	ADD  R0,R30
0009a0 1e1f      	ADC  R1,R31
0009a1 c001      	RJMP __DIVW21U3
                 __DIVW21U2:
0009a2 60a1      	SBR  R26,1
                 __DIVW21U3:
0009a3 959a      	DEC  R25
0009a4 f799      	BRNE __DIVW21U1
0009a5 01fd      	MOVW R30,R26
0009a6 01d0      	MOVW R26,R0
0009a7 9508      	RET
                 
                 __MODW21U:
0009a8 dfec      	RCALL __DIVW21U
0009a9 01fd      	MOVW R30,R26
0009aa 9508      	RET
                 
                 __GETW1P:
0009ab 91ed      	LD   R30,X+
0009ac 91fc      	LD   R31,X
0009ad 9711      	SBIW R26,1
0009ae 9508      	RET
                 
                 __GETW1PF:
0009af 9005      	LPM  R0,Z+
0009b0 91f4      	LPM  R31,Z
0009b1 2de0      	MOV  R30,R0
0009b2 9508      	RET
                 
                 __PUTPARD1:
0009b3 937a      	ST   -Y,R23
0009b4 936a      	ST   -Y,R22
0009b5 93fa      	ST   -Y,R31
0009b6 93ea      	ST   -Y,R30
0009b7 9508      	RET
                 
                 __EEPROMRDB:
0009b8 99e1      	SBIC EECR,EEWE
0009b9 cffe      	RJMP __EEPROMRDB
0009ba 93ff      	PUSH R31
0009bb b7ff      	IN   R31,SREG
0009bc 94f8      	CLI
0009bd bbae      	OUT  EEARL,R26
0009be bbbf      	OUT  EEARH,R27
0009bf 9ae0      	SBI  EECR,EERE
0009c0 b3ed      	IN   R30,EEDR
0009c1 bfff      	OUT  SREG,R31
0009c2 91ff      	POP  R31
0009c3 9508      	RET
                 
                 __EEPROMWRB:
0009c4 9be1      	SBIS EECR,EEWE
0009c5 c002      	RJMP __EEPROMWRB1
0009c6 95a8      	WDR
0009c7 cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
0009c8 b79f      	IN   R25,SREG
0009c9 94f8      	CLI
0009ca bbae      	OUT  EEARL,R26
0009cb bbbf      	OUT  EEARH,R27
0009cc 9ae0      	SBI  EECR,EERE
0009cd b38d      	IN   R24,EEDR
0009ce 17e8      	CP   R30,R24
0009cf f019      	BREQ __EEPROMWRB0
0009d0 bbed      	OUT  EEDR,R30
0009d1 9ae2      	SBI  EECR,EEMWE
0009d2 9ae1      	SBI  EECR,EEWE
                 __EEPROMWRB0:
0009d3 bf9f      	OUT  SREG,R25
0009d4 9508      	RET
                 
                 __CPW02:
0009d5 2400      	CLR  R0
0009d6 160a      	CP   R0,R26
0009d7 060b      	CPC  R0,R27
0009d8 9508      	RET
                 
                 __SAVELOCR6:
0009d9 935a      	ST   -Y,R21
                 __SAVELOCR5:
0009da 934a      	ST   -Y,R20
                 __SAVELOCR4:
0009db 933a      	ST   -Y,R19
                 __SAVELOCR3:
0009dc 932a      	ST   -Y,R18
                 __SAVELOCR2:
0009dd 931a      	ST   -Y,R17
0009de 930a      	ST   -Y,R16
0009df 9508      	RET
                 
                 __LOADLOCR6:
0009e0 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0009e1 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0009e2 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0009e3 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0009e4 8119      	LDD  R17,Y+1
0009e5 8108      	LD   R16,Y
0009e6 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32A register use summary:
r0 :  35 r1 :  11 r2 :   0 r3 :   0 r4 :   0 r5 :   4 r6 :   4 r7 :   0 
r8 :   3 r9 :   0 r10:   2 r11:   1 r12:   3 r13:   1 r14:   0 r15:   4 
r16:  69 r17:  87 r18:  53 r19:  34 r20:  25 r21:  47 r22:  10 r23:   3 
r24:  15 r25:  10 r26: 278 r27:  92 r28:  26 r29:   1 r30: 687 r31: 160 
x  :  23 y  : 488 z  :  31 
Registers used: 29 out of 35 (82.9%)

ATmega32A instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  14 add   :  21 
adiw  :  39 and   :   8 andi  :  15 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :  42 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  12 
brlt  :   4 brmi  :   1 brne  :  75 brpl  :   1 brsh  :  19 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  : 124 
cbi   :   6 cbr   :   0 clc   :   0 clh   :   0 cli   :   3 cln   :   0 
clr   :  27 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   7 
cp    :  22 cpc   :   9 cpi   :  92 cpse  :   0 dec   :   4 des   :   0 
eor   :   1 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   4 ijmp  :   0 
in    :   5 inc   :   2 jmp   :  39 ld    :  43 ldd   : 252 ldi   : 197 
lds   :  29 lpm   :  30 lsl   :   3 lsr   :  15 mov   :  88 movw  :  44 
mul   :   5 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   5 
ori   :  14 out   :  48 pop   :  12 push  :  12 rcall :  41 ret   :  47 
reti  :   1 rjmp  : 141 rol   :   3 ror   :   0 sbc   :   3 sbci  :  12 
sbi   :  15 sbic  :   4 sbis  :   1 sbiw  :  38 sbr   :   1 sbrc  :   2 
sbrs  :  10 sec   :   0 seh   :   0 sei   :   1 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    : 157 std   :  70 sts   :  24 sub   :   9 subi  :  44 swap  :   0 
tst   :   8 wdr   :   2 
Instructions used: 65 out of 116 (56.0%)

ATmega32A memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0013ce   4472    598   5070   32768  15.5%
[.dseg] 0x000060 0x0004ab      0    587    587    2048  28.7%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 13 warnings
